(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{114:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),s=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=s(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),b=s(n),d=r,m=b["".concat(l,".").concat(d)]||b[d]||p[d]||i;return n?a.a.createElement(m,o(o({ref:t},u),{},{components:n})):a.a.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),i=(n(0),n(114)),l={id:"helper-buck-targets",title:"Helper Buck Targets"},o={unversionedId:"tutorials/helper-buck-targets",id:"tutorials/helper-buck-targets",isDocsHomePage:!1,title:"Helper Buck Targets",description:"Helper Buck Targets",source:"@site/docs/tutorials/helper-buck-targets.md",slug:"/tutorials/helper-buck-targets",permalink:"/antlir/docs/tutorials/helper-buck-targets",editUrl:"https://github.com/facebookincubator/antlir/edit/master/website/docs/tutorials/helper-buck-targets.md",version:"current",sidebar:"docs",previous:{title:"Defining an Image",permalink:"/antlir/docs/tutorials/defining-an-image"},next:{title:"Overview",permalink:"/antlir/docs/concepts/rpms/overview"}},c=[{value:"Helper Buck Targets",id:"helper-buck-targets",children:[{value:"<code>image.layer</code>",id:"imagelayer",children:[]},{value:"<code>image.*_unittest</code>",id:"image_unittest",children:[]},{value:"<code>image_chef_solo</code>",id:"image_chef_solo",children:[]},{value:"<code>vm.*_unittest</code>",id:"vm_unittest",children:[]}]}],u={toc:c};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"helper-buck-targets"},"Helper Buck Targets"),Object(i.b)("p",null,"Antlir exposes many different ",Object(i.b)("inlineCode",{parentName:"p"},"buck run")," helper targets that are invoked when appending a suffix to the target name. For example, an ",Object(i.b)("inlineCode",{parentName:"p"},"image.layer")," target named ",Object(i.b)("inlineCode",{parentName:"p"},"foo")," with helper target ",Object(i.b)("inlineCode",{parentName:"p"},"=container")," can be run with:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"buck run foo=container\n")),Object(i.b)("p",null,"These interactive helper targets may change and should not be used in automation without asking the Antlir team. In addition, any suffix that begins with a double underscore, such as ",Object(i.b)("inlineCode",{parentName:"p"},"__test_layer"),", is not to be relied upon at all and is strictly for implementation purposes."),Object(i.b)("h3",{id:"imagelayer"},Object(i.b)("inlineCode",{parentName:"h3"},"image.layer")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"=container")," will launch the user into an interactive shell inside the image."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"=systemd")," will boot ",Object(i.b)("inlineCode",{parentName:"li"},"systemd")," inside the image.")),Object(i.b)("h3",{id:"image_unittest"},Object(i.b)("inlineCode",{parentName:"h3"},"image.*_unittest")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"=container")," will launch the user into an interactive shell inside the image.")),Object(i.b)("h3",{id:"image_chef_solo"},Object(i.b)("inlineCode",{parentName:"h3"},"image_chef_solo")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"=debug-chef")," will launch the user into an interactive shell inside the image.")),Object(i.b)("h3",{id:"vm_unittest"},Object(i.b)("inlineCode",{parentName:"h3"},"vm.*_unittest")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"=vmtest")," will run the test binary located at ",Object(i.b)("inlineCode",{parentName:"li"},"/vmtest/test")," inside a vm with the latest stable release kernel inside the image and launch the user into an interactive shell via ssh.")))}s.isMDXComponent=!0}}]);