load("//third-party/rust:defs.bzl", "third_party_cxx_binary", "third_party_cxx_library", "third_party_rust_binary", "third_party_rust_library")

third_party_rust_library(
    name = "addr2line-0.13.0",
    srcs = ["vendor/addr2line-0.13.0/src/lazy.rs",
    "vendor/addr2line-0.13.0/src/lib.rs",
    ],
    deps = [],
    crate = "addr2line",
    crate_root = "vendor/addr2line-0.13.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:gimli",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "adler-0.2.3",
    srcs = ["vendor/adler-0.2.3/src/algo.rs",
    "vendor/adler-0.2.3/src/lib.rs",
    ],
    deps = [],
    crate = "adler",
    crate_root = "vendor/adler-0.2.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "ahash",
    srcs = ["vendor/ahash-0.7.4/src/aes_hash.rs",
    "vendor/ahash-0.7.4/src/convert.rs",
    "vendor/ahash-0.7.4/src/fallback_hash.rs",
    "vendor/ahash-0.7.4/src/hash_map.rs",
    "vendor/ahash-0.7.4/src/hash_quality_test.rs",
    "vendor/ahash-0.7.4/src/hash_set.rs",
    "vendor/ahash-0.7.4/src/lib.rs",
    "vendor/ahash-0.7.4/src/operations.rs",
    "vendor/ahash-0.7.4/src/random_state.rs",
    "vendor/ahash-0.7.4/src/specialize.rs",
    ],
    deps = [],
    crate = "ahash",
    crate_root = "vendor/ahash-0.7.4/src/lib.rs",
    edition = "2018",
    features = ["default",
    "runtime-rng",
    "std",
    "specialize",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:getrandom-0.2.2",
    "//generated/third-party/rust:once_cell",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "aho-corasick",
    srcs = ["vendor/aho-corasick-0.7.13/src/ahocorasick.rs",
    "vendor/aho-corasick-0.7.13/src/automaton.rs",
    "vendor/aho-corasick-0.7.13/src/buffer.rs",
    "vendor/aho-corasick-0.7.13/src/byte_frequencies.rs",
    "vendor/aho-corasick-0.7.13/src/classes.rs",
    "vendor/aho-corasick-0.7.13/src/dfa.rs",
    "vendor/aho-corasick-0.7.13/src/error.rs",
    "vendor/aho-corasick-0.7.13/src/lib.rs",
    "vendor/aho-corasick-0.7.13/src/nfa.rs",
    "vendor/aho-corasick-0.7.13/src/packed/api.rs",
    "vendor/aho-corasick-0.7.13/src/packed/mod.rs",
    "vendor/aho-corasick-0.7.13/src/packed/pattern.rs",
    "vendor/aho-corasick-0.7.13/src/packed/rabinkarp.rs",
    "vendor/aho-corasick-0.7.13/src/packed/teddy/compile.rs",
    "vendor/aho-corasick-0.7.13/src/packed/teddy/mod.rs",
    "vendor/aho-corasick-0.7.13/src/packed/teddy/runtime.rs",
    "vendor/aho-corasick-0.7.13/src/packed/tests.rs",
    "vendor/aho-corasick-0.7.13/src/packed/vector.rs",
    "vendor/aho-corasick-0.7.13/src/prefilter.rs",
    "vendor/aho-corasick-0.7.13/src/state_id.rs",
    "vendor/aho-corasick-0.7.13/src/tests.rs",
    ],
    deps = [],
    crate = "aho_corasick",
    crate_root = "vendor/aho-corasick-0.7.13/src/lib.rs",
    edition = "2015",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:memchr-2.4.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "annotate-snippets",
    srcs = ["vendor/annotate-snippets-0.9.0/src/display_list/from_snippet.rs",
    "vendor/annotate-snippets-0.9.0/src/display_list/mod.rs",
    "vendor/annotate-snippets-0.9.0/src/display_list/structs.rs",
    "vendor/annotate-snippets-0.9.0/src/formatter/mod.rs",
    "vendor/annotate-snippets-0.9.0/src/formatter/style.rs",
    "vendor/annotate-snippets-0.9.0/src/lib.rs",
    "vendor/annotate-snippets-0.9.0/src/snippet.rs",
    "vendor/annotate-snippets-0.9.0/src/stylesheets/color.rs",
    "vendor/annotate-snippets-0.9.0/src/stylesheets/mod.rs",
    "vendor/annotate-snippets-0.9.0/src/stylesheets/no_color.rs",
    ],
    deps = [],
    crate = "annotate_snippets",
    crate_root = "vendor/annotate-snippets-0.9.0/src/lib.rs",
    edition = "2018",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:unicode-width",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "ansi_term-0.11.0",
    srcs = ["vendor/ansi_term-0.11.0/src/ansi.rs",
    "vendor/ansi_term-0.11.0/src/debug.rs",
    "vendor/ansi_term-0.11.0/src/difference.rs",
    "vendor/ansi_term-0.11.0/src/display.rs",
    "vendor/ansi_term-0.11.0/src/lib.rs",
    "vendor/ansi_term-0.11.0/src/style.rs",
    "vendor/ansi_term-0.11.0/src/windows.rs",
    "vendor/ansi_term-0.11.0/src/write.rs",
    ],
    deps = [],
    crate = "ansi_term",
    crate_root = "vendor/ansi_term-0.11.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "anyhow",
    srcs = ["vendor/anyhow-1.0.34/src/backtrace.rs",
    "vendor/anyhow-1.0.34/src/chain.rs",
    "vendor/anyhow-1.0.34/src/context.rs",
    "vendor/anyhow-1.0.34/src/error.rs",
    "vendor/anyhow-1.0.34/src/fmt.rs",
    "vendor/anyhow-1.0.34/src/kind.rs",
    "vendor/anyhow-1.0.34/src/lib.rs",
    "vendor/anyhow-1.0.34/src/macros.rs",
    "vendor/anyhow-1.0.34/src/wrapper.rs",
    ],
    deps = [],
    crate = "anyhow",
    crate_root = "vendor/anyhow-1.0.34/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "--cfg=backtrace",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "argv",
    srcs = ["vendor/argv-0.1.2/src/lib.rs",],
    deps = [],
    crate = "argv",
    crate_root = "vendor/argv-0.1.2/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "ascii-canvas-2.0.0",
    srcs = ["vendor/ascii-canvas-2.0.0/src/lib.rs",
    "vendor/ascii-canvas-2.0.0/src/row.rs",
    "vendor/ascii-canvas-2.0.0/src/style.rs",
    "vendor/ascii-canvas-2.0.0/src/test.rs",
    ],
    deps = [],
    crate = "ascii_canvas",
    crate_root = "vendor/ascii-canvas-2.0.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:term-0.5.2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "async-trait",
    srcs = ["vendor/async-trait-0.1.51/src/args.rs",
    "vendor/async-trait-0.1.51/src/expand.rs",
    "vendor/async-trait-0.1.51/src/lib.rs",
    "vendor/async-trait-0.1.51/src/lifetime.rs",
    "vendor/async-trait-0.1.51/src/parse.rs",
    "vendor/async-trait-0.1.51/src/receiver.rs",
    ],
    deps = [],
    crate = "async_trait",
    crate_root = "vendor/async-trait-0.1.51/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :async-trait-0.1.51-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_binary(
    name = "async-trait-0.1.51-build-script-build",
    srcs = ["vendor/async-trait-0.1.51/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/async-trait-0.1.51/build.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "atty",
    srcs = ["vendor/atty-0.2.14/src/lib.rs",],
    deps = [],
    crate = "atty",
    crate_root = "vendor/atty-0.2.14/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "autocfg-0.1.7",
    srcs = ["vendor/autocfg-0.1.7/src/error.rs",
    "vendor/autocfg-0.1.7/src/lib.rs",
    "vendor/autocfg-0.1.7/src/tests.rs",
    "vendor/autocfg-0.1.7/src/version.rs",
    ],
    deps = [],
    crate = "autocfg",
    crate_root = "vendor/autocfg-0.1.7/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "autocfg-1.0.1",
    srcs = ["vendor/autocfg-1.0.1/src/error.rs",
    "vendor/autocfg-1.0.1/src/lib.rs",
    "vendor/autocfg-1.0.1/src/tests.rs",
    "vendor/autocfg-1.0.1/src/version.rs",
    ],
    deps = [],
    crate = "autocfg",
    crate_root = "vendor/autocfg-1.0.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "backtrace",
    srcs = ["vendor/backtrace-0.3.51/src/backtrace/dbghelp.rs",
    "vendor/backtrace-0.3.51/src/backtrace/libunwind.rs",
    "vendor/backtrace-0.3.51/src/backtrace/miri.rs",
    "vendor/backtrace-0.3.51/src/backtrace/mod.rs",
    "vendor/backtrace-0.3.51/src/backtrace/noop.rs",
    "vendor/backtrace-0.3.51/src/capture.rs",
    "vendor/backtrace-0.3.51/src/dbghelp.rs",
    "vendor/backtrace-0.3.51/src/lib.rs",
    "vendor/backtrace-0.3.51/src/print.rs",
    "vendor/backtrace-0.3.51/src/print/fuchsia.rs",
    "vendor/backtrace-0.3.51/src/symbolize/dbghelp.rs",
    "vendor/backtrace-0.3.51/src/symbolize/gimli.rs",
    "vendor/backtrace-0.3.51/src/symbolize/gimli/coff.rs",
    "vendor/backtrace-0.3.51/src/symbolize/gimli/elf.rs",
    "vendor/backtrace-0.3.51/src/symbolize/gimli/macho.rs",
    "vendor/backtrace-0.3.51/src/symbolize/gimli/mmap_fake.rs",
    "vendor/backtrace-0.3.51/src/symbolize/gimli/mmap_unix.rs",
    "vendor/backtrace-0.3.51/src/symbolize/gimli/mmap_windows.rs",
    "vendor/backtrace-0.3.51/src/symbolize/gimli/stash.rs",
    "vendor/backtrace-0.3.51/src/symbolize/libbacktrace.rs",
    "vendor/backtrace-0.3.51/src/symbolize/miri.rs",
    "vendor/backtrace-0.3.51/src/symbolize/mod.rs",
    "vendor/backtrace-0.3.51/src/symbolize/noop.rs",
    "vendor/backtrace-0.3.51/src/types.rs",
    "vendor/backtrace-0.3.51/src/windows.rs",
    ],
    deps = [],
    crate = "backtrace",
    crate_root = "vendor/backtrace-0.3.51/src/lib.rs",
    edition = "2018",
    features = ["addr2line",
    "default",
    "gimli-symbolize",
    "miniz_oxide",
    "object",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:addr2line-0.13.0",
    "//generated/third-party/rust:cfg-if",
    "//generated/third-party/rust:libc",
    "//generated/third-party/rust:miniz_oxide-0.4.2",
    "//generated/third-party/rust:object-0.20.0",
    "//generated/third-party/rust:rustc-demangle",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "OUT_DIR": ".",
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "base64",
    srcs = ["vendor/base64-0.11.0/src/chunked_encoder.rs",
    "vendor/base64-0.11.0/src/decode.rs",
    "vendor/base64-0.11.0/src/display.rs",
    "vendor/base64-0.11.0/src/encode.rs",
    "vendor/base64-0.11.0/src/lib.rs",
    "vendor/base64-0.11.0/src/tables.rs",
    "vendor/base64-0.11.0/src/tests.rs",
    "vendor/base64-0.11.0/src/write/encoder.rs",
    "vendor/base64-0.11.0/src/write/encoder_tests.rs",
    "vendor/base64-0.11.0/src/write/mod.rs",
    ],
    deps = [],
    crate = "base64",
    crate_root = "vendor/base64-0.11.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "base64-0.12.3",
    srcs = ["vendor/base64-0.12.3/src/chunked_encoder.rs",
    "vendor/base64-0.12.3/src/decode.rs",
    "vendor/base64-0.12.3/src/display.rs",
    "vendor/base64-0.12.3/src/encode.rs",
    "vendor/base64-0.12.3/src/lib.rs",
    "vendor/base64-0.12.3/src/read/decoder.rs",
    "vendor/base64-0.12.3/src/read/decoder_tests.rs",
    "vendor/base64-0.12.3/src/read/mod.rs",
    "vendor/base64-0.12.3/src/tables.rs",
    "vendor/base64-0.12.3/src/tests.rs",
    "vendor/base64-0.12.3/src/write/encoder.rs",
    "vendor/base64-0.12.3/src/write/encoder_tests.rs",
    "vendor/base64-0.12.3/src/write/mod.rs",
    ],
    deps = [],
    crate = "base64",
    crate_root = "vendor/base64-0.12.3/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "base64-0.13.0",
    srcs = ["vendor/base64-0.13.0/src/chunked_encoder.rs",
    "vendor/base64-0.13.0/src/decode.rs",
    "vendor/base64-0.13.0/src/display.rs",
    "vendor/base64-0.13.0/src/encode.rs",
    "vendor/base64-0.13.0/src/lib.rs",
    "vendor/base64-0.13.0/src/read/decoder.rs",
    "vendor/base64-0.13.0/src/read/decoder_tests.rs",
    "vendor/base64-0.13.0/src/read/mod.rs",
    "vendor/base64-0.13.0/src/tables.rs",
    "vendor/base64-0.13.0/src/tests.rs",
    "vendor/base64-0.13.0/src/write/encoder.rs",
    "vendor/base64-0.13.0/src/write/encoder_string_writer.rs",
    "vendor/base64-0.13.0/src/write/encoder_tests.rs",
    "vendor/base64-0.13.0/src/write/mod.rs",
    ],
    deps = [],
    crate = "base64",
    crate_root = "vendor/base64-0.13.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "beef-0.4.4",
    srcs = ["vendor/beef-0.4.4/src/generic.rs",
    "vendor/beef-0.4.4/src/lean.rs",
    "vendor/beef-0.4.4/src/lib.rs",
    "vendor/beef-0.4.4/src/serde.rs",
    "vendor/beef-0.4.4/src/traits.rs",
    "vendor/beef-0.4.4/src/wide.rs",
    ],
    deps = [],
    crate = "beef",
    crate_root = "vendor/beef-0.4.4/src/lib.rs",
    edition = "2018",
    features = ["default",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "bit-set",
    srcs = ["vendor/bit-set-0.5.2/src/lib.rs",],
    deps = [],
    crate = "bit_set",
    crate_root = "vendor/bit-set-0.5.2/src/lib.rs",
    edition = "2015",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bit-vec",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "bit-vec",
    srcs = ["vendor/bit-vec-0.6.2/src/lib.rs",],
    deps = [],
    crate = "bit_vec",
    crate_root = "vendor/bit-vec-0.6.2/src/lib.rs",
    edition = "2015",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "bitflags",
    srcs = ["vendor/bitflags-1.2.1/src/example_generated.rs",
    "vendor/bitflags-1.2.1/src/lib.rs",
    ],
    deps = [],
    crate = "bitflags",
    crate_root = "vendor/bitflags-1.2.1/src/lib.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :bitflags-1.2.1-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "bitflags-1.2.1-build-script-build",
    srcs = ["vendor/bitflags-1.2.1/build.rs",
    "vendor/bitflags-1.2.1/src/example_generated.rs",
    "vendor/bitflags-1.2.1/src/lib.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/bitflags-1.2.1/build.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "block-buffer-0.7.3",
    srcs = ["vendor/block-buffer-0.7.3/src/lib.rs",],
    deps = [],
    crate = "block_buffer",
    crate_root = "vendor/block-buffer-0.7.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:block-padding-0.1.5",
    "//generated/third-party/rust:byte-tools-0.3.1",
    "//generated/third-party/rust:byteorder",
    "//generated/third-party/rust:generic-array-0.12.4",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "block-buffer-0.9.0",
    srcs = ["vendor/block-buffer-0.9.0/src/lib.rs",],
    deps = [],
    crate = "block_buffer",
    crate_root = "vendor/block-buffer-0.9.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:generic-array",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "block-padding-0.1.5",
    srcs = ["vendor/block-padding-0.1.5/src/lib.rs",],
    deps = [],
    crate = "block_padding",
    crate_root = "vendor/block-padding-0.1.5/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:byte-tools-0.3.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "buf_redux-0.8.4",
    srcs = ["vendor/buf_redux-0.8.4/src/benches.rs",
    "vendor/buf_redux-0.8.4/src/buffer/mod.rs",
    "vendor/buf_redux-0.8.4/src/buffer/slice_deque_buf.rs",
    "vendor/buf_redux-0.8.4/src/buffer/std_buf.rs",
    "vendor/buf_redux-0.8.4/src/lib.rs",
    "vendor/buf_redux-0.8.4/src/nightly.rs",
    "vendor/buf_redux-0.8.4/src/policy.rs",
    "vendor/buf_redux-0.8.4/src/ringbuf_tests.rs",
    "vendor/buf_redux-0.8.4/src/std_tests.rs",
    ],
    deps = [],
    crate = "buf_redux",
    crate_root = "vendor/buf_redux-0.8.4/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:memchr-2.4.1",
    "//generated/third-party/rust:safemem-0.3.3",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "bufsize",
    srcs = ["vendor/bufsize-1.0.0/src/lib.rs",],
    deps = [],
    crate = "bufsize",
    crate_root = "vendor/bufsize-1.0.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bytes",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "bumpalo",
    srcs = ["vendor/bumpalo-3.4.0/src/alloc.rs",
    "vendor/bumpalo-3.4.0/src/boxed.rs",
    "vendor/bumpalo-3.4.0/src/collections/mod.rs",
    "vendor/bumpalo-3.4.0/src/collections/raw_vec.rs",
    "vendor/bumpalo-3.4.0/src/collections/str/lossy.rs",
    "vendor/bumpalo-3.4.0/src/collections/str/mod.rs",
    "vendor/bumpalo-3.4.0/src/collections/string.rs",
    "vendor/bumpalo-3.4.0/src/collections/vec.rs",
    "vendor/bumpalo-3.4.0/src/lib.rs",
    ],
    deps = [],
    crate = "bumpalo",
    crate_root = "vendor/bumpalo-3.4.0/src/lib.rs",
    edition = "2018",
    features = ["collections",
    "default",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "byte-tools-0.3.1",
    srcs = ["vendor/byte-tools-0.3.1/src/lib.rs",],
    deps = [],
    crate = "byte_tools",
    crate_root = "vendor/byte-tools-0.3.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "byteorder",
    srcs = ["vendor/byteorder-1.3.4/src/io.rs",
    "vendor/byteorder-1.3.4/src/lib.rs",
    ],
    deps = [],
    crate = "byteorder",
    crate_root = "vendor/byteorder-1.3.4/src/lib.rs",
    edition = "2015",
    features = ["default",
    "i128",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :byteorder-1.3.4-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "byteorder-1.3.4-build-script-build",
    srcs = ["vendor/byteorder-1.3.4/benches/bench.rs",
    "vendor/byteorder-1.3.4/build.rs",
    "vendor/byteorder-1.3.4/src/io.rs",
    "vendor/byteorder-1.3.4/src/lib.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/byteorder-1.3.4/build.rs",
    edition = "2015",
    features = ["default",
    "i128",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "bytes",
    srcs = ["vendor/bytes-1.0.0/src/buf/buf_impl.rs",
    "vendor/bytes-1.0.0/src/buf/buf_mut.rs",
    "vendor/bytes-1.0.0/src/buf/chain.rs",
    "vendor/bytes-1.0.0/src/buf/iter.rs",
    "vendor/bytes-1.0.0/src/buf/limit.rs",
    "vendor/bytes-1.0.0/src/buf/mod.rs",
    "vendor/bytes-1.0.0/src/buf/reader.rs",
    "vendor/bytes-1.0.0/src/buf/take.rs",
    "vendor/bytes-1.0.0/src/buf/uninit_slice.rs",
    "vendor/bytes-1.0.0/src/buf/vec_deque.rs",
    "vendor/bytes-1.0.0/src/buf/writer.rs",
    "vendor/bytes-1.0.0/src/bytes.rs",
    "vendor/bytes-1.0.0/src/bytes_mut.rs",
    "vendor/bytes-1.0.0/src/fmt/debug.rs",
    "vendor/bytes-1.0.0/src/fmt/hex.rs",
    "vendor/bytes-1.0.0/src/fmt/mod.rs",
    "vendor/bytes-1.0.0/src/lib.rs",
    "vendor/bytes-1.0.0/src/loom.rs",
    "vendor/bytes-1.0.0/src/serde.rs",
    ],
    deps = [],
    crate = "bytes",
    crate_root = "vendor/bytes-1.0.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "serde",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:serde",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "bytes-05",
    srcs = ["vendor/bytes-0.5.6/src/buf/buf_impl.rs",
    "vendor/bytes-0.5.6/src/buf/buf_mut.rs",
    "vendor/bytes-0.5.6/src/buf/ext/chain.rs",
    "vendor/bytes-0.5.6/src/buf/ext/limit.rs",
    "vendor/bytes-0.5.6/src/buf/ext/mod.rs",
    "vendor/bytes-0.5.6/src/buf/ext/reader.rs",
    "vendor/bytes-0.5.6/src/buf/ext/take.rs",
    "vendor/bytes-0.5.6/src/buf/ext/writer.rs",
    "vendor/bytes-0.5.6/src/buf/iter.rs",
    "vendor/bytes-0.5.6/src/buf/mod.rs",
    "vendor/bytes-0.5.6/src/buf/vec_deque.rs",
    "vendor/bytes-0.5.6/src/bytes.rs",
    "vendor/bytes-0.5.6/src/bytes_mut.rs",
    "vendor/bytes-0.5.6/src/fmt/debug.rs",
    "vendor/bytes-0.5.6/src/fmt/hex.rs",
    "vendor/bytes-0.5.6/src/fmt/mod.rs",
    "vendor/bytes-0.5.6/src/lib.rs",
    "vendor/bytes-0.5.6/src/loom.rs",
    "vendor/bytes-0.5.6/src/serde.rs",
    ],
    deps = [],
    crate = "bytes",
    crate_root = "vendor/bytes-0.5.6/src/lib.rs",
    edition = "2018",
    features = ["default",
    "serde",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:serde",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "cfg-if",
    srcs = ["vendor/cfg-if-0.1.10/src/lib.rs",],
    deps = [],
    crate = "cfg_if",
    crate_root = "vendor/cfg-if-0.1.10/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "cfg-if-1.0.0",
    srcs = ["vendor/cfg-if-1.0.0/src/lib.rs",],
    deps = [],
    crate = "cfg_if",
    crate_root = "vendor/cfg-if-1.0.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "chrono",
    srcs = ["vendor/chrono-0.4.19/src/date.rs",
    "vendor/chrono-0.4.19/src/datetime.rs",
    "vendor/chrono-0.4.19/src/div.rs",
    "vendor/chrono-0.4.19/src/format/locales.rs",
    "vendor/chrono-0.4.19/src/format/mod.rs",
    "vendor/chrono-0.4.19/src/format/parse.rs",
    "vendor/chrono-0.4.19/src/format/parsed.rs",
    "vendor/chrono-0.4.19/src/format/scan.rs",
    "vendor/chrono-0.4.19/src/format/strftime.rs",
    "vendor/chrono-0.4.19/src/lib.rs",
    "vendor/chrono-0.4.19/src/naive/date.rs",
    "vendor/chrono-0.4.19/src/naive/datetime.rs",
    "vendor/chrono-0.4.19/src/naive/internals.rs",
    "vendor/chrono-0.4.19/src/naive/isoweek.rs",
    "vendor/chrono-0.4.19/src/naive/time.rs",
    "vendor/chrono-0.4.19/src/offset/fixed.rs",
    "vendor/chrono-0.4.19/src/offset/local.rs",
    "vendor/chrono-0.4.19/src/offset/mod.rs",
    "vendor/chrono-0.4.19/src/offset/utc.rs",
    "vendor/chrono-0.4.19/src/oldtime.rs",
    "vendor/chrono-0.4.19/src/round.rs",
    "vendor/chrono-0.4.19/src/sys.rs",
    "vendor/chrono-0.4.19/src/sys/stub.rs",
    "vendor/chrono-0.4.19/src/sys/unix.rs",
    "vendor/chrono-0.4.19/src/sys/windows.rs",
    ],
    deps = [],
    crate = "chrono",
    crate_root = "vendor/chrono-0.4.19/src/lib.rs",
    edition = "2015",
    features = ["alloc",
    "clock",
    "default",
    "libc",
    "serde",
    "std",
    "time",
    "winapi",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",
    "//generated/third-party/rust:num-integer-0.1.44",
    "//generated/third-party/rust:num-traits",
    "//generated/third-party/rust:serde",
    "//generated/third-party/rust:time-01",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "clap",
    srcs = ["vendor/clap-2.33.3/src/app/help.rs",
    "vendor/clap-2.33.3/src/app/meta.rs",
    "vendor/clap-2.33.3/src/app/mod.rs",
    "vendor/clap-2.33.3/src/app/parser.rs",
    "vendor/clap-2.33.3/src/app/settings.rs",
    "vendor/clap-2.33.3/src/app/usage.rs",
    "vendor/clap-2.33.3/src/app/validator.rs",
    "vendor/clap-2.33.3/src/args/any_arg.rs",
    "vendor/clap-2.33.3/src/args/arg.rs",
    "vendor/clap-2.33.3/src/args/arg_builder/base.rs",
    "vendor/clap-2.33.3/src/args/arg_builder/flag.rs",
    "vendor/clap-2.33.3/src/args/arg_builder/mod.rs",
    "vendor/clap-2.33.3/src/args/arg_builder/option.rs",
    "vendor/clap-2.33.3/src/args/arg_builder/positional.rs",
    "vendor/clap-2.33.3/src/args/arg_builder/switched.rs",
    "vendor/clap-2.33.3/src/args/arg_builder/valued.rs",
    "vendor/clap-2.33.3/src/args/arg_matcher.rs",
    "vendor/clap-2.33.3/src/args/arg_matches.rs",
    "vendor/clap-2.33.3/src/args/group.rs",
    "vendor/clap-2.33.3/src/args/macros.rs",
    "vendor/clap-2.33.3/src/args/matched_arg.rs",
    "vendor/clap-2.33.3/src/args/mod.rs",
    "vendor/clap-2.33.3/src/args/settings.rs",
    "vendor/clap-2.33.3/src/args/subcommand.rs",
    "vendor/clap-2.33.3/src/completions/bash.rs",
    "vendor/clap-2.33.3/src/completions/elvish.rs",
    "vendor/clap-2.33.3/src/completions/fish.rs",
    "vendor/clap-2.33.3/src/completions/macros.rs",
    "vendor/clap-2.33.3/src/completions/mod.rs",
    "vendor/clap-2.33.3/src/completions/powershell.rs",
    "vendor/clap-2.33.3/src/completions/shell.rs",
    "vendor/clap-2.33.3/src/completions/zsh.rs",
    "vendor/clap-2.33.3/src/errors.rs",
    "vendor/clap-2.33.3/src/fmt.rs",
    "vendor/clap-2.33.3/src/lib.rs",
    "vendor/clap-2.33.3/src/macros.rs",
    "vendor/clap-2.33.3/src/map.rs",
    "vendor/clap-2.33.3/src/osstringext.rs",
    "vendor/clap-2.33.3/src/strext.rs",
    "vendor/clap-2.33.3/src/suggestions.rs",
    "vendor/clap-2.33.3/src/usage_parser.rs",
    ],
    deps = [],
    crate = "clap",
    crate_root = "vendor/clap-2.33.3/src/lib.rs",
    edition = "2015",
    features = ["ansi_term",
    "atty",
    "color",
    "default",
    "strsim",
    "suggestions",
    "term_size",
    "vec_map",
    "wrap_help",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:atty",
    "//generated/third-party/rust:bitflags",
    "//generated/third-party/rust:strsim-0.8.0",
    "//generated/third-party/rust:term_size",
    "//generated/third-party/rust:textwrap",
    "//generated/third-party/rust:unicode-width",
    "//generated/third-party/rust:vec_map",
    "//generated/third-party/rust:ansi_term-0.11.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "codespan-reporting-0.11.0",
    srcs = ["vendor/codespan-reporting-0.11.0/src/diagnostic.rs",
    "vendor/codespan-reporting-0.11.0/src/files.rs",
    "vendor/codespan-reporting-0.11.0/src/lib.rs",
    "vendor/codespan-reporting-0.11.0/src/term.rs",
    "vendor/codespan-reporting-0.11.0/src/term/config.rs",
    "vendor/codespan-reporting-0.11.0/src/term/renderer.rs",
    "vendor/codespan-reporting-0.11.0/src/term/views.rs",
    ],
    deps = [],
    crate = "codespan_reporting",
    crate_root = "vendor/codespan-reporting-0.11.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:termcolor",
    "//generated/third-party/rust:unicode-width",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "const-cstr",
    srcs = ["vendor/const-cstr-0.3.0/src/lib.rs",],
    deps = [],
    crate = "const_cstr",
    crate_root = "vendor/const-cstr-0.3.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "const_fn-0.4.2",
    srcs = ["vendor/const_fn-0.4.2/src/ast.rs",
    "vendor/const_fn-0.4.2/src/error.rs",
    "vendor/const_fn-0.4.2/src/lib.rs",
    "vendor/const_fn-0.4.2/src/to_tokens.rs",
    "vendor/const_fn-0.4.2/src/utils.rs",
    ],
    deps = [],
    crate = "const_fn",
    crate_root = "vendor/const_fn-0.4.2/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
        "//third-party/rust:const_fn-0.4.2-build-script-build-srcs=version.rs": "vendor/const_fn-0.4.2/src/version.rs",
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "OUT_DIR": ".",
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_binary(
    name = "const_fn-0.4.2-build-script-build",
    srcs = ["vendor/const_fn-0.4.2/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/const_fn-0.4.2/build.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "OUT_DIR": ".",
    },
    unittests = False,
)
third_party_rust_library(
    name = "cpuid-bool-0.1.2",
    srcs = ["vendor/cpuid-bool-0.1.2/src/lib.rs",],
    deps = [],
    crate = "cpuid_bool",
    crate_root = "vendor/cpuid-bool-0.1.2/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "crossbeam-channel",
    srcs = ["vendor/crossbeam-channel-0.5.0/src/channel.rs",
    "vendor/crossbeam-channel-0.5.0/src/context.rs",
    "vendor/crossbeam-channel-0.5.0/src/counter.rs",
    "vendor/crossbeam-channel-0.5.0/src/err.rs",
    "vendor/crossbeam-channel-0.5.0/src/flavors/array.rs",
    "vendor/crossbeam-channel-0.5.0/src/flavors/at.rs",
    "vendor/crossbeam-channel-0.5.0/src/flavors/list.rs",
    "vendor/crossbeam-channel-0.5.0/src/flavors/mod.rs",
    "vendor/crossbeam-channel-0.5.0/src/flavors/never.rs",
    "vendor/crossbeam-channel-0.5.0/src/flavors/tick.rs",
    "vendor/crossbeam-channel-0.5.0/src/flavors/zero.rs",
    "vendor/crossbeam-channel-0.5.0/src/lib.rs",
    "vendor/crossbeam-channel-0.5.0/src/select.rs",
    "vendor/crossbeam-channel-0.5.0/src/select_macro.rs",
    "vendor/crossbeam-channel-0.5.0/src/utils.rs",
    "vendor/crossbeam-channel-0.5.0/src/waker.rs",
    ],
    deps = [],
    crate = "crossbeam_channel",
    crate_root = "vendor/crossbeam-channel-0.5.0/src/lib.rs",
    edition = "2018",
    features = ["crossbeam-utils",
    "default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:crossbeam-utils-0.8.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "crossbeam-channel-0.4.4",
    srcs = ["vendor/crossbeam-channel-0.4.4/src/channel.rs",
    "vendor/crossbeam-channel-0.4.4/src/context.rs",
    "vendor/crossbeam-channel-0.4.4/src/counter.rs",
    "vendor/crossbeam-channel-0.4.4/src/err.rs",
    "vendor/crossbeam-channel-0.4.4/src/flavors/after.rs",
    "vendor/crossbeam-channel-0.4.4/src/flavors/array.rs",
    "vendor/crossbeam-channel-0.4.4/src/flavors/list.rs",
    "vendor/crossbeam-channel-0.4.4/src/flavors/mod.rs",
    "vendor/crossbeam-channel-0.4.4/src/flavors/never.rs",
    "vendor/crossbeam-channel-0.4.4/src/flavors/tick.rs",
    "vendor/crossbeam-channel-0.4.4/src/flavors/zero.rs",
    "vendor/crossbeam-channel-0.4.4/src/lib.rs",
    "vendor/crossbeam-channel-0.4.4/src/select.rs",
    "vendor/crossbeam-channel-0.4.4/src/select_macro.rs",
    "vendor/crossbeam-channel-0.4.4/src/utils.rs",
    "vendor/crossbeam-channel-0.4.4/src/waker.rs",
    ],
    deps = [],
    crate = "crossbeam_channel",
    crate_root = "vendor/crossbeam-channel-0.4.4/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:crossbeam-utils-0.7.2",
    "//generated/third-party/rust:maybe-uninit-2.0.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "crossbeam-deque-0.8.0",
    srcs = ["vendor/crossbeam-deque-0.8.0/src/deque.rs",
    "vendor/crossbeam-deque-0.8.0/src/lib.rs",
    ],
    deps = [],
    crate = "crossbeam_deque",
    crate_root = "vendor/crossbeam-deque-0.8.0/src/lib.rs",
    edition = "2018",
    features = ["crossbeam-epoch",
    "crossbeam-utils",
    "default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:crossbeam-epoch-0.9.1",
    "//generated/third-party/rust:crossbeam-utils-0.8.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "crossbeam-epoch-0.9.1",
    srcs = ["vendor/crossbeam-epoch-0.9.1/src/atomic.rs",
    "vendor/crossbeam-epoch-0.9.1/src/collector.rs",
    "vendor/crossbeam-epoch-0.9.1/src/default.rs",
    "vendor/crossbeam-epoch-0.9.1/src/deferred.rs",
    "vendor/crossbeam-epoch-0.9.1/src/epoch.rs",
    "vendor/crossbeam-epoch-0.9.1/src/guard.rs",
    "vendor/crossbeam-epoch-0.9.1/src/internal.rs",
    "vendor/crossbeam-epoch-0.9.1/src/lib.rs",
    "vendor/crossbeam-epoch-0.9.1/src/sync/list.rs",
    "vendor/crossbeam-epoch-0.9.1/src/sync/mod.rs",
    "vendor/crossbeam-epoch-0.9.1/src/sync/queue.rs",
    ],
    deps = [],
    crate = "crossbeam_epoch",
    crate_root = "vendor/crossbeam-epoch-0.9.1/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "lazy_static",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:const_fn-0.4.2",
    "//generated/third-party/rust:crossbeam-utils-0.8.0",
    "//generated/third-party/rust:lazy_static",
    "//generated/third-party/rust:memoffset",
    "//generated/third-party/rust:scopeguard",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "crossbeam-utils-0.7.2",
    srcs = ["vendor/crossbeam-utils-0.7.2/src/atomic/atomic_cell.rs",
    "vendor/crossbeam-utils-0.7.2/src/atomic/consume.rs",
    "vendor/crossbeam-utils-0.7.2/src/atomic/mod.rs",
    "vendor/crossbeam-utils-0.7.2/src/atomic/seq_lock.rs",
    "vendor/crossbeam-utils-0.7.2/src/atomic/seq_lock_wide.rs",
    "vendor/crossbeam-utils-0.7.2/src/backoff.rs",
    "vendor/crossbeam-utils-0.7.2/src/cache_padded.rs",
    "vendor/crossbeam-utils-0.7.2/src/lib.rs",
    "vendor/crossbeam-utils-0.7.2/src/sync/mod.rs",
    "vendor/crossbeam-utils-0.7.2/src/sync/parker.rs",
    "vendor/crossbeam-utils-0.7.2/src/sync/sharded_lock.rs",
    "vendor/crossbeam-utils-0.7.2/src/sync/wait_group.rs",
    "vendor/crossbeam-utils-0.7.2/src/thread.rs",
    ],
    deps = [],
    crate = "crossbeam_utils",
    crate_root = "vendor/crossbeam-utils-0.7.2/src/lib.rs",
    edition = "2015",
    features = ["default",
    "lazy_static",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if",
    "//generated/third-party/rust:lazy_static",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :crossbeam-utils-0.7.2-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "crossbeam-utils-0.7.2-build-script-build",
    srcs = ["vendor/crossbeam-utils-0.7.2/benches/atomic_cell.rs",
    "vendor/crossbeam-utils-0.7.2/build.rs",
    "vendor/crossbeam-utils-0.7.2/src/atomic/atomic_cell.rs",
    "vendor/crossbeam-utils-0.7.2/src/atomic/consume.rs",
    "vendor/crossbeam-utils-0.7.2/src/atomic/mod.rs",
    "vendor/crossbeam-utils-0.7.2/src/atomic/seq_lock.rs",
    "vendor/crossbeam-utils-0.7.2/src/atomic/seq_lock_wide.rs",
    "vendor/crossbeam-utils-0.7.2/src/backoff.rs",
    "vendor/crossbeam-utils-0.7.2/src/cache_padded.rs",
    "vendor/crossbeam-utils-0.7.2/src/lib.rs",
    "vendor/crossbeam-utils-0.7.2/src/sync/mod.rs",
    "vendor/crossbeam-utils-0.7.2/src/sync/parker.rs",
    "vendor/crossbeam-utils-0.7.2/src/sync/sharded_lock.rs",
    "vendor/crossbeam-utils-0.7.2/src/sync/wait_group.rs",
    "vendor/crossbeam-utils-0.7.2/src/thread.rs",
    "vendor/crossbeam-utils-0.7.2/tests/atomic_cell.rs",
    "vendor/crossbeam-utils-0.7.2/tests/cache_padded.rs",
    "vendor/crossbeam-utils-0.7.2/tests/parker.rs",
    "vendor/crossbeam-utils-0.7.2/tests/sharded_lock.rs",
    "vendor/crossbeam-utils-0.7.2/tests/thread.rs",
    "vendor/crossbeam-utils-0.7.2/tests/wait_group.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/crossbeam-utils-0.7.2/build.rs",
    edition = "2015",
    features = ["default",
    "lazy_static",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:autocfg-1.0.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "crossbeam-utils-0.8.0",
    srcs = ["vendor/crossbeam-utils-0.8.0/src/atomic/atomic_cell.rs",
    "vendor/crossbeam-utils-0.8.0/src/atomic/consume.rs",
    "vendor/crossbeam-utils-0.8.0/src/atomic/mod.rs",
    "vendor/crossbeam-utils-0.8.0/src/atomic/seq_lock.rs",
    "vendor/crossbeam-utils-0.8.0/src/atomic/seq_lock_wide.rs",
    "vendor/crossbeam-utils-0.8.0/src/backoff.rs",
    "vendor/crossbeam-utils-0.8.0/src/cache_padded.rs",
    "vendor/crossbeam-utils-0.8.0/src/lib.rs",
    "vendor/crossbeam-utils-0.8.0/src/sync/mod.rs",
    "vendor/crossbeam-utils-0.8.0/src/sync/parker.rs",
    "vendor/crossbeam-utils-0.8.0/src/sync/sharded_lock.rs",
    "vendor/crossbeam-utils-0.8.0/src/sync/wait_group.rs",
    "vendor/crossbeam-utils-0.8.0/src/thread.rs",
    ],
    deps = [],
    crate = "crossbeam_utils",
    crate_root = "vendor/crossbeam-utils-0.8.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "lazy_static",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:const_fn-0.4.2",
    "//generated/third-party/rust:lazy_static",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :crossbeam-utils-0.8.0-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "crossbeam-utils-0.8.0-build-script-build",
    srcs = ["vendor/crossbeam-utils-0.8.0/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/crossbeam-utils-0.8.0/build.rs",
    edition = "2018",
    features = ["default",
    "lazy_static",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:autocfg-1.0.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "ct-logs-0.8.0",
    srcs = ["vendor/ct-logs-0.8.0/src/lib.rs",],
    deps = [],
    crate = "ct_logs",
    crate_root = "vendor/ct-logs-0.8.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:sct-0.6.0",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "cxx",
    srcs = ["vendor/cxx-1.0.54/src/cxx_string.rs",
    "vendor/cxx-1.0.54/src/cxx_vector.rs",
    "vendor/cxx-1.0.54/src/exception.rs",
    "vendor/cxx-1.0.54/src/extern_type.rs",
    "vendor/cxx-1.0.54/src/fmt.rs",
    "vendor/cxx-1.0.54/src/function.rs",
    "vendor/cxx-1.0.54/src/lib.rs",
    "vendor/cxx-1.0.54/src/macros/assert.rs",
    "vendor/cxx-1.0.54/src/macros/concat.rs",
    "vendor/cxx-1.0.54/src/macros/mod.rs",
    "vendor/cxx-1.0.54/src/memory.rs",
    "vendor/cxx-1.0.54/src/opaque.rs",
    "vendor/cxx-1.0.54/src/result.rs",
    "vendor/cxx-1.0.54/src/rust_slice.rs",
    "vendor/cxx-1.0.54/src/rust_str.rs",
    "vendor/cxx-1.0.54/src/rust_string.rs",
    "vendor/cxx-1.0.54/src/rust_type.rs",
    "vendor/cxx-1.0.54/src/rust_vec.rs",
    "vendor/cxx-1.0.54/src/shared_ptr.rs",
    "vendor/cxx-1.0.54/src/symbols/exception.rs",
    "vendor/cxx-1.0.54/src/symbols/mod.rs",
    "vendor/cxx-1.0.54/src/symbols/rust_slice.rs",
    "vendor/cxx-1.0.54/src/symbols/rust_str.rs",
    "vendor/cxx-1.0.54/src/symbols/rust_string.rs",
    "vendor/cxx-1.0.54/src/symbols/rust_vec.rs",
    "vendor/cxx-1.0.54/src/type_id.rs",
    "vendor/cxx-1.0.54/src/unique_ptr.rs",
    "vendor/cxx-1.0.54/src/unwind.rs",
    "vendor/cxx-1.0.54/src/vector.rs",
    "vendor/cxx-1.0.54/src/weak_ptr.rs",
    ],
    deps = [],
    crate = "cxx",
    crate_root = "vendor/cxx-1.0.54/src/lib.rs",
    edition = "2018",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cxx-core",
    "//generated/third-party/rust:cxxbridge-macro-1.0.54",
    "//generated/third-party/rust:link-cplusplus-1.0.3",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_cxx_library(
    name = "cxx-core",
    srcs = ["vendor/cxx-1.0.54/src/cxx.cc",],
    deps = [],
    headers = [],
    header_namespace = "rust",
    exported_headers = {
        "cxx.h": "vendor/cxx-1.0.54/include/cxx.h",
    },
)
third_party_rust_library(
    name = "cxxbridge-cmd",
    srcs = ["vendor/cxxbridge-cmd-1.0.54/src/lib.rs",],
    deps = [],
    crate = "cxxbridge_cmd",
    crate_root = "vendor/cxxbridge-cmd-1.0.54/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:clap",
    "//generated/third-party/rust:codespan-reporting-0.11.0",
    "//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "CARGO_PKG_AUTHORS": "",
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "cxxbridge-cmd-cxxbridge",
    srcs = ["vendor/cxxbridge-cmd-1.0.54/src/app.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/block.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/builtin.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/check.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/error.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/file.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/fs.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/ifndef.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/include.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/include/cxx.h",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/mod.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/namespace.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/nested.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/out.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/gen/write.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/main.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/output.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/atom.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/attrs.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/check.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/derive.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/discriminant.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/doc.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/error.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/file.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/ident.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/impls.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/improper.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/instantiate.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/mangle.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/map.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/mod.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/names.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/namespace.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/parse.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/pod.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/qualified.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/report.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/resolve.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/set.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/symbol.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/tokens.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/toposort.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/trivial.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/types.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/syntax/visit.rs",
    "vendor/cxxbridge-cmd-1.0.54/src/test.rs",
    ],
    deps = [],
    crate = "cxxbridge",
    crate_root = "vendor/cxxbridge-cmd-1.0.54/src/main.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:clap",
    "//generated/third-party/rust:codespan-reporting-0.11.0",
    "//generated/third-party/rust:cxxbridge-cmd",
    "//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "CARGO_PKG_AUTHORS": "",
    },
    unittests = False,
)
third_party_rust_library(
    name = "cxxbridge-macro-1.0.54",
    srcs = ["vendor/cxxbridge-macro-1.0.54/src/clang.rs",
    "vendor/cxxbridge-macro-1.0.54/src/derive.rs",
    "vendor/cxxbridge-macro-1.0.54/src/expand.rs",
    "vendor/cxxbridge-macro-1.0.54/src/generics.rs",
    "vendor/cxxbridge-macro-1.0.54/src/lib.rs",
    "vendor/cxxbridge-macro-1.0.54/src/load.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/atom.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/attrs.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/check.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/derive.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/discriminant.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/doc.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/error.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/file.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/ident.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/impls.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/improper.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/instantiate.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/mangle.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/map.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/mod.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/names.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/namespace.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/parse.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/pod.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/qualified.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/report.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/resolve.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/set.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/symbol.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/tokens.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/toposort.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/trivial.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/types.rs",
    "vendor/cxxbridge-macro-1.0.54/src/syntax/visit.rs",
    "vendor/cxxbridge-macro-1.0.54/src/type_id.rs",
    ],
    deps = [],
    crate = "cxxbridge_macro",
    crate_root = "vendor/cxxbridge-macro-1.0.54/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "darling-0.10.2",
    srcs = ["vendor/darling-0.10.2/src/lib.rs",
    "vendor/darling-0.10.2/src/macros_public.rs",
    ],
    deps = [],
    crate = "darling",
    crate_root = "vendor/darling-0.10.2/src/lib.rs",
    edition = "2015",
    features = ["default",
    "suggestions",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:darling_core-0.10.2",
    "//generated/third-party/rust:darling_macro-0.10.2",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "darling_core-0.10.2",
    srcs = ["vendor/darling_core-0.10.2/src/ast/data.rs",
    "vendor/darling_core-0.10.2/src/ast/generics.rs",
    "vendor/darling_core-0.10.2/src/ast/mod.rs",
    "vendor/darling_core-0.10.2/src/codegen/attr_extractor.rs",
    "vendor/darling_core-0.10.2/src/codegen/default_expr.rs",
    "vendor/darling_core-0.10.2/src/codegen/error.rs",
    "vendor/darling_core-0.10.2/src/codegen/field.rs",
    "vendor/darling_core-0.10.2/src/codegen/from_derive_impl.rs",
    "vendor/darling_core-0.10.2/src/codegen/from_field.rs",
    "vendor/darling_core-0.10.2/src/codegen/from_meta_impl.rs",
    "vendor/darling_core-0.10.2/src/codegen/from_type_param.rs",
    "vendor/darling_core-0.10.2/src/codegen/from_variant_impl.rs",
    "vendor/darling_core-0.10.2/src/codegen/mod.rs",
    "vendor/darling_core-0.10.2/src/codegen/outer_from_impl.rs",
    "vendor/darling_core-0.10.2/src/codegen/trait_impl.rs",
    "vendor/darling_core-0.10.2/src/codegen/variant.rs",
    "vendor/darling_core-0.10.2/src/codegen/variant_data.rs",
    "vendor/darling_core-0.10.2/src/derive.rs",
    "vendor/darling_core-0.10.2/src/error/kind.rs",
    "vendor/darling_core-0.10.2/src/error/mod.rs",
    "vendor/darling_core-0.10.2/src/from_derive_input.rs",
    "vendor/darling_core-0.10.2/src/from_field.rs",
    "vendor/darling_core-0.10.2/src/from_generic_param.rs",
    "vendor/darling_core-0.10.2/src/from_generics.rs",
    "vendor/darling_core-0.10.2/src/from_meta.rs",
    "vendor/darling_core-0.10.2/src/from_type_param.rs",
    "vendor/darling_core-0.10.2/src/from_variant.rs",
    "vendor/darling_core-0.10.2/src/lib.rs",
    "vendor/darling_core-0.10.2/src/macros_private.rs",
    "vendor/darling_core-0.10.2/src/macros_public.rs",
    "vendor/darling_core-0.10.2/src/options/core.rs",
    "vendor/darling_core-0.10.2/src/options/forward_attrs.rs",
    "vendor/darling_core-0.10.2/src/options/from_derive.rs",
    "vendor/darling_core-0.10.2/src/options/from_field.rs",
    "vendor/darling_core-0.10.2/src/options/from_meta.rs",
    "vendor/darling_core-0.10.2/src/options/from_type_param.rs",
    "vendor/darling_core-0.10.2/src/options/from_variant.rs",
    "vendor/darling_core-0.10.2/src/options/input_field.rs",
    "vendor/darling_core-0.10.2/src/options/input_variant.rs",
    "vendor/darling_core-0.10.2/src/options/mod.rs",
    "vendor/darling_core-0.10.2/src/options/outer_from.rs",
    "vendor/darling_core-0.10.2/src/options/shape.rs",
    "vendor/darling_core-0.10.2/src/usage/generics_ext.rs",
    "vendor/darling_core-0.10.2/src/usage/ident_set.rs",
    "vendor/darling_core-0.10.2/src/usage/lifetimes.rs",
    "vendor/darling_core-0.10.2/src/usage/mod.rs",
    "vendor/darling_core-0.10.2/src/usage/options.rs",
    "vendor/darling_core-0.10.2/src/usage/type_params.rs",
    "vendor/darling_core-0.10.2/src/util/ident_string.rs",
    "vendor/darling_core-0.10.2/src/util/ignored.rs",
    "vendor/darling_core-0.10.2/src/util/mod.rs",
    "vendor/darling_core-0.10.2/src/util/over_ride.rs",
    "vendor/darling_core-0.10.2/src/util/path_list.rs",
    "vendor/darling_core-0.10.2/src/util/spanned_value.rs",
    "vendor/darling_core-0.10.2/src/util/with_original.rs",
    ],
    deps = [],
    crate = "darling_core",
    crate_root = "vendor/darling_core-0.10.2/src/lib.rs",
    edition = "2015",
    features = ["strsim",
    "suggestions",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:fnv",
    "//generated/third-party/rust:ident_case-1.0.1",
    "//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:strsim-0.9.3",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "darling_macro-0.10.2",
    srcs = ["vendor/darling_macro-0.10.2/src/lib.rs",],
    deps = [],
    crate = "darling_macro",
    crate_root = "vendor/darling_macro-0.10.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:darling_core-0.10.2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "data-encoding",
    srcs = ["vendor/data-encoding-2.3.0/src/lib.rs",],
    deps = [],
    crate = "data_encoding",
    crate_root = "vendor/data-encoding-2.3.0/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "derivative",
    srcs = ["vendor/derivative-2.1.1/src/ast.rs",
    "vendor/derivative-2.1.1/src/attr.rs",
    "vendor/derivative-2.1.1/src/bound.rs",
    "vendor/derivative-2.1.1/src/clone.rs",
    "vendor/derivative-2.1.1/src/cmp.rs",
    "vendor/derivative-2.1.1/src/debug.rs",
    "vendor/derivative-2.1.1/src/default.rs",
    "vendor/derivative-2.1.1/src/hash.rs",
    "vendor/derivative-2.1.1/src/lib.rs",
    "vendor/derivative-2.1.1/src/matcher.rs",
    "vendor/derivative-2.1.1/src/paths.rs",
    "vendor/derivative-2.1.1/src/utils.rs",
    ],
    deps = [],
    crate = "derivative",
    crate_root = "vendor/derivative-2.1.1/src/lib.rs",
    edition = "2015",
    features = ["use_core",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "derive_builder",
    srcs = ["vendor/derive_builder-0.9.0/src/doc_tpl/builder_method.md",
    "vendor/derive_builder-0.9.0/src/doc_tpl/builder_struct.md",
    "vendor/derive_builder-0.9.0/src/doc_tpl/mod.rs",
    "vendor/derive_builder-0.9.0/src/lib.rs",
    "vendor/derive_builder-0.9.0/src/log_disabled.rs",
    "vendor/derive_builder-0.9.0/src/options/darling_opts.rs",
    "vendor/derive_builder-0.9.0/src/options/mod.rs",
    ],
    deps = [],
    crate = "derive_builder",
    crate_root = "vendor/derive_builder-0.9.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:darling-0.10.2",
    "//generated/third-party/rust:derive_builder_core-0.9.0",
    "//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "derive_builder_core-0.9.0",
    srcs = ["vendor/derive_builder_core-0.9.0/src/bindings.rs",
    "vendor/derive_builder_core-0.9.0/src/block.rs",
    "vendor/derive_builder_core-0.9.0/src/build_method.rs",
    "vendor/derive_builder_core-0.9.0/src/builder.rs",
    "vendor/derive_builder_core-0.9.0/src/builder_field.rs",
    "vendor/derive_builder_core-0.9.0/src/deprecation_notes.rs",
    "vendor/derive_builder_core-0.9.0/src/doc_comment.rs",
    "vendor/derive_builder_core-0.9.0/src/initializer.rs",
    "vendor/derive_builder_core-0.9.0/src/lib.rs",
    "vendor/derive_builder_core-0.9.0/src/log_disabled.rs",
    "vendor/derive_builder_core-0.9.0/src/options.rs",
    "vendor/derive_builder_core-0.9.0/src/setter.rs",
    ],
    deps = [],
    crate = "derive_builder_core",
    crate_root = "vendor/derive_builder_core-0.9.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:darling-0.10.2",
    "//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "diff",
    srcs = ["vendor/diff-0.1.12/src/lib.rs",],
    deps = [],
    crate = "diff",
    crate_root = "vendor/diff-0.1.12/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "digest",
    srcs = ["vendor/digest-0.8.1/src/dev.rs",
    "vendor/digest-0.8.1/src/digest.rs",
    "vendor/digest-0.8.1/src/dyn_digest.rs",
    "vendor/digest-0.8.1/src/errors.rs",
    "vendor/digest-0.8.1/src/lib.rs",
    ],
    deps = [],
    crate = "digest",
    crate_root = "vendor/digest-0.8.1/src/lib.rs",
    edition = "2015",
    features = ["std",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:generic-array-0.12.4",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "digest-0.9.0",
    srcs = ["vendor/digest-0.9.0/src/dev.rs",
    "vendor/digest-0.9.0/src/digest.rs",
    "vendor/digest-0.9.0/src/dyn_digest.rs",
    "vendor/digest-0.9.0/src/errors.rs",
    "vendor/digest-0.9.0/src/fixed.rs",
    "vendor/digest-0.9.0/src/lib.rs",
    "vendor/digest-0.9.0/src/variable.rs",
    "vendor/digest-0.9.0/src/xof.rs",
    ],
    deps = [],
    crate = "digest",
    crate_root = "vendor/digest-0.9.0/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:generic-array",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "dirs",
    srcs = ["vendor/dirs-2.0.2/src/lib.rs",
    "vendor/dirs-2.0.2/src/lin.rs",
    "vendor/dirs-2.0.2/src/mac.rs",
    "vendor/dirs-2.0.2/src/wasm.rs",
    "vendor/dirs-2.0.2/src/win.rs",
    ],
    deps = [],
    crate = "dirs",
    crate_root = "vendor/dirs-2.0.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if",
    "//generated/third-party/rust:dirs-sys-0.3.5",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "dirs-1.0.5",
    srcs = ["vendor/dirs-1.0.5/src/lib.rs",
    "vendor/dirs-1.0.5/src/lin.rs",
    "vendor/dirs-1.0.5/src/mac.rs",
    "vendor/dirs-1.0.5/src/redox.rs",
    "vendor/dirs-1.0.5/src/unix.rs",
    "vendor/dirs-1.0.5/src/win.rs",
    ],
    deps = [],
    crate = "dirs",
    crate_root = "vendor/dirs-1.0.5/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "dirs-next-2.0.0",
    srcs = ["vendor/dirs-next-2.0.0/src/lib.rs",
    "vendor/dirs-next-2.0.0/src/lin.rs",
    "vendor/dirs-next-2.0.0/src/mac.rs",
    "vendor/dirs-next-2.0.0/src/wasm.rs",
    "vendor/dirs-next-2.0.0/src/win.rs",
    ],
    deps = [],
    crate = "dirs_next",
    crate_root = "vendor/dirs-next-2.0.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:dirs-sys-next-0.1.2",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "dirs-sys-0.3.5",
    srcs = ["vendor/dirs-sys-0.3.5/src/lib.rs",
    "vendor/dirs-sys-0.3.5/src/xdg_user_dirs.rs",
    ],
    deps = [],
    crate = "dirs_sys",
    crate_root = "vendor/dirs-sys-0.3.5/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "dirs-sys-next-0.1.2",
    srcs = ["vendor/dirs-sys-next-0.1.2/src/lib.rs",
    "vendor/dirs-sys-next-0.1.2/src/xdg_user_dirs.rs",
    ],
    deps = [],
    crate = "dirs_sys_next",
    crate_root = "vendor/dirs-sys-next-0.1.2/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "docopt-1.1.0",
    srcs = ["vendor/docopt-1.1.0/src/dopt.rs",
    "vendor/docopt-1.1.0/src/lib.rs",
    "vendor/docopt-1.1.0/src/parse.rs",
    "vendor/docopt-1.1.0/src/synonym.rs",
    "vendor/docopt-1.1.0/src/test/mod.rs",
    "vendor/docopt-1.1.0/src/test/suggestions.rs",
    "vendor/docopt-1.1.0/src/test/testcases.rs",
    ],
    deps = [],
    crate = "docopt",
    crate_root = "vendor/docopt-1.1.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:lazy_static",
    "//generated/third-party/rust:regex",
    "//generated/third-party/rust:serde",
    "//generated/third-party/rust:strsim-0.9.3",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "either",
    srcs = ["vendor/either-1.6.1/src/lib.rs",
    "vendor/either-1.6.1/src/serde_untagged.rs",
    "vendor/either-1.6.1/src/serde_untagged_optional.rs",
    ],
    deps = [],
    crate = "either",
    crate_root = "vendor/either-1.6.1/src/lib.rs",
    edition = "2015",
    features = ["default",
    "use_std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "ena-0.14.0",
    srcs = ["vendor/ena-0.14.0/src/bitvec.rs",
    "vendor/ena-0.14.0/src/lib.rs",
    "vendor/ena-0.14.0/src/snapshot_vec.rs",
    "vendor/ena-0.14.0/src/undo_log.rs",
    "vendor/ena-0.14.0/src/unify/backing_vec.rs",
    "vendor/ena-0.14.0/src/unify/mod.rs",
    "vendor/ena-0.14.0/src/unify/tests.rs",
    ],
    deps = [],
    crate = "ena",
    crate_root = "vendor/ena-0.14.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:log",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "enum-as-inner-0.3.3",
    srcs = ["vendor/enum-as-inner-0.3.3/src/lib.rs",],
    deps = [],
    crate = "enum_as_inner",
    crate_root = "vendor/enum-as-inner-0.3.3/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:heck",
    "//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "env_logger",
    srcs = ["vendor/env_logger-0.7.1/src/filter/mod.rs",
    "vendor/env_logger-0.7.1/src/filter/regex.rs",
    "vendor/env_logger-0.7.1/src/filter/string.rs",
    "vendor/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs",
    "vendor/env_logger-0.7.1/src/fmt/humantime/mod.rs",
    "vendor/env_logger-0.7.1/src/fmt/humantime/shim_impl.rs",
    "vendor/env_logger-0.7.1/src/fmt/mod.rs",
    "vendor/env_logger-0.7.1/src/fmt/writer/atty.rs",
    "vendor/env_logger-0.7.1/src/fmt/writer/mod.rs",
    "vendor/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs",
    "vendor/env_logger-0.7.1/src/fmt/writer/termcolor/mod.rs",
    "vendor/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs",
    "vendor/env_logger-0.7.1/src/lib.rs",
    ],
    deps = [],
    crate = "env_logger",
    crate_root = "vendor/env_logger-0.7.1/src/lib.rs",
    edition = "2018",
    features = ["atty",
    "default",
    "humantime",
    "regex",
    "termcolor",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:atty",
    "//generated/third-party/rust:humantime",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:regex",
    "//generated/third-party/rust:termcolor",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "erased-serde",
    srcs = ["vendor/erased-serde-0.3.12/src/any.rs",
    "vendor/erased-serde-0.3.12/src/de.rs",
    "vendor/erased-serde-0.3.12/src/error.rs",
    "vendor/erased-serde-0.3.12/src/features_check/mod.rs",
    "vendor/erased-serde-0.3.12/src/lib.rs",
    "vendor/erased-serde-0.3.12/src/macros.rs",
    "vendor/erased-serde-0.3.12/src/private.rs",
    "vendor/erased-serde-0.3.12/src/ser.rs",
    ],
    deps = [],
    crate = "erased_serde",
    crate_root = "vendor/erased-serde-0.3.12/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:serde",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "failure-deprecated",
    srcs = ["vendor/failure-0.1.8/src/as_fail.rs",
    "vendor/failure-0.1.8/src/backtrace/internal.rs",
    "vendor/failure-0.1.8/src/backtrace/mod.rs",
    "vendor/failure-0.1.8/src/box_std.rs",
    "vendor/failure-0.1.8/src/compat.rs",
    "vendor/failure-0.1.8/src/context.rs",
    "vendor/failure-0.1.8/src/error/error_impl.rs",
    "vendor/failure-0.1.8/src/error/error_impl_small.rs",
    "vendor/failure-0.1.8/src/error/mod.rs",
    "vendor/failure-0.1.8/src/error_message.rs",
    "vendor/failure-0.1.8/src/lib.rs",
    "vendor/failure-0.1.8/src/macros.rs",
    "vendor/failure-0.1.8/src/result_ext.rs",
    "vendor/failure-0.1.8/src/small_error.rs",
    "vendor/failure-0.1.8/src/sync_failure.rs",
    ],
    deps = [],
    crate = "failure",
    crate_root = "vendor/failure-0.1.8/src/lib.rs",
    edition = "2015",
    features = ["backtrace",
    "default",
    "derive",
    "failure_derive",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:backtrace",
    "//generated/third-party/rust:failure_derive",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "failure_derive",
    srcs = ["vendor/failure_derive-0.1.8/src/lib.rs",],
    deps = [],
    crate = "failure_derive",
    crate_root = "vendor/failure_derive-0.1.8/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    "//generated/third-party/rust:synstructure",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :failure_derive-0.1.8-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_binary(
    name = "failure_derive-0.1.8-build-script-build",
    srcs = ["vendor/failure_derive-0.1.8/build.rs",
    "vendor/failure_derive-0.1.8/src/lib.rs",
    "vendor/failure_derive-0.1.8/tests/backtrace.rs",
    "vendor/failure_derive-0.1.8/tests/custom_type_bounds.rs",
    "vendor/failure_derive-0.1.8/tests/no_derive_display.rs",
    "vendor/failure_derive-0.1.8/tests/tests.rs",
    "vendor/failure_derive-0.1.8/tests/wraps.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/failure_derive-0.1.8/build.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "fake-simd-0.1.2",
    srcs = ["vendor/fake-simd-0.1.2/src/lib.rs",],
    deps = [],
    crate = "fake_simd",
    crate_root = "vendor/fake-simd-0.1.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "fallible-iterator-0.2.0",
    srcs = ["vendor/fallible-iterator-0.2.0/src/lib.rs",
    "vendor/fallible-iterator-0.2.0/src/test.rs",
    ],
    deps = [],
    crate = "fallible_iterator",
    crate_root = "vendor/fallible-iterator-0.2.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "fixedbitset-0.2.0",
    srcs = ["vendor/fixedbitset-0.2.0/src/lib.rs",
    "vendor/fixedbitset-0.2.0/src/range.rs",
    ],
    deps = [],
    crate = "fixedbitset",
    crate_root = "vendor/fixedbitset-0.2.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "fnv",
    srcs = ["vendor/fnv-1.0.7/lib.rs",],
    deps = [],
    crate = "fnv",
    crate_root = "vendor/fnv-1.0.7/lib.rs",
    edition = "2015",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "form_urlencoded-1.0.0",
    srcs = ["vendor/form_urlencoded-1.0.0/src/lib.rs",
    "vendor/form_urlencoded-1.0.0/src/query_encoding.rs",
    ],
    deps = [],
    crate = "form_urlencoded",
    crate_root = "vendor/form_urlencoded-1.0.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:matches-0.1.8",
    "//generated/third-party/rust:percent-encoding",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "fs2",
    srcs = ["vendor/fs2-0.4.3/src/lib.rs",
    "vendor/fs2-0.4.3/src/unix.rs",
    "vendor/fs2-0.4.3/src/windows.rs",
    ],
    deps = [],
    crate = "fs2",
    crate_root = "vendor/fs2-0.4.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "futures",
    srcs = ["vendor/futures-0.3.13/src/lib.rs",],
    deps = [],
    crate = "futures",
    crate_root = "vendor/futures-0.3.13/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "async-await",
    "compat",
    "default",
    "executor",
    "futures-executor",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:futures-channel",
    "//generated/third-party/rust:futures-core",
    "//generated/third-party/rust:futures-executor-0.3.13",
    "//generated/third-party/rust:futures-io-0.3.13",
    "//generated/third-party/rust:futures-sink",
    "//generated/third-party/rust:futures-task-0.3.13",
    "//generated/third-party/rust:futures-util",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "futures-channel",
    srcs = ["vendor/futures-channel-0.3.13/src/lib.rs",
    "vendor/futures-channel-0.3.13/src/lock.rs",
    "vendor/futures-channel-0.3.13/src/mpsc/mod.rs",
    "vendor/futures-channel-0.3.13/src/mpsc/queue.rs",
    "vendor/futures-channel-0.3.13/src/mpsc/sink_impl.rs",
    "vendor/futures-channel-0.3.13/src/oneshot.rs",
    ],
    deps = [],
    crate = "futures_channel",
    crate_root = "vendor/futures-channel-0.3.13/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "default",
    "futures-sink",
    "sink",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:futures-core",
    "//generated/third-party/rust:futures-sink",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "futures-core",
    srcs = ["vendor/futures-core-0.3.13/src/future.rs",
    "vendor/futures-core-0.3.13/src/lib.rs",
    "vendor/futures-core-0.3.13/src/stream.rs",
    "vendor/futures-core-0.3.13/src/task/__internal/atomic_waker.rs",
    "vendor/futures-core-0.3.13/src/task/__internal/mod.rs",
    "vendor/futures-core-0.3.13/src/task/mod.rs",
    "vendor/futures-core-0.3.13/src/task/poll.rs",
    ],
    deps = [],
    crate = "futures_core",
    crate_root = "vendor/futures-core-0.3.13/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "futures-executor-0.3.13",
    srcs = ["vendor/futures-executor-0.3.13/src/enter.rs",
    "vendor/futures-executor-0.3.13/src/lib.rs",
    "vendor/futures-executor-0.3.13/src/local_pool.rs",
    "vendor/futures-executor-0.3.13/src/thread_pool.rs",
    "vendor/futures-executor-0.3.13/src/unpark_mutex.rs",
    ],
    deps = [],
    crate = "futures_executor",
    crate_root = "vendor/futures-executor-0.3.13/src/lib.rs",
    edition = "2018",
    features = ["std",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:futures-core",
    "//generated/third-party/rust:futures-task-0.3.13",
    "//generated/third-party/rust:futures-util",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "futures-io-0.3.13",
    srcs = ["vendor/futures-io-0.3.13/src/lib.rs",],
    deps = [],
    crate = "futures_io",
    crate_root = "vendor/futures-io-0.3.13/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "futures-macro-0.3.13",
    srcs = ["vendor/futures-macro-0.3.13/src/join.rs",
    "vendor/futures-macro-0.3.13/src/lib.rs",
    "vendor/futures-macro-0.3.13/src/select.rs",
    ],
    deps = [],
    crate = "futures_macro",
    crate_root = "vendor/futures-macro-0.3.13/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro-hack",
    "//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "futures-old",
    srcs = ["vendor/futures-0.1.31/src/executor.rs",
    "vendor/futures-0.1.31/src/future/and_then.rs",
    "vendor/futures-0.1.31/src/future/catch_unwind.rs",
    "vendor/futures-0.1.31/src/future/chain.rs",
    "vendor/futures-0.1.31/src/future/either.rs",
    "vendor/futures-0.1.31/src/future/empty.rs",
    "vendor/futures-0.1.31/src/future/flatten.rs",
    "vendor/futures-0.1.31/src/future/flatten_stream.rs",
    "vendor/futures-0.1.31/src/future/from_err.rs",
    "vendor/futures-0.1.31/src/future/fuse.rs",
    "vendor/futures-0.1.31/src/future/inspect.rs",
    "vendor/futures-0.1.31/src/future/into_stream.rs",
    "vendor/futures-0.1.31/src/future/join.rs",
    "vendor/futures-0.1.31/src/future/join_all.rs",
    "vendor/futures-0.1.31/src/future/lazy.rs",
    "vendor/futures-0.1.31/src/future/loop_fn.rs",
    "vendor/futures-0.1.31/src/future/map.rs",
    "vendor/futures-0.1.31/src/future/map_err.rs",
    "vendor/futures-0.1.31/src/future/mod.rs",
    "vendor/futures-0.1.31/src/future/option.rs",
    "vendor/futures-0.1.31/src/future/or_else.rs",
    "vendor/futures-0.1.31/src/future/poll_fn.rs",
    "vendor/futures-0.1.31/src/future/result.rs",
    "vendor/futures-0.1.31/src/future/select.rs",
    "vendor/futures-0.1.31/src/future/select2.rs",
    "vendor/futures-0.1.31/src/future/select_all.rs",
    "vendor/futures-0.1.31/src/future/select_ok.rs",
    "vendor/futures-0.1.31/src/future/shared.rs",
    "vendor/futures-0.1.31/src/future/then.rs",
    "vendor/futures-0.1.31/src/lib.rs",
    "vendor/futures-0.1.31/src/lock.rs",
    "vendor/futures-0.1.31/src/poll.rs",
    "vendor/futures-0.1.31/src/resultstream.rs",
    "vendor/futures-0.1.31/src/sink/buffer.rs",
    "vendor/futures-0.1.31/src/sink/fanout.rs",
    "vendor/futures-0.1.31/src/sink/flush.rs",
    "vendor/futures-0.1.31/src/sink/from_err.rs",
    "vendor/futures-0.1.31/src/sink/map_err.rs",
    "vendor/futures-0.1.31/src/sink/mod.rs",
    "vendor/futures-0.1.31/src/sink/send.rs",
    "vendor/futures-0.1.31/src/sink/send_all.rs",
    "vendor/futures-0.1.31/src/sink/wait.rs",
    "vendor/futures-0.1.31/src/sink/with.rs",
    "vendor/futures-0.1.31/src/sink/with_flat_map.rs",
    "vendor/futures-0.1.31/src/stream/and_then.rs",
    "vendor/futures-0.1.31/src/stream/buffer_unordered.rs",
    "vendor/futures-0.1.31/src/stream/buffered.rs",
    "vendor/futures-0.1.31/src/stream/catch_unwind.rs",
    "vendor/futures-0.1.31/src/stream/chain.rs",
    "vendor/futures-0.1.31/src/stream/channel.rs",
    "vendor/futures-0.1.31/src/stream/chunks.rs",
    "vendor/futures-0.1.31/src/stream/collect.rs",
    "vendor/futures-0.1.31/src/stream/concat.rs",
    "vendor/futures-0.1.31/src/stream/empty.rs",
    "vendor/futures-0.1.31/src/stream/filter.rs",
    "vendor/futures-0.1.31/src/stream/filter_map.rs",
    "vendor/futures-0.1.31/src/stream/flatten.rs",
    "vendor/futures-0.1.31/src/stream/fold.rs",
    "vendor/futures-0.1.31/src/stream/for_each.rs",
    "vendor/futures-0.1.31/src/stream/forward.rs",
    "vendor/futures-0.1.31/src/stream/from_err.rs",
    "vendor/futures-0.1.31/src/stream/fuse.rs",
    "vendor/futures-0.1.31/src/stream/future.rs",
    "vendor/futures-0.1.31/src/stream/futures_ordered.rs",
    "vendor/futures-0.1.31/src/stream/futures_unordered.rs",
    "vendor/futures-0.1.31/src/stream/inspect.rs",
    "vendor/futures-0.1.31/src/stream/inspect_err.rs",
    "vendor/futures-0.1.31/src/stream/iter.rs",
    "vendor/futures-0.1.31/src/stream/iter_ok.rs",
    "vendor/futures-0.1.31/src/stream/iter_result.rs",
    "vendor/futures-0.1.31/src/stream/map.rs",
    "vendor/futures-0.1.31/src/stream/map_err.rs",
    "vendor/futures-0.1.31/src/stream/merge.rs",
    "vendor/futures-0.1.31/src/stream/mod.rs",
    "vendor/futures-0.1.31/src/stream/once.rs",
    "vendor/futures-0.1.31/src/stream/or_else.rs",
    "vendor/futures-0.1.31/src/stream/peek.rs",
    "vendor/futures-0.1.31/src/stream/poll_fn.rs",
    "vendor/futures-0.1.31/src/stream/repeat.rs",
    "vendor/futures-0.1.31/src/stream/select.rs",
    "vendor/futures-0.1.31/src/stream/skip.rs",
    "vendor/futures-0.1.31/src/stream/skip_while.rs",
    "vendor/futures-0.1.31/src/stream/split.rs",
    "vendor/futures-0.1.31/src/stream/take.rs",
    "vendor/futures-0.1.31/src/stream/take_while.rs",
    "vendor/futures-0.1.31/src/stream/then.rs",
    "vendor/futures-0.1.31/src/stream/unfold.rs",
    "vendor/futures-0.1.31/src/stream/wait.rs",
    "vendor/futures-0.1.31/src/stream/zip.rs",
    "vendor/futures-0.1.31/src/sync/bilock.rs",
    "vendor/futures-0.1.31/src/sync/mod.rs",
    "vendor/futures-0.1.31/src/sync/mpsc/mod.rs",
    "vendor/futures-0.1.31/src/sync/mpsc/queue.rs",
    "vendor/futures-0.1.31/src/sync/oneshot.rs",
    "vendor/futures-0.1.31/src/task.rs",
    "vendor/futures-0.1.31/src/task_impl/atomic_task.rs",
    "vendor/futures-0.1.31/src/task_impl/core.rs",
    "vendor/futures-0.1.31/src/task_impl/mod.rs",
    "vendor/futures-0.1.31/src/task_impl/std/data.rs",
    "vendor/futures-0.1.31/src/task_impl/std/mod.rs",
    "vendor/futures-0.1.31/src/task_impl/std/task_rc.rs",
    "vendor/futures-0.1.31/src/task_impl/std/unpark_mutex.rs",
    "vendor/futures-0.1.31/src/unsync/mod.rs",
    "vendor/futures-0.1.31/src/unsync/mpsc.rs",
    "vendor/futures-0.1.31/src/unsync/oneshot.rs",
    ],
    deps = [],
    crate = "futures",
    crate_root = "vendor/futures-0.1.31/src/lib.rs",
    edition = "2015",
    features = ["default",
    "use_std",
    "with-deprecated",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "futures-sink",
    srcs = ["vendor/futures-sink-0.3.13/src/lib.rs",],
    deps = [],
    crate = "futures_sink",
    crate_root = "vendor/futures-sink-0.3.13/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "futures-task-0.3.13",
    srcs = ["vendor/futures-task-0.3.13/src/arc_wake.rs",
    "vendor/futures-task-0.3.13/src/future_obj.rs",
    "vendor/futures-task-0.3.13/src/lib.rs",
    "vendor/futures-task-0.3.13/src/noop_waker.rs",
    "vendor/futures-task-0.3.13/src/spawn.rs",
    "vendor/futures-task-0.3.13/src/waker.rs",
    "vendor/futures-task-0.3.13/src/waker_ref.rs",
    ],
    deps = [],
    crate = "futures_task",
    crate_root = "vendor/futures-task-0.3.13/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "futures-util",
    srcs = ["vendor/futures-util-0.3.13/src/async_await/join_mod.rs",
    "vendor/futures-util-0.3.13/src/async_await/mod.rs",
    "vendor/futures-util-0.3.13/src/async_await/pending.rs",
    "vendor/futures-util-0.3.13/src/async_await/poll.rs",
    "vendor/futures-util-0.3.13/src/async_await/random.rs",
    "vendor/futures-util-0.3.13/src/async_await/select_mod.rs",
    "vendor/futures-util-0.3.13/src/compat/compat01as03.rs",
    "vendor/futures-util-0.3.13/src/compat/compat03as01.rs",
    "vendor/futures-util-0.3.13/src/compat/executor.rs",
    "vendor/futures-util-0.3.13/src/compat/mod.rs",
    "vendor/futures-util-0.3.13/src/fns.rs",
    "vendor/futures-util-0.3.13/src/future/abortable.rs",
    "vendor/futures-util-0.3.13/src/future/either.rs",
    "vendor/futures-util-0.3.13/src/future/future/catch_unwind.rs",
    "vendor/futures-util-0.3.13/src/future/future/flatten.rs",
    "vendor/futures-util-0.3.13/src/future/future/fuse.rs",
    "vendor/futures-util-0.3.13/src/future/future/map.rs",
    "vendor/futures-util-0.3.13/src/future/future/mod.rs",
    "vendor/futures-util-0.3.13/src/future/future/remote_handle.rs",
    "vendor/futures-util-0.3.13/src/future/future/shared.rs",
    "vendor/futures-util-0.3.13/src/future/join.rs",
    "vendor/futures-util-0.3.13/src/future/join_all.rs",
    "vendor/futures-util-0.3.13/src/future/lazy.rs",
    "vendor/futures-util-0.3.13/src/future/maybe_done.rs",
    "vendor/futures-util-0.3.13/src/future/mod.rs",
    "vendor/futures-util-0.3.13/src/future/option.rs",
    "vendor/futures-util-0.3.13/src/future/pending.rs",
    "vendor/futures-util-0.3.13/src/future/poll_fn.rs",
    "vendor/futures-util-0.3.13/src/future/ready.rs",
    "vendor/futures-util-0.3.13/src/future/select.rs",
    "vendor/futures-util-0.3.13/src/future/select_all.rs",
    "vendor/futures-util-0.3.13/src/future/select_ok.rs",
    "vendor/futures-util-0.3.13/src/future/try_future/into_future.rs",
    "vendor/futures-util-0.3.13/src/future/try_future/mod.rs",
    "vendor/futures-util-0.3.13/src/future/try_future/try_flatten.rs",
    "vendor/futures-util-0.3.13/src/future/try_future/try_flatten_err.rs",
    "vendor/futures-util-0.3.13/src/future/try_join.rs",
    "vendor/futures-util-0.3.13/src/future/try_join_all.rs",
    "vendor/futures-util-0.3.13/src/future/try_maybe_done.rs",
    "vendor/futures-util-0.3.13/src/future/try_select.rs",
    "vendor/futures-util-0.3.13/src/io/allow_std.rs",
    "vendor/futures-util-0.3.13/src/io/buf_reader.rs",
    "vendor/futures-util-0.3.13/src/io/buf_writer.rs",
    "vendor/futures-util-0.3.13/src/io/chain.rs",
    "vendor/futures-util-0.3.13/src/io/close.rs",
    "vendor/futures-util-0.3.13/src/io/copy.rs",
    "vendor/futures-util-0.3.13/src/io/copy_buf.rs",
    "vendor/futures-util-0.3.13/src/io/cursor.rs",
    "vendor/futures-util-0.3.13/src/io/empty.rs",
    "vendor/futures-util-0.3.13/src/io/fill_buf.rs",
    "vendor/futures-util-0.3.13/src/io/flush.rs",
    "vendor/futures-util-0.3.13/src/io/into_sink.rs",
    "vendor/futures-util-0.3.13/src/io/lines.rs",
    "vendor/futures-util-0.3.13/src/io/mod.rs",
    "vendor/futures-util-0.3.13/src/io/read.rs",
    "vendor/futures-util-0.3.13/src/io/read_exact.rs",
    "vendor/futures-util-0.3.13/src/io/read_line.rs",
    "vendor/futures-util-0.3.13/src/io/read_to_end.rs",
    "vendor/futures-util-0.3.13/src/io/read_to_string.rs",
    "vendor/futures-util-0.3.13/src/io/read_until.rs",
    "vendor/futures-util-0.3.13/src/io/read_vectored.rs",
    "vendor/futures-util-0.3.13/src/io/repeat.rs",
    "vendor/futures-util-0.3.13/src/io/seek.rs",
    "vendor/futures-util-0.3.13/src/io/sink.rs",
    "vendor/futures-util-0.3.13/src/io/split.rs",
    "vendor/futures-util-0.3.13/src/io/take.rs",
    "vendor/futures-util-0.3.13/src/io/window.rs",
    "vendor/futures-util-0.3.13/src/io/write.rs",
    "vendor/futures-util-0.3.13/src/io/write_all.rs",
    "vendor/futures-util-0.3.13/src/io/write_all_vectored.rs",
    "vendor/futures-util-0.3.13/src/io/write_vectored.rs",
    "vendor/futures-util-0.3.13/src/lib.rs",
    "vendor/futures-util-0.3.13/src/lock/bilock.rs",
    "vendor/futures-util-0.3.13/src/lock/mod.rs",
    "vendor/futures-util-0.3.13/src/lock/mutex.rs",
    "vendor/futures-util-0.3.13/src/never.rs",
    "vendor/futures-util-0.3.13/src/sink/buffer.rs",
    "vendor/futures-util-0.3.13/src/sink/close.rs",
    "vendor/futures-util-0.3.13/src/sink/drain.rs",
    "vendor/futures-util-0.3.13/src/sink/err_into.rs",
    "vendor/futures-util-0.3.13/src/sink/fanout.rs",
    "vendor/futures-util-0.3.13/src/sink/feed.rs",
    "vendor/futures-util-0.3.13/src/sink/flush.rs",
    "vendor/futures-util-0.3.13/src/sink/map_err.rs",
    "vendor/futures-util-0.3.13/src/sink/mod.rs",
    "vendor/futures-util-0.3.13/src/sink/send.rs",
    "vendor/futures-util-0.3.13/src/sink/send_all.rs",
    "vendor/futures-util-0.3.13/src/sink/unfold.rs",
    "vendor/futures-util-0.3.13/src/sink/with.rs",
    "vendor/futures-util-0.3.13/src/sink/with_flat_map.rs",
    "vendor/futures-util-0.3.13/src/stream/empty.rs",
    "vendor/futures-util-0.3.13/src/stream/futures_ordered.rs",
    "vendor/futures-util-0.3.13/src/stream/futures_unordered/abort.rs",
    "vendor/futures-util-0.3.13/src/stream/futures_unordered/iter.rs",
    "vendor/futures-util-0.3.13/src/stream/futures_unordered/mod.rs",
    "vendor/futures-util-0.3.13/src/stream/futures_unordered/ready_to_run_queue.rs",
    "vendor/futures-util-0.3.13/src/stream/futures_unordered/task.rs",
    "vendor/futures-util-0.3.13/src/stream/iter.rs",
    "vendor/futures-util-0.3.13/src/stream/mod.rs",
    "vendor/futures-util-0.3.13/src/stream/once.rs",
    "vendor/futures-util-0.3.13/src/stream/pending.rs",
    "vendor/futures-util-0.3.13/src/stream/poll_fn.rs",
    "vendor/futures-util-0.3.13/src/stream/repeat.rs",
    "vendor/futures-util-0.3.13/src/stream/repeat_with.rs",
    "vendor/futures-util-0.3.13/src/stream/select.rs",
    "vendor/futures-util-0.3.13/src/stream/select_all.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/buffer_unordered.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/buffered.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/catch_unwind.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/chain.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/chunks.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/collect.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/concat.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/cycle.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/enumerate.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/filter.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/filter_map.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/flatten.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/fold.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/for_each.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/for_each_concurrent.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/forward.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/fuse.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/into_future.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/map.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/mod.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/next.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/peek.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/ready_chunks.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/scan.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/select_next_some.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/skip.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/skip_while.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/split.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/take.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/take_until.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/take_while.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/then.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/unzip.rs",
    "vendor/futures-util-0.3.13/src/stream/stream/zip.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/and_then.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/into_async_read.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/into_stream.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/mod.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/or_else.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_buffer_unordered.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_buffered.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_collect.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_concat.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_filter.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_filter_map.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_flatten.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_fold.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_for_each.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_for_each_concurrent.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_next.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_skip_while.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_take_while.rs",
    "vendor/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs",
    "vendor/futures-util-0.3.13/src/stream/unfold.rs",
    "vendor/futures-util-0.3.13/src/task/mod.rs",
    "vendor/futures-util-0.3.13/src/task/spawn.rs",
    "vendor/futures-util-0.3.13/src/unfold_state.rs",
    ],
    deps = [],
    crate = "futures_util",
    crate_root = "vendor/futures-util-0.3.13/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "async-await",
    "async-await-macro",
    "channel",
    "compat",
    "default",
    "futures-channel",
    "futures-io",
    "futures-macro",
    "futures-sink",
    "futures_01",
    "io",
    "memchr",
    "proc-macro-hack",
    "proc-macro-nested",
    "sink",
    "slab",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:futures-channel",
    "//generated/third-party/rust:futures-core",
    "//generated/third-party/rust:futures-io-0.3.13",
    "//generated/third-party/rust:futures-macro-0.3.13",
    "//generated/third-party/rust:futures-sink",
    "//generated/third-party/rust:futures-task-0.3.13",
    "//generated/third-party/rust:memchr-2.4.1",
    "//generated/third-party/rust:pin-project-lite-0.2.6",
    "//generated/third-party/rust:pin-utils-0.1.0",
    "//generated/third-party/rust:proc-macro-hack",
    "//generated/third-party/rust:proc-macro-nested-0.1.6",
    "//generated/third-party/rust:slab-0.4.2",
    ],
    named_deps = {
        "futures_01": "//generated/third-party/rust:futures-old",
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "generic-array",
    srcs = ["vendor/generic-array-0.14.4/src/arr.rs",
    "vendor/generic-array-0.14.4/src/functional.rs",
    "vendor/generic-array-0.14.4/src/hex.rs",
    "vendor/generic-array-0.14.4/src/impl_serde.rs",
    "vendor/generic-array-0.14.4/src/impls.rs",
    "vendor/generic-array-0.14.4/src/iter.rs",
    "vendor/generic-array-0.14.4/src/lib.rs",
    "vendor/generic-array-0.14.4/src/sequence.rs",
    ],
    deps = [],
    crate = "generic_array",
    crate_root = "vendor/generic-array-0.14.4/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:typenum",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :generic-array-0.14.4-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "generic-array-0.12.4",
    srcs = ["vendor/generic-array-0.12.4/src/arr.rs",
    "vendor/generic-array-0.12.4/src/functional.rs",
    "vendor/generic-array-0.12.4/src/hex.rs",
    "vendor/generic-array-0.12.4/src/impl_serde.rs",
    "vendor/generic-array-0.12.4/src/impls.rs",
    "vendor/generic-array-0.12.4/src/iter.rs",
    "vendor/generic-array-0.12.4/src/lib.rs",
    "vendor/generic-array-0.12.4/src/sequence.rs",
    ],
    deps = [],
    crate = "generic_array",
    crate_root = "vendor/generic-array-0.12.4/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:typenum",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "generic-array-0.14.4-build-script-build",
    srcs = ["vendor/generic-array-0.14.4/build.rs",
    "vendor/generic-array-0.14.4/src/arr.rs",
    "vendor/generic-array-0.14.4/src/functional.rs",
    "vendor/generic-array-0.14.4/src/hex.rs",
    "vendor/generic-array-0.14.4/src/impl_serde.rs",
    "vendor/generic-array-0.14.4/src/impls.rs",
    "vendor/generic-array-0.14.4/src/iter.rs",
    "vendor/generic-array-0.14.4/src/lib.rs",
    "vendor/generic-array-0.14.4/src/sequence.rs",
    "vendor/generic-array-0.14.4/tests/arr.rs",
    "vendor/generic-array-0.14.4/tests/generics.rs",
    "vendor/generic-array-0.14.4/tests/hex.rs",
    "vendor/generic-array-0.14.4/tests/import_name.rs",
    "vendor/generic-array-0.14.4/tests/iter.rs",
    "vendor/generic-array-0.14.4/tests/mod.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/generic-array-0.14.4/build.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:version_check-0.9.2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "getrandom-0.1.15",
    srcs = ["vendor/getrandom-0.1.15/src/bsd_arandom.rs",
    "vendor/getrandom-0.1.15/src/cloudabi.rs",
    "vendor/getrandom-0.1.15/src/dummy.rs",
    "vendor/getrandom-0.1.15/src/error.rs",
    "vendor/getrandom-0.1.15/src/error_impls.rs",
    "vendor/getrandom-0.1.15/src/fuchsia.rs",
    "vendor/getrandom-0.1.15/src/ios.rs",
    "vendor/getrandom-0.1.15/src/lib.rs",
    "vendor/getrandom-0.1.15/src/linux_android.rs",
    "vendor/getrandom-0.1.15/src/macos.rs",
    "vendor/getrandom-0.1.15/src/openbsd.rs",
    "vendor/getrandom-0.1.15/src/rdrand.rs",
    "vendor/getrandom-0.1.15/src/solaris_illumos.rs",
    "vendor/getrandom-0.1.15/src/use_file.rs",
    "vendor/getrandom-0.1.15/src/util.rs",
    "vendor/getrandom-0.1.15/src/util_libc.rs",
    "vendor/getrandom-0.1.15/src/vxworks.rs",
    "vendor/getrandom-0.1.15/src/wasi.rs",
    "vendor/getrandom-0.1.15/src/wasm32_bindgen.rs",
    "vendor/getrandom-0.1.15/src/wasm32_stdweb.rs",
    "vendor/getrandom-0.1.15/src/windows.rs",
    "vendor/getrandom-0.1.15/src/windows_uwp.rs",
    ],
    deps = [],
    crate = "getrandom",
    crate_root = "vendor/getrandom-0.1.15/src/lib.rs",
    edition = "2018",
    features = ["std",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :getrandom-0.1.15-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "getrandom-0.1.15-build-script-build",
    srcs = ["vendor/getrandom-0.1.15/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/getrandom-0.1.15/build.rs",
    edition = "2018",
    features = ["std",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "getrandom-0.2.2",
    srcs = ["vendor/getrandom-0.2.2/src/bsd_arandom.rs",
    "vendor/getrandom-0.2.2/src/custom.rs",
    "vendor/getrandom-0.2.2/src/error.rs",
    "vendor/getrandom-0.2.2/src/error_impls.rs",
    "vendor/getrandom-0.2.2/src/fuchsia.rs",
    "vendor/getrandom-0.2.2/src/ios.rs",
    "vendor/getrandom-0.2.2/src/js.rs",
    "vendor/getrandom-0.2.2/src/lib.rs",
    "vendor/getrandom-0.2.2/src/linux_android.rs",
    "vendor/getrandom-0.2.2/src/macos.rs",
    "vendor/getrandom-0.2.2/src/openbsd.rs",
    "vendor/getrandom-0.2.2/src/rdrand.rs",
    "vendor/getrandom-0.2.2/src/solaris_illumos.rs",
    "vendor/getrandom-0.2.2/src/use_file.rs",
    "vendor/getrandom-0.2.2/src/util.rs",
    "vendor/getrandom-0.2.2/src/util_libc.rs",
    "vendor/getrandom-0.2.2/src/vxworks.rs",
    "vendor/getrandom-0.2.2/src/wasi.rs",
    "vendor/getrandom-0.2.2/src/windows.rs",
    ],
    deps = [],
    crate = "getrandom",
    crate_root = "vendor/getrandom-0.2.2/src/lib.rs",
    edition = "2018",
    features = ["std",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :getrandom-0.2.2-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "getrandom-0.2.2-build-script-build",
    srcs = ["vendor/getrandom-0.2.2/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/getrandom-0.2.2/build.rs",
    edition = "2018",
    features = ["std",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "ghost",
    srcs = ["vendor/ghost-0.1.2/src/args.rs",
    "vendor/ghost-0.1.2/src/derive.rs",
    "vendor/ghost-0.1.2/src/lib.rs",
    "vendor/ghost-0.1.2/src/parse.rs",
    "vendor/ghost-0.1.2/src/variance.rs",
    "vendor/ghost-0.1.2/src/visibility.rs",
    ],
    deps = [],
    crate = "ghost",
    crate_root = "vendor/ghost-0.1.2/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "gimli",
    srcs = ["vendor/gimli-0.22.0/src/arch.rs",
    "vendor/gimli-0.22.0/src/common.rs",
    "vendor/gimli-0.22.0/src/constants.rs",
    "vendor/gimli-0.22.0/src/endianity.rs",
    "vendor/gimli-0.22.0/src/leb128.rs",
    "vendor/gimli-0.22.0/src/lib.rs",
    "vendor/gimli-0.22.0/src/read/abbrev.rs",
    "vendor/gimli-0.22.0/src/read/addr.rs",
    "vendor/gimli-0.22.0/src/read/aranges.rs",
    "vendor/gimli-0.22.0/src/read/cfi.rs",
    "vendor/gimli-0.22.0/src/read/dwarf.rs",
    "vendor/gimli-0.22.0/src/read/endian_reader.rs",
    "vendor/gimli-0.22.0/src/read/endian_slice.rs",
    "vendor/gimli-0.22.0/src/read/line.rs",
    "vendor/gimli-0.22.0/src/read/loclists.rs",
    "vendor/gimli-0.22.0/src/read/lookup.rs",
    "vendor/gimli-0.22.0/src/read/mod.rs",
    "vendor/gimli-0.22.0/src/read/op.rs",
    "vendor/gimli-0.22.0/src/read/pubnames.rs",
    "vendor/gimli-0.22.0/src/read/pubtypes.rs",
    "vendor/gimli-0.22.0/src/read/reader.rs",
    "vendor/gimli-0.22.0/src/read/rnglists.rs",
    "vendor/gimli-0.22.0/src/read/str.rs",
    "vendor/gimli-0.22.0/src/read/unit.rs",
    "vendor/gimli-0.22.0/src/read/value.rs",
    "vendor/gimli-0.22.0/src/test_util.rs",
    "vendor/gimli-0.22.0/src/write/abbrev.rs",
    "vendor/gimli-0.22.0/src/write/cfi.rs",
    "vendor/gimli-0.22.0/src/write/dwarf.rs",
    "vendor/gimli-0.22.0/src/write/endian_vec.rs",
    "vendor/gimli-0.22.0/src/write/line.rs",
    "vendor/gimli-0.22.0/src/write/loc.rs",
    "vendor/gimli-0.22.0/src/write/mod.rs",
    "vendor/gimli-0.22.0/src/write/op.rs",
    "vendor/gimli-0.22.0/src/write/range.rs",
    "vendor/gimli-0.22.0/src/write/section.rs",
    "vendor/gimli-0.22.0/src/write/str.rs",
    "vendor/gimli-0.22.0/src/write/unit.rs",
    "vendor/gimli-0.22.0/src/write/writer.rs",
    ],
    deps = [],
    crate = "gimli",
    crate_root = "vendor/gimli-0.22.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "endian-reader",
    "fallible-iterator",
    "indexmap",
    "read",
    "stable_deref_trait",
    "std",
    "write",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:fallible-iterator-0.2.0",
    "//generated/third-party/rust:indexmap",
    "//generated/third-party/rust:stable_deref_trait",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "goblin",
    srcs = ["vendor/goblin-0.3.4/src/archive/mod.rs",
    "vendor/goblin-0.3.4/src/elf/compression_header.rs",
    "vendor/goblin-0.3.4/src/elf/constants_header.rs",
    "vendor/goblin-0.3.4/src/elf/constants_relocation.rs",
    "vendor/goblin-0.3.4/src/elf/dynamic.rs",
    "vendor/goblin-0.3.4/src/elf/gnu_hash.rs",
    "vendor/goblin-0.3.4/src/elf/header.rs",
    "vendor/goblin-0.3.4/src/elf/mod.rs",
    "vendor/goblin-0.3.4/src/elf/note.rs",
    "vendor/goblin-0.3.4/src/elf/program_header.rs",
    "vendor/goblin-0.3.4/src/elf/reloc.rs",
    "vendor/goblin-0.3.4/src/elf/section_header.rs",
    "vendor/goblin-0.3.4/src/elf/sym.rs",
    "vendor/goblin-0.3.4/src/error.rs",
    "vendor/goblin-0.3.4/src/lib.rs",
    "vendor/goblin-0.3.4/src/mach/bind_opcodes.rs",
    "vendor/goblin-0.3.4/src/mach/constants.rs",
    "vendor/goblin-0.3.4/src/mach/exports.rs",
    "vendor/goblin-0.3.4/src/mach/fat.rs",
    "vendor/goblin-0.3.4/src/mach/header.rs",
    "vendor/goblin-0.3.4/src/mach/imports.rs",
    "vendor/goblin-0.3.4/src/mach/load_command.rs",
    "vendor/goblin-0.3.4/src/mach/mod.rs",
    "vendor/goblin-0.3.4/src/mach/relocation.rs",
    "vendor/goblin-0.3.4/src/mach/segment.rs",
    "vendor/goblin-0.3.4/src/mach/symbols.rs",
    "vendor/goblin-0.3.4/src/pe/characteristic.rs",
    "vendor/goblin-0.3.4/src/pe/data_directories.rs",
    "vendor/goblin-0.3.4/src/pe/debug.rs",
    "vendor/goblin-0.3.4/src/pe/exception.rs",
    "vendor/goblin-0.3.4/src/pe/export.rs",
    "vendor/goblin-0.3.4/src/pe/header.rs",
    "vendor/goblin-0.3.4/src/pe/import.rs",
    "vendor/goblin-0.3.4/src/pe/mod.rs",
    "vendor/goblin-0.3.4/src/pe/optional_header.rs",
    "vendor/goblin-0.3.4/src/pe/options.rs",
    "vendor/goblin-0.3.4/src/pe/relocation.rs",
    "vendor/goblin-0.3.4/src/pe/section_table.rs",
    "vendor/goblin-0.3.4/src/pe/symbol.rs",
    "vendor/goblin-0.3.4/src/pe/utils.rs",
    "vendor/goblin-0.3.4/src/strtab.rs",
    ],
    deps = [],
    crate = "goblin",
    crate_root = "vendor/goblin-0.3.4/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "archive",
    "default",
    "elf32",
    "elf64",
    "endian_fd",
    "log",
    "mach32",
    "mach64",
    "pe32",
    "pe64",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:log",
    "//generated/third-party/rust:plain",
    "//generated/third-party/rust:scroll",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "h2-0.3.0",
    srcs = ["vendor/h2-0.3.0/src/client.rs",
    "vendor/h2-0.3.0/src/codec/error.rs",
    "vendor/h2-0.3.0/src/codec/framed_read.rs",
    "vendor/h2-0.3.0/src/codec/framed_write.rs",
    "vendor/h2-0.3.0/src/codec/mod.rs",
    "vendor/h2-0.3.0/src/error.rs",
    "vendor/h2-0.3.0/src/frame/data.rs",
    "vendor/h2-0.3.0/src/frame/go_away.rs",
    "vendor/h2-0.3.0/src/frame/head.rs",
    "vendor/h2-0.3.0/src/frame/headers.rs",
    "vendor/h2-0.3.0/src/frame/mod.rs",
    "vendor/h2-0.3.0/src/frame/ping.rs",
    "vendor/h2-0.3.0/src/frame/priority.rs",
    "vendor/h2-0.3.0/src/frame/reason.rs",
    "vendor/h2-0.3.0/src/frame/reset.rs",
    "vendor/h2-0.3.0/src/frame/settings.rs",
    "vendor/h2-0.3.0/src/frame/stream_id.rs",
    "vendor/h2-0.3.0/src/frame/util.rs",
    "vendor/h2-0.3.0/src/frame/window_update.rs",
    "vendor/h2-0.3.0/src/hpack/decoder.rs",
    "vendor/h2-0.3.0/src/hpack/encoder.rs",
    "vendor/h2-0.3.0/src/hpack/header.rs",
    "vendor/h2-0.3.0/src/hpack/huffman/mod.rs",
    "vendor/h2-0.3.0/src/hpack/huffman/table.rs",
    "vendor/h2-0.3.0/src/hpack/mod.rs",
    "vendor/h2-0.3.0/src/hpack/table.rs",
    "vendor/h2-0.3.0/src/hpack/test/fixture.rs",
    "vendor/h2-0.3.0/src/hpack/test/fuzz.rs",
    "vendor/h2-0.3.0/src/hpack/test/mod.rs",
    "vendor/h2-0.3.0/src/lib.rs",
    "vendor/h2-0.3.0/src/proto/connection.rs",
    "vendor/h2-0.3.0/src/proto/error.rs",
    "vendor/h2-0.3.0/src/proto/go_away.rs",
    "vendor/h2-0.3.0/src/proto/mod.rs",
    "vendor/h2-0.3.0/src/proto/peer.rs",
    "vendor/h2-0.3.0/src/proto/ping_pong.rs",
    "vendor/h2-0.3.0/src/proto/settings.rs",
    "vendor/h2-0.3.0/src/proto/streams/buffer.rs",
    "vendor/h2-0.3.0/src/proto/streams/counts.rs",
    "vendor/h2-0.3.0/src/proto/streams/flow_control.rs",
    "vendor/h2-0.3.0/src/proto/streams/mod.rs",
    "vendor/h2-0.3.0/src/proto/streams/prioritize.rs",
    "vendor/h2-0.3.0/src/proto/streams/recv.rs",
    "vendor/h2-0.3.0/src/proto/streams/send.rs",
    "vendor/h2-0.3.0/src/proto/streams/state.rs",
    "vendor/h2-0.3.0/src/proto/streams/store.rs",
    "vendor/h2-0.3.0/src/proto/streams/stream.rs",
    "vendor/h2-0.3.0/src/proto/streams/streams.rs",
    "vendor/h2-0.3.0/src/server.rs",
    "vendor/h2-0.3.0/src/share.rs",
    ],
    deps = [],
    crate = "h2",
    crate_root = "vendor/h2-0.3.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bytes",
    "//generated/third-party/rust:fnv",
    "//generated/third-party/rust:futures-core",
    "//generated/third-party/rust:futures-sink",
    "//generated/third-party/rust:futures-util",
    "//generated/third-party/rust:http",
    "//generated/third-party/rust:indexmap",
    "//generated/third-party/rust:slab-0.4.2",
    "//generated/third-party/rust:tokio",
    "//generated/third-party/rust:tokio-util",
    "//generated/third-party/rust:tracing",
    "//generated/third-party/rust:tracing-futures",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "handlebars",
    srcs = ["vendor/handlebars-3.5.4/src/block.rs",
    "vendor/handlebars-3.5.4/src/context.rs",
    "vendor/handlebars-3.5.4/src/decorators/inline.rs",
    "vendor/handlebars-3.5.4/src/decorators/mod.rs",
    "vendor/handlebars-3.5.4/src/error.rs",
    "vendor/handlebars-3.5.4/src/grammar.pest",
    "vendor/handlebars-3.5.4/src/grammar.rs",
    "vendor/handlebars-3.5.4/src/helpers/block_util.rs",
    "vendor/handlebars-3.5.4/src/helpers/helper_boolean.rs",
    "vendor/handlebars-3.5.4/src/helpers/helper_each.rs",
    "vendor/handlebars-3.5.4/src/helpers/helper_if.rs",
    "vendor/handlebars-3.5.4/src/helpers/helper_log.rs",
    "vendor/handlebars-3.5.4/src/helpers/helper_lookup.rs",
    "vendor/handlebars-3.5.4/src/helpers/helper_raw.rs",
    "vendor/handlebars-3.5.4/src/helpers/helper_with.rs",
    "vendor/handlebars-3.5.4/src/helpers/mod.rs",
    "vendor/handlebars-3.5.4/src/helpers/scripting.rs",
    "vendor/handlebars-3.5.4/src/json/mod.rs",
    "vendor/handlebars-3.5.4/src/json/path.rs",
    "vendor/handlebars-3.5.4/src/json/value.rs",
    "vendor/handlebars-3.5.4/src/lib.rs",
    "vendor/handlebars-3.5.4/src/macros.rs",
    "vendor/handlebars-3.5.4/src/output.rs",
    "vendor/handlebars-3.5.4/src/partial.rs",
    "vendor/handlebars-3.5.4/src/registry.rs",
    "vendor/handlebars-3.5.4/src/render.rs",
    "vendor/handlebars-3.5.4/src/support.rs",
    "vendor/handlebars-3.5.4/src/template.rs",
    "vendor/handlebars-3.5.4/src/util.rs",
    ],
    deps = [],
    crate = "handlebars",
    crate_root = "vendor/handlebars-3.5.4/src/lib.rs",
    edition = "2018",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:log",
    "//generated/third-party/rust:pest",
    "//generated/third-party/rust:pest_derive",
    "//generated/third-party/rust:quick-error-2.0.0",
    "//generated/third-party/rust:serde",
    "//generated/third-party/rust:serde_json",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "CARGO_MANIFEST_DIR": "third-party/rust/vendor/handlebars-3.5.4",
        "CARGO_PKG_NAME": "handlebars",
        "CARGO_PKG_VERSION": "3.5.4",
        "CARGO_PKG_VERSION_MAJOR": "3",
        "CARGO_PKG_VERSION_MINOR": "5",
        "CARGO_PKG_VERSION_PATCH": "4",
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "hashbrown",
    srcs = ["vendor/hashbrown-0.11.2/src/external_trait_impls/mod.rs",
    "vendor/hashbrown-0.11.2/src/external_trait_impls/rayon/helpers.rs",
    "vendor/hashbrown-0.11.2/src/external_trait_impls/rayon/map.rs",
    "vendor/hashbrown-0.11.2/src/external_trait_impls/rayon/mod.rs",
    "vendor/hashbrown-0.11.2/src/external_trait_impls/rayon/raw.rs",
    "vendor/hashbrown-0.11.2/src/external_trait_impls/rayon/set.rs",
    "vendor/hashbrown-0.11.2/src/external_trait_impls/serde.rs",
    "vendor/hashbrown-0.11.2/src/lib.rs",
    "vendor/hashbrown-0.11.2/src/macros.rs",
    "vendor/hashbrown-0.11.2/src/map.rs",
    "vendor/hashbrown-0.11.2/src/raw/alloc.rs",
    "vendor/hashbrown-0.11.2/src/raw/bitmask.rs",
    "vendor/hashbrown-0.11.2/src/raw/generic.rs",
    "vendor/hashbrown-0.11.2/src/raw/mod.rs",
    "vendor/hashbrown-0.11.2/src/raw/sse2.rs",
    "vendor/hashbrown-0.11.2/src/rustc_entry.rs",
    "vendor/hashbrown-0.11.2/src/scopeguard.rs",
    "vendor/hashbrown-0.11.2/src/set.rs",
    ],
    deps = [],
    crate = "hashbrown",
    crate_root = "vendor/hashbrown-0.11.2/src/lib.rs",
    edition = "2018",
    features = ["ahash",
    "default",
    "inline-more",
    "nightly",
    "raw",
    "serde",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:ahash",
    "//generated/third-party/rust:serde",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "CARGO_MANIFEST_DIR": "third-party/rust/vendor/hashbrown-0.11.2",
        "CARGO_PKG_NAME": "hashbrown",
        "CARGO_PKG_VERSION": "0.11.2",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "11",
        "CARGO_PKG_VERSION_PATCH": "2",
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "headers-0.3.2",
    srcs = ["vendor/headers-0.3.2/src/common/accept_ranges.rs",
    "vendor/headers-0.3.2/src/common/access_control_allow_credentials.rs",
    "vendor/headers-0.3.2/src/common/access_control_allow_headers.rs",
    "vendor/headers-0.3.2/src/common/access_control_allow_methods.rs",
    "vendor/headers-0.3.2/src/common/access_control_allow_origin.rs",
    "vendor/headers-0.3.2/src/common/access_control_expose_headers.rs",
    "vendor/headers-0.3.2/src/common/access_control_max_age.rs",
    "vendor/headers-0.3.2/src/common/access_control_request_headers.rs",
    "vendor/headers-0.3.2/src/common/access_control_request_method.rs",
    "vendor/headers-0.3.2/src/common/allow.rs",
    "vendor/headers-0.3.2/src/common/authorization.rs",
    "vendor/headers-0.3.2/src/common/cache_control.rs",
    "vendor/headers-0.3.2/src/common/connection.rs",
    "vendor/headers-0.3.2/src/common/content_disposition.rs",
    "vendor/headers-0.3.2/src/common/content_encoding.rs",
    "vendor/headers-0.3.2/src/common/content_length.rs",
    "vendor/headers-0.3.2/src/common/content_location.rs",
    "vendor/headers-0.3.2/src/common/content_range.rs",
    "vendor/headers-0.3.2/src/common/content_type.rs",
    "vendor/headers-0.3.2/src/common/cookie.rs",
    "vendor/headers-0.3.2/src/common/date.rs",
    "vendor/headers-0.3.2/src/common/etag.rs",
    "vendor/headers-0.3.2/src/common/expect.rs",
    "vendor/headers-0.3.2/src/common/expires.rs",
    "vendor/headers-0.3.2/src/common/host.rs",
    "vendor/headers-0.3.2/src/common/if_match.rs",
    "vendor/headers-0.3.2/src/common/if_modified_since.rs",
    "vendor/headers-0.3.2/src/common/if_none_match.rs",
    "vendor/headers-0.3.2/src/common/if_range.rs",
    "vendor/headers-0.3.2/src/common/if_unmodified_since.rs",
    "vendor/headers-0.3.2/src/common/last_modified.rs",
    "vendor/headers-0.3.2/src/common/location.rs",
    "vendor/headers-0.3.2/src/common/mod.rs",
    "vendor/headers-0.3.2/src/common/origin.rs",
    "vendor/headers-0.3.2/src/common/pragma.rs",
    "vendor/headers-0.3.2/src/common/proxy_authorization.rs",
    "vendor/headers-0.3.2/src/common/range.rs",
    "vendor/headers-0.3.2/src/common/referer.rs",
    "vendor/headers-0.3.2/src/common/referrer_policy.rs",
    "vendor/headers-0.3.2/src/common/retry_after.rs",
    "vendor/headers-0.3.2/src/common/sec_websocket_accept.rs",
    "vendor/headers-0.3.2/src/common/sec_websocket_key.rs",
    "vendor/headers-0.3.2/src/common/sec_websocket_version.rs",
    "vendor/headers-0.3.2/src/common/server.rs",
    "vendor/headers-0.3.2/src/common/set_cookie.rs",
    "vendor/headers-0.3.2/src/common/strict_transport_security.rs",
    "vendor/headers-0.3.2/src/common/te.rs",
    "vendor/headers-0.3.2/src/common/transfer_encoding.rs",
    "vendor/headers-0.3.2/src/common/upgrade.rs",
    "vendor/headers-0.3.2/src/common/user_agent.rs",
    "vendor/headers-0.3.2/src/common/vary.rs",
    "vendor/headers-0.3.2/src/disabled/accept.rs",
    "vendor/headers-0.3.2/src/disabled/accept_charset.rs",
    "vendor/headers-0.3.2/src/disabled/accept_encoding.rs",
    "vendor/headers-0.3.2/src/disabled/accept_language.rs",
    "vendor/headers-0.3.2/src/disabled/content_language.rs",
    "vendor/headers-0.3.2/src/disabled/from.rs",
    "vendor/headers-0.3.2/src/disabled/last_event_id.rs",
    "vendor/headers-0.3.2/src/disabled/link.rs",
    "vendor/headers-0.3.2/src/disabled/prefer.rs",
    "vendor/headers-0.3.2/src/disabled/preference_applied.rs",
    "vendor/headers-0.3.2/src/disabled/util/charset.rs",
    "vendor/headers-0.3.2/src/disabled/util/encoding.rs",
    "vendor/headers-0.3.2/src/disabled/util/extended_value.rs",
    "vendor/headers-0.3.2/src/disabled/util/quality_value.rs",
    "vendor/headers-0.3.2/src/disabled/warning.rs",
    "vendor/headers-0.3.2/src/lib.rs",
    "vendor/headers-0.3.2/src/map_ext.rs",
    "vendor/headers-0.3.2/src/util/csv.rs",
    "vendor/headers-0.3.2/src/util/entity.rs",
    "vendor/headers-0.3.2/src/util/flat_csv.rs",
    "vendor/headers-0.3.2/src/util/fmt.rs",
    "vendor/headers-0.3.2/src/util/http_date.rs",
    "vendor/headers-0.3.2/src/util/iter.rs",
    "vendor/headers-0.3.2/src/util/mod.rs",
    "vendor/headers-0.3.2/src/util/seconds.rs",
    "vendor/headers-0.3.2/src/util/value_string.rs",
    ],
    deps = [],
    crate = "headers",
    crate_root = "vendor/headers-0.3.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:base64-0.12.3",
    "//generated/third-party/rust:bitflags",
    "//generated/third-party/rust:bytes-05",
    "//generated/third-party/rust:headers-core-0.2.0",
    "//generated/third-party/rust:http",
    "//generated/third-party/rust:mime",
    "//generated/third-party/rust:sha-1",
    "//generated/third-party/rust:time-01",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "headers-core-0.2.0",
    srcs = ["vendor/headers-core-0.2.0/src/lib.rs",],
    deps = [],
    crate = "headers_core",
    crate_root = "vendor/headers-core-0.2.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:http",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "heck",
    srcs = ["vendor/heck-0.3.1/src/camel.rs",
    "vendor/heck-0.3.1/src/kebab.rs",
    "vendor/heck-0.3.1/src/lib.rs",
    "vendor/heck-0.3.1/src/mixed.rs",
    "vendor/heck-0.3.1/src/shouty_snake.rs",
    "vendor/heck-0.3.1/src/snake.rs",
    "vendor/heck-0.3.1/src/title.rs",
    ],
    deps = [],
    crate = "heck",
    crate_root = "vendor/heck-0.3.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:unicode-segmentation",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "hostname",
    srcs = ["vendor/hostname-0.3.1/src/lib.rs",
    "vendor/hostname-0.3.1/src/nix.rs",
    "vendor/hostname-0.3.1/src/windows.rs",
    ],
    deps = [],
    crate = "hostname",
    crate_root = "vendor/hostname-0.3.1/src/lib.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:match_cfg-0.1.0",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "http",
    srcs = ["vendor/http-0.2.1/src/byte_str.rs",
    "vendor/http-0.2.1/src/convert.rs",
    "vendor/http-0.2.1/src/error.rs",
    "vendor/http-0.2.1/src/extensions.rs",
    "vendor/http-0.2.1/src/header/map.rs",
    "vendor/http-0.2.1/src/header/mod.rs",
    "vendor/http-0.2.1/src/header/name.rs",
    "vendor/http-0.2.1/src/header/value.rs",
    "vendor/http-0.2.1/src/lib.rs",
    "vendor/http-0.2.1/src/method.rs",
    "vendor/http-0.2.1/src/request.rs",
    "vendor/http-0.2.1/src/response.rs",
    "vendor/http-0.2.1/src/status.rs",
    "vendor/http-0.2.1/src/uri/authority.rs",
    "vendor/http-0.2.1/src/uri/builder.rs",
    "vendor/http-0.2.1/src/uri/mod.rs",
    "vendor/http-0.2.1/src/uri/path.rs",
    "vendor/http-0.2.1/src/uri/port.rs",
    "vendor/http-0.2.1/src/uri/scheme.rs",
    "vendor/http-0.2.1/src/uri/tests.rs",
    "vendor/http-0.2.1/src/version.rs",
    ],
    deps = [],
    crate = "http",
    crate_root = "vendor/http-0.2.1/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bytes-05",
    "//generated/third-party/rust:fnv",
    "//generated/third-party/rust:itoa-0.4.6",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "http-body-0.4.0",
    srcs = ["vendor/http-body-0.4.0/src/lib.rs",
    "vendor/http-body-0.4.0/src/next.rs",
    "vendor/http-body-0.4.0/src/size_hint.rs",
    ],
    deps = [],
    crate = "http_body",
    crate_root = "vendor/http-body-0.4.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bytes",
    "//generated/third-party/rust:http",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "httparse-1.4.1",
    srcs = ["vendor/httparse-1.4.1/src/iter.rs",
    "vendor/httparse-1.4.1/src/lib.rs",
    "vendor/httparse-1.4.1/src/macros.rs",
    "vendor/httparse-1.4.1/src/simd/avx2.rs",
    "vendor/httparse-1.4.1/src/simd/fallback.rs",
    "vendor/httparse-1.4.1/src/simd/mod.rs",
    "vendor/httparse-1.4.1/src/simd/sse42.rs",
    ],
    deps = [],
    crate = "httparse",
    crate_root = "vendor/httparse-1.4.1/src/lib.rs",
    edition = "2015",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :httparse-1.4.1-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "httparse-1.4.1-build-script-build",
    srcs = ["vendor/httparse-1.4.1/benches/parse.rs",
    "vendor/httparse-1.4.1/build.rs",
    "vendor/httparse-1.4.1/src/iter.rs",
    "vendor/httparse-1.4.1/src/lib.rs",
    "vendor/httparse-1.4.1/src/macros.rs",
    "vendor/httparse-1.4.1/src/simd/avx2.rs",
    "vendor/httparse-1.4.1/src/simd/fallback.rs",
    "vendor/httparse-1.4.1/src/simd/mod.rs",
    "vendor/httparse-1.4.1/src/simd/sse42.rs",
    "vendor/httparse-1.4.1/tests/uri.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/httparse-1.4.1/build.rs",
    edition = "2015",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "httpdate-1.0.0",
    srcs = ["vendor/httpdate-1.0.0/src/date.rs",
    "vendor/httpdate-1.0.0/src/lib.rs",
    ],
    deps = [],
    crate = "httpdate",
    crate_root = "vendor/httpdate-1.0.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "humantime",
    srcs = ["vendor/humantime-1.3.0/src/date.rs",
    "vendor/humantime-1.3.0/src/duration.rs",
    "vendor/humantime-1.3.0/src/lib.rs",
    "vendor/humantime-1.3.0/src/wrapper.rs",
    ],
    deps = [],
    crate = "humantime",
    crate_root = "vendor/humantime-1.3.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:quick-error-1.2.3",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "hyper",
    srcs = ["vendor/hyper-0.14.7/src/body/aggregate.rs",
    "vendor/hyper-0.14.7/src/body/body.rs",
    "vendor/hyper-0.14.7/src/body/length.rs",
    "vendor/hyper-0.14.7/src/body/mod.rs",
    "vendor/hyper-0.14.7/src/body/to_bytes.rs",
    "vendor/hyper-0.14.7/src/cfg.rs",
    "vendor/hyper-0.14.7/src/client/client.rs",
    "vendor/hyper-0.14.7/src/client/conn.rs",
    "vendor/hyper-0.14.7/src/client/connect/dns.rs",
    "vendor/hyper-0.14.7/src/client/connect/http.rs",
    "vendor/hyper-0.14.7/src/client/connect/mod.rs",
    "vendor/hyper-0.14.7/src/client/dispatch.rs",
    "vendor/hyper-0.14.7/src/client/mod.rs",
    "vendor/hyper-0.14.7/src/client/pool.rs",
    "vendor/hyper-0.14.7/src/client/service.rs",
    "vendor/hyper-0.14.7/src/client/tests.rs",
    "vendor/hyper-0.14.7/src/common/buf.rs",
    "vendor/hyper-0.14.7/src/common/date.rs",
    "vendor/hyper-0.14.7/src/common/drain.rs",
    "vendor/hyper-0.14.7/src/common/exec.rs",
    "vendor/hyper-0.14.7/src/common/io/mod.rs",
    "vendor/hyper-0.14.7/src/common/io/rewind.rs",
    "vendor/hyper-0.14.7/src/common/lazy.rs",
    "vendor/hyper-0.14.7/src/common/mod.rs",
    "vendor/hyper-0.14.7/src/common/never.rs",
    "vendor/hyper-0.14.7/src/common/sync_wrapper.rs",
    "vendor/hyper-0.14.7/src/common/task.rs",
    "vendor/hyper-0.14.7/src/common/watch.rs",
    "vendor/hyper-0.14.7/src/error.rs",
    "vendor/hyper-0.14.7/src/ext.rs",
    "vendor/hyper-0.14.7/src/ffi/body.rs",
    "vendor/hyper-0.14.7/src/ffi/client.rs",
    "vendor/hyper-0.14.7/src/ffi/error.rs",
    "vendor/hyper-0.14.7/src/ffi/http_types.rs",
    "vendor/hyper-0.14.7/src/ffi/io.rs",
    "vendor/hyper-0.14.7/src/ffi/macros.rs",
    "vendor/hyper-0.14.7/src/ffi/mod.rs",
    "vendor/hyper-0.14.7/src/ffi/task.rs",
    "vendor/hyper-0.14.7/src/headers.rs",
    "vendor/hyper-0.14.7/src/lib.rs",
    "vendor/hyper-0.14.7/src/mock.rs",
    "vendor/hyper-0.14.7/src/proto/h1/conn.rs",
    "vendor/hyper-0.14.7/src/proto/h1/decode.rs",
    "vendor/hyper-0.14.7/src/proto/h1/dispatch.rs",
    "vendor/hyper-0.14.7/src/proto/h1/encode.rs",
    "vendor/hyper-0.14.7/src/proto/h1/io.rs",
    "vendor/hyper-0.14.7/src/proto/h1/mod.rs",
    "vendor/hyper-0.14.7/src/proto/h1/role.rs",
    "vendor/hyper-0.14.7/src/proto/h2/client.rs",
    "vendor/hyper-0.14.7/src/proto/h2/mod.rs",
    "vendor/hyper-0.14.7/src/proto/h2/ping.rs",
    "vendor/hyper-0.14.7/src/proto/h2/server.rs",
    "vendor/hyper-0.14.7/src/proto/mod.rs",
    "vendor/hyper-0.14.7/src/rt.rs",
    "vendor/hyper-0.14.7/src/server/accept.rs",
    "vendor/hyper-0.14.7/src/server/conn.rs",
    "vendor/hyper-0.14.7/src/server/mod.rs",
    "vendor/hyper-0.14.7/src/server/server.rs",
    "vendor/hyper-0.14.7/src/server/shutdown.rs",
    "vendor/hyper-0.14.7/src/server/tcp.rs",
    "vendor/hyper-0.14.7/src/service/http.rs",
    "vendor/hyper-0.14.7/src/service/make.rs",
    "vendor/hyper-0.14.7/src/service/mod.rs",
    "vendor/hyper-0.14.7/src/service/oneshot.rs",
    "vendor/hyper-0.14.7/src/service/util.rs",
    "vendor/hyper-0.14.7/src/upgrade.rs",
    ],
    deps = [],
    crate = "hyper",
    crate_root = "vendor/hyper-0.14.7/src/lib.rs",
    edition = "2018",
    features = ["client",
    "default",
    "full",
    "h2",
    "http1",
    "http2",
    "runtime",
    "server",
    "socket2",
    "stream",
    "tcp",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bytes",
    "//generated/third-party/rust:futures-channel",
    "//generated/third-party/rust:futures-core",
    "//generated/third-party/rust:futures-util",
    "//generated/third-party/rust:h2-0.3.0",
    "//generated/third-party/rust:http",
    "//generated/third-party/rust:http-body-0.4.0",
    "//generated/third-party/rust:httparse-1.4.1",
    "//generated/third-party/rust:httpdate-1.0.0",
    "//generated/third-party/rust:itoa-0.4.6",
    "//generated/third-party/rust:pin-project-1.0.2",
    "//generated/third-party/rust:socket2-0.4.0",
    "//generated/third-party/rust:tokio",
    "//generated/third-party/rust:tower-service",
    "//generated/third-party/rust:tracing",
    "//generated/third-party/rust:want-0.3.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "hyper-rustls",
    srcs = ["vendor/hyper-rustls-0.22.1/src/connector.rs",
    "vendor/hyper-rustls-0.22.1/src/lib.rs",
    "vendor/hyper-rustls-0.22.1/src/stream.rs",
    ],
    deps = [],
    crate = "hyper_rustls",
    crate_root = "vendor/hyper-rustls-0.22.1/src/lib.rs",
    edition = "2018",
    features = ["ct-logs",
    "default",
    "native-tokio",
    "rustls-native-certs",
    "tokio-runtime",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:ct-logs-0.8.0",
    "//generated/third-party/rust:futures-util",
    "//generated/third-party/rust:hyper",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:rustls",
    "//generated/third-party/rust:rustls-native-certs",
    "//generated/third-party/rust:tokio",
    "//generated/third-party/rust:tokio-rustls",
    "//generated/third-party/rust:webpki",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "ident_case-1.0.1",
    srcs = ["vendor/ident_case-1.0.1/src/lib.rs",],
    deps = [],
    crate = "ident_case",
    crate_root = "vendor/ident_case-1.0.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "idna-0.2.0",
    srcs = ["vendor/idna-0.2.0/src/lib.rs",
    "vendor/idna-0.2.0/src/punycode.rs",
    "vendor/idna-0.2.0/src/uts46.rs",
    "vendor/idna-0.2.0/src/uts46_mapping_table.rs",
    ],
    deps = [],
    crate = "idna",
    crate_root = "vendor/idna-0.2.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:matches-0.1.8",
    "//generated/third-party/rust:unicode-bidi-0.3.4",
    "//generated/third-party/rust:unicode-normalization-0.1.13",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "indexmap",
    srcs = ["vendor/indexmap-1.7.0/src/equivalent.rs",
    "vendor/indexmap-1.7.0/src/lib.rs",
    "vendor/indexmap-1.7.0/src/macros.rs",
    "vendor/indexmap-1.7.0/src/map.rs",
    "vendor/indexmap-1.7.0/src/map/core.rs",
    "vendor/indexmap-1.7.0/src/map/core/raw.rs",
    "vendor/indexmap-1.7.0/src/mutable_keys.rs",
    "vendor/indexmap-1.7.0/src/rayon/map.rs",
    "vendor/indexmap-1.7.0/src/rayon/mod.rs",
    "vendor/indexmap-1.7.0/src/rayon/set.rs",
    "vendor/indexmap-1.7.0/src/serde.rs",
    "vendor/indexmap-1.7.0/src/serde_seq.rs",
    "vendor/indexmap-1.7.0/src/set.rs",
    "vendor/indexmap-1.7.0/src/util.rs",
    ],
    deps = [],
    crate = "indexmap",
    crate_root = "vendor/indexmap-1.7.0/src/lib.rs",
    edition = "2018",
    features = ["rayon",
    "serde",
    "serde-1",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:hashbrown",
    "//generated/third-party/rust:rayon",
    "//generated/third-party/rust:serde",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "--cfg=has_std",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "input_buffer-0.4.0",
    srcs = ["vendor/input_buffer-0.4.0/src/lib.rs",],
    deps = [],
    crate = "input_buffer",
    crate_root = "vendor/input_buffer-0.4.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bytes",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "instant-0.1.7",
    srcs = ["vendor/instant-0.1.7/src/lib.rs",
    "vendor/instant-0.1.7/src/native.rs",
    "vendor/instant-0.1.7/src/wasm.rs",
    ],
    deps = [],
    crate = "instant",
    crate_root = "vendor/instant-0.1.7/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "iovec-0.1.4",
    srcs = ["vendor/iovec-0.1.4/src/lib.rs",
    "vendor/iovec-0.1.4/src/sys/mod.rs",
    "vendor/iovec-0.1.4/src/sys/unix.rs",
    "vendor/iovec-0.1.4/src/sys/unknown.rs",
    "vendor/iovec-0.1.4/src/sys/windows.rs",
    "vendor/iovec-0.1.4/src/unix.rs",
    "vendor/iovec-0.1.4/src/windows.rs",
    ],
    deps = [],
    crate = "iovec",
    crate_root = "vendor/iovec-0.1.4/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "ipnet-2.3.0",
    srcs = ["vendor/ipnet-2.3.0/src/ipext.rs",
    "vendor/ipnet-2.3.0/src/ipnet.rs",
    "vendor/ipnet-2.3.0/src/ipnet_serde.rs",
    "vendor/ipnet-2.3.0/src/lib.rs",
    "vendor/ipnet-2.3.0/src/parser.rs",
    ],
    deps = [],
    crate = "ipnet",
    crate_root = "vendor/ipnet-2.3.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "itertools",
    srcs = ["vendor/itertools-0.10.1/src/adaptors/coalesce.rs",
    "vendor/itertools-0.10.1/src/adaptors/map.rs",
    "vendor/itertools-0.10.1/src/adaptors/mod.rs",
    "vendor/itertools-0.10.1/src/adaptors/multi_product.rs",
    "vendor/itertools-0.10.1/src/combinations.rs",
    "vendor/itertools-0.10.1/src/combinations_with_replacement.rs",
    "vendor/itertools-0.10.1/src/concat_impl.rs",
    "vendor/itertools-0.10.1/src/cons_tuples_impl.rs",
    "vendor/itertools-0.10.1/src/diff.rs",
    "vendor/itertools-0.10.1/src/duplicates_impl.rs",
    "vendor/itertools-0.10.1/src/either_or_both.rs",
    "vendor/itertools-0.10.1/src/exactly_one_err.rs",
    "vendor/itertools-0.10.1/src/flatten_ok.rs",
    "vendor/itertools-0.10.1/src/format.rs",
    "vendor/itertools-0.10.1/src/free.rs",
    "vendor/itertools-0.10.1/src/group_map.rs",
    "vendor/itertools-0.10.1/src/groupbylazy.rs",
    "vendor/itertools-0.10.1/src/grouping_map.rs",
    "vendor/itertools-0.10.1/src/impl_macros.rs",
    "vendor/itertools-0.10.1/src/intersperse.rs",
    "vendor/itertools-0.10.1/src/k_smallest.rs",
    "vendor/itertools-0.10.1/src/kmerge_impl.rs",
    "vendor/itertools-0.10.1/src/lazy_buffer.rs",
    "vendor/itertools-0.10.1/src/lib.rs",
    "vendor/itertools-0.10.1/src/merge_join.rs",
    "vendor/itertools-0.10.1/src/minmax.rs",
    "vendor/itertools-0.10.1/src/multipeek_impl.rs",
    "vendor/itertools-0.10.1/src/pad_tail.rs",
    "vendor/itertools-0.10.1/src/peek_nth.rs",
    "vendor/itertools-0.10.1/src/peeking_take_while.rs",
    "vendor/itertools-0.10.1/src/permutations.rs",
    "vendor/itertools-0.10.1/src/powerset.rs",
    "vendor/itertools-0.10.1/src/process_results_impl.rs",
    "vendor/itertools-0.10.1/src/put_back_n_impl.rs",
    "vendor/itertools-0.10.1/src/rciter_impl.rs",
    "vendor/itertools-0.10.1/src/repeatn.rs",
    "vendor/itertools-0.10.1/src/size_hint.rs",
    "vendor/itertools-0.10.1/src/sources.rs",
    "vendor/itertools-0.10.1/src/tee.rs",
    "vendor/itertools-0.10.1/src/tuple_impl.rs",
    "vendor/itertools-0.10.1/src/unique_impl.rs",
    "vendor/itertools-0.10.1/src/with_position.rs",
    "vendor/itertools-0.10.1/src/zip_eq_impl.rs",
    "vendor/itertools-0.10.1/src/zip_longest.rs",
    "vendor/itertools-0.10.1/src/ziptuple.rs",
    ],
    deps = [],
    crate = "itertools",
    crate_root = "vendor/itertools-0.10.1/src/lib.rs",
    edition = "2018",
    features = ["default",
    "use_alloc",
    "use_std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:either",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "itertools-0.9.0",
    srcs = ["vendor/itertools-0.9.0/src/adaptors/mod.rs",
    "vendor/itertools-0.9.0/src/adaptors/multi_product.rs",
    "vendor/itertools-0.9.0/src/combinations.rs",
    "vendor/itertools-0.9.0/src/combinations_with_replacement.rs",
    "vendor/itertools-0.9.0/src/concat_impl.rs",
    "vendor/itertools-0.9.0/src/cons_tuples_impl.rs",
    "vendor/itertools-0.9.0/src/diff.rs",
    "vendor/itertools-0.9.0/src/either_or_both.rs",
    "vendor/itertools-0.9.0/src/exactly_one_err.rs",
    "vendor/itertools-0.9.0/src/format.rs",
    "vendor/itertools-0.9.0/src/free.rs",
    "vendor/itertools-0.9.0/src/group_map.rs",
    "vendor/itertools-0.9.0/src/groupbylazy.rs",
    "vendor/itertools-0.9.0/src/impl_macros.rs",
    "vendor/itertools-0.9.0/src/intersperse.rs",
    "vendor/itertools-0.9.0/src/kmerge_impl.rs",
    "vendor/itertools-0.9.0/src/lazy_buffer.rs",
    "vendor/itertools-0.9.0/src/lib.rs",
    "vendor/itertools-0.9.0/src/merge_join.rs",
    "vendor/itertools-0.9.0/src/minmax.rs",
    "vendor/itertools-0.9.0/src/multipeek_impl.rs",
    "vendor/itertools-0.9.0/src/pad_tail.rs",
    "vendor/itertools-0.9.0/src/peeking_take_while.rs",
    "vendor/itertools-0.9.0/src/permutations.rs",
    "vendor/itertools-0.9.0/src/process_results_impl.rs",
    "vendor/itertools-0.9.0/src/put_back_n_impl.rs",
    "vendor/itertools-0.9.0/src/rciter_impl.rs",
    "vendor/itertools-0.9.0/src/repeatn.rs",
    "vendor/itertools-0.9.0/src/size_hint.rs",
    "vendor/itertools-0.9.0/src/sources.rs",
    "vendor/itertools-0.9.0/src/tee.rs",
    "vendor/itertools-0.9.0/src/tuple_impl.rs",
    "vendor/itertools-0.9.0/src/unique_impl.rs",
    "vendor/itertools-0.9.0/src/with_position.rs",
    "vendor/itertools-0.9.0/src/zip_eq_impl.rs",
    "vendor/itertools-0.9.0/src/zip_longest.rs",
    "vendor/itertools-0.9.0/src/ziptuple.rs",
    ],
    deps = [],
    crate = "itertools",
    crate_root = "vendor/itertools-0.9.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "use_std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:either",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "itoa-0.4.6",
    srcs = ["vendor/itoa-0.4.6/src/lib.rs",
    "vendor/itoa-0.4.6/src/udiv128.rs",
    ],
    deps = [],
    crate = "itoa",
    crate_root = "vendor/itoa-0.4.6/src/lib.rs",
    edition = "2015",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "lalrpop",
    srcs = ["vendor/lalrpop-0.19.1/src/api/mod.rs",
    "vendor/lalrpop-0.19.1/src/build/action.rs",
    "vendor/lalrpop-0.19.1/src/build/fake_term.rs",
    "vendor/lalrpop-0.19.1/src/build/mod.rs",
    "vendor/lalrpop-0.19.1/src/collections/map.rs",
    "vendor/lalrpop-0.19.1/src/collections/mod.rs",
    "vendor/lalrpop-0.19.1/src/collections/multimap.rs",
    "vendor/lalrpop-0.19.1/src/collections/set.rs",
    "vendor/lalrpop-0.19.1/src/file_text.rs",
    "vendor/lalrpop-0.19.1/src/generate.rs",
    "vendor/lalrpop-0.19.1/src/grammar/consts.rs",
    "vendor/lalrpop-0.19.1/src/grammar/free_variables/mod.rs",
    "vendor/lalrpop-0.19.1/src/grammar/free_variables/test.rs",
    "vendor/lalrpop-0.19.1/src/grammar/mod.rs",
    "vendor/lalrpop-0.19.1/src/grammar/parse_tree.rs",
    "vendor/lalrpop-0.19.1/src/grammar/pattern.rs",
    "vendor/lalrpop-0.19.1/src/grammar/repr.rs",
    "vendor/lalrpop-0.19.1/src/grammar/token/mod.rs",
    "vendor/lalrpop-0.19.1/src/grammar/token/test.rs",
    "vendor/lalrpop-0.19.1/src/kernel_set.rs",
    "vendor/lalrpop-0.19.1/src/lexer/dfa/interpret.rs",
    "vendor/lalrpop-0.19.1/src/lexer/dfa/mod.rs",
    "vendor/lalrpop-0.19.1/src/lexer/dfa/overlap.rs",
    "vendor/lalrpop-0.19.1/src/lexer/dfa/test.rs",
    "vendor/lalrpop-0.19.1/src/lexer/intern_token/mod.rs",
    "vendor/lalrpop-0.19.1/src/lexer/mod.rs",
    "vendor/lalrpop-0.19.1/src/lexer/nfa/interpret.rs",
    "vendor/lalrpop-0.19.1/src/lexer/nfa/mod.rs",
    "vendor/lalrpop-0.19.1/src/lexer/nfa/test.rs",
    "vendor/lalrpop-0.19.1/src/lexer/re/mod.rs",
    "vendor/lalrpop-0.19.1/src/lexer/re/test.rs",
    "vendor/lalrpop-0.19.1/src/lib.rs",
    "vendor/lalrpop-0.19.1/src/log.rs",
    "vendor/lalrpop-0.19.1/src/lr1/build/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/build/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/build_lalr/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/build_lalr/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/codegen/ascent.rs",
    "vendor/lalrpop-0.19.1/src/lr1/codegen/base.rs",
    "vendor/lalrpop-0.19.1/src/lr1/codegen/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/codegen/parse_table.rs",
    "vendor/lalrpop-0.19.1/src/lr1/codegen/test_all.rs",
    "vendor/lalrpop-0.19.1/src/lr1/core/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/error/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/error/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/example/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/example/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/first/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/first/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/interpret.rs",
    "vendor/lalrpop-0.19.1/src/lr1/item.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/construct/merge.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/construct/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/construct/state_set.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/lane/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/table/context_set/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/table/context_set/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/table/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lookahead.rs",
    "vendor/lalrpop-0.19.1/src/lr1/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/report/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/state_graph.rs",
    "vendor/lalrpop-0.19.1/src/lr1/tls.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/reduce/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/reduce/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/shift/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/shift/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/trace_graph/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/trace_graph/test.rs",
    "vendor/lalrpop-0.19.1/src/main.rs",
    "vendor/lalrpop-0.19.1/src/message/builder.rs",
    "vendor/lalrpop-0.19.1/src/message/horiz.rs",
    "vendor/lalrpop-0.19.1/src/message/indent.rs",
    "vendor/lalrpop-0.19.1/src/message/message.rs",
    "vendor/lalrpop-0.19.1/src/message/mod.rs",
    "vendor/lalrpop-0.19.1/src/message/styled.rs",
    "vendor/lalrpop-0.19.1/src/message/test.rs",
    "vendor/lalrpop-0.19.1/src/message/text.rs",
    "vendor/lalrpop-0.19.1/src/message/vert.rs",
    "vendor/lalrpop-0.19.1/src/message/wrap.rs",
    "vendor/lalrpop-0.19.1/src/normalize/inline/graph/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/inline/graph/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/inline/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/inline/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/lower/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/macro_expand/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/macro_expand/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/norm_util.rs",
    "vendor/lalrpop-0.19.1/src/normalize/prevalidate/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/prevalidate/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/resolve/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/resolve/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/token_check/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/token_check/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/tyinfer/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/tyinfer/test.rs",
    "vendor/lalrpop-0.19.1/src/parser/lrgrammar.rs",
    "vendor/lalrpop-0.19.1/src/parser/mod.rs",
    "vendor/lalrpop-0.19.1/src/parser/test.rs",
    "vendor/lalrpop-0.19.1/src/rust/mod.rs",
    "vendor/lalrpop-0.19.1/src/session.rs",
    "vendor/lalrpop-0.19.1/src/test_util.rs",
    "vendor/lalrpop-0.19.1/src/tls/mod.rs",
    "vendor/lalrpop-0.19.1/src/tok/mod.rs",
    "vendor/lalrpop-0.19.1/src/tok/test.rs",
    "vendor/lalrpop-0.19.1/src/util.rs",
    ],
    deps = [],
    crate = "lalrpop",
    crate_root = "vendor/lalrpop-0.19.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:ascii-canvas-2.0.0",
    "//generated/third-party/rust:atty",
    "//generated/third-party/rust:bit-set",
    "//generated/third-party/rust:diff",
    "//generated/third-party/rust:docopt-1.1.0",
    "//generated/third-party/rust:ena-0.14.0",
    "//generated/third-party/rust:itertools-0.9.0",
    "//generated/third-party/rust:lalrpop-util",
    "//generated/third-party/rust:petgraph-0.5.1",
    "//generated/third-party/rust:regex",
    "//generated/third-party/rust:regex-syntax-0.6.21",
    "//generated/third-party/rust:serde",
    "//generated/third-party/rust:serde_derive",
    "//generated/third-party/rust:sha2",
    "//generated/third-party/rust:string_cache",
    "//generated/third-party/rust:term-0.5.2",
    "//generated/third-party/rust:unicode-xid-0.2.1",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "CARGO_MANIFEST_DIR": "third-party/rust/vendor/lalrpop-0.19.1",
        "CARGO_PKG_NAME": "lalrpop",
        "CARGO_PKG_VERSION": "0.19.1",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "19",
        "CARGO_PKG_VERSION_PATCH": "1",
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "lalrpop-lalrpop",
    srcs = ["vendor/lalrpop-0.19.1/src/api/mod.rs",
    "vendor/lalrpop-0.19.1/src/build/action.rs",
    "vendor/lalrpop-0.19.1/src/build/fake_term.rs",
    "vendor/lalrpop-0.19.1/src/build/mod.rs",
    "vendor/lalrpop-0.19.1/src/collections/map.rs",
    "vendor/lalrpop-0.19.1/src/collections/mod.rs",
    "vendor/lalrpop-0.19.1/src/collections/multimap.rs",
    "vendor/lalrpop-0.19.1/src/collections/set.rs",
    "vendor/lalrpop-0.19.1/src/file_text.rs",
    "vendor/lalrpop-0.19.1/src/generate.rs",
    "vendor/lalrpop-0.19.1/src/grammar/consts.rs",
    "vendor/lalrpop-0.19.1/src/grammar/free_variables/mod.rs",
    "vendor/lalrpop-0.19.1/src/grammar/free_variables/test.rs",
    "vendor/lalrpop-0.19.1/src/grammar/mod.rs",
    "vendor/lalrpop-0.19.1/src/grammar/parse_tree.rs",
    "vendor/lalrpop-0.19.1/src/grammar/pattern.rs",
    "vendor/lalrpop-0.19.1/src/grammar/repr.rs",
    "vendor/lalrpop-0.19.1/src/grammar/token/mod.rs",
    "vendor/lalrpop-0.19.1/src/grammar/token/test.rs",
    "vendor/lalrpop-0.19.1/src/kernel_set.rs",
    "vendor/lalrpop-0.19.1/src/lexer/dfa/interpret.rs",
    "vendor/lalrpop-0.19.1/src/lexer/dfa/mod.rs",
    "vendor/lalrpop-0.19.1/src/lexer/dfa/overlap.rs",
    "vendor/lalrpop-0.19.1/src/lexer/dfa/test.rs",
    "vendor/lalrpop-0.19.1/src/lexer/intern_token/mod.rs",
    "vendor/lalrpop-0.19.1/src/lexer/mod.rs",
    "vendor/lalrpop-0.19.1/src/lexer/nfa/interpret.rs",
    "vendor/lalrpop-0.19.1/src/lexer/nfa/mod.rs",
    "vendor/lalrpop-0.19.1/src/lexer/nfa/test.rs",
    "vendor/lalrpop-0.19.1/src/lexer/re/mod.rs",
    "vendor/lalrpop-0.19.1/src/lexer/re/test.rs",
    "vendor/lalrpop-0.19.1/src/lib.rs",
    "vendor/lalrpop-0.19.1/src/log.rs",
    "vendor/lalrpop-0.19.1/src/lr1/build/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/build/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/build_lalr/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/build_lalr/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/codegen/ascent.rs",
    "vendor/lalrpop-0.19.1/src/lr1/codegen/base.rs",
    "vendor/lalrpop-0.19.1/src/lr1/codegen/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/codegen/parse_table.rs",
    "vendor/lalrpop-0.19.1/src/lr1/codegen/test_all.rs",
    "vendor/lalrpop-0.19.1/src/lr1/core/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/error/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/error/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/example/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/example/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/first/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/first/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/interpret.rs",
    "vendor/lalrpop-0.19.1/src/lr1/item.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/construct/merge.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/construct/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/construct/state_set.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/lane/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/table/context_set/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/table/context_set/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/table/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lane_table/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/lookahead.rs",
    "vendor/lalrpop-0.19.1/src/lr1/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/report/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/state_graph.rs",
    "vendor/lalrpop-0.19.1/src/lr1/tls.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/reduce/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/reduce/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/shift/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/shift/test.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/trace_graph/mod.rs",
    "vendor/lalrpop-0.19.1/src/lr1/trace/trace_graph/test.rs",
    "vendor/lalrpop-0.19.1/src/main.rs",
    "vendor/lalrpop-0.19.1/src/message/builder.rs",
    "vendor/lalrpop-0.19.1/src/message/horiz.rs",
    "vendor/lalrpop-0.19.1/src/message/indent.rs",
    "vendor/lalrpop-0.19.1/src/message/message.rs",
    "vendor/lalrpop-0.19.1/src/message/mod.rs",
    "vendor/lalrpop-0.19.1/src/message/styled.rs",
    "vendor/lalrpop-0.19.1/src/message/test.rs",
    "vendor/lalrpop-0.19.1/src/message/text.rs",
    "vendor/lalrpop-0.19.1/src/message/vert.rs",
    "vendor/lalrpop-0.19.1/src/message/wrap.rs",
    "vendor/lalrpop-0.19.1/src/normalize/inline/graph/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/inline/graph/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/inline/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/inline/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/lower/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/macro_expand/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/macro_expand/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/norm_util.rs",
    "vendor/lalrpop-0.19.1/src/normalize/prevalidate/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/prevalidate/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/resolve/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/resolve/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/token_check/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/token_check/test.rs",
    "vendor/lalrpop-0.19.1/src/normalize/tyinfer/mod.rs",
    "vendor/lalrpop-0.19.1/src/normalize/tyinfer/test.rs",
    "vendor/lalrpop-0.19.1/src/parser/lrgrammar.rs",
    "vendor/lalrpop-0.19.1/src/parser/mod.rs",
    "vendor/lalrpop-0.19.1/src/parser/test.rs",
    "vendor/lalrpop-0.19.1/src/rust/mod.rs",
    "vendor/lalrpop-0.19.1/src/session.rs",
    "vendor/lalrpop-0.19.1/src/test_util.rs",
    "vendor/lalrpop-0.19.1/src/tls/mod.rs",
    "vendor/lalrpop-0.19.1/src/tok/mod.rs",
    "vendor/lalrpop-0.19.1/src/tok/test.rs",
    "vendor/lalrpop-0.19.1/src/util.rs",
    ],
    deps = [],
    crate = "lalrpop",
    crate_root = "vendor/lalrpop-0.19.1/src/main.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:ascii-canvas-2.0.0",
    "//generated/third-party/rust:atty",
    "//generated/third-party/rust:bit-set",
    "//generated/third-party/rust:diff",
    "//generated/third-party/rust:docopt-1.1.0",
    "//generated/third-party/rust:ena-0.14.0",
    "//generated/third-party/rust:itertools-0.9.0",
    "//generated/third-party/rust:lalrpop",
    "//generated/third-party/rust:lalrpop-util",
    "//generated/third-party/rust:petgraph-0.5.1",
    "//generated/third-party/rust:regex",
    "//generated/third-party/rust:regex-syntax-0.6.21",
    "//generated/third-party/rust:serde",
    "//generated/third-party/rust:serde_derive",
    "//generated/third-party/rust:sha2",
    "//generated/third-party/rust:string_cache",
    "//generated/third-party/rust:term-0.5.2",
    "//generated/third-party/rust:unicode-xid-0.2.1",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "CARGO_MANIFEST_DIR": "third-party/rust/vendor/lalrpop-0.19.1",
        "CARGO_PKG_NAME": "lalrpop",
        "CARGO_PKG_VERSION": "0.19.1",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "19",
        "CARGO_PKG_VERSION_PATCH": "1",
    },
    unittests = False,
)
third_party_rust_library(
    name = "lalrpop-util",
    srcs = ["vendor/lalrpop-util-0.19.1/src/lexer.rs",
    "vendor/lalrpop-util-0.19.1/src/lib.rs",
    "vendor/lalrpop-util-0.19.1/src/state_machine.rs",
    ],
    deps = [],
    crate = "lalrpop_util",
    crate_root = "vendor/lalrpop-util-0.19.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "lazy_static",
    srcs = ["vendor/lazy_static-1.4.0/src/core_lazy.rs",
    "vendor/lazy_static-1.4.0/src/inline_lazy.rs",
    "vendor/lazy_static-1.4.0/src/lib.rs",
    ],
    deps = [],
    crate = "lazy_static",
    crate_root = "vendor/lazy_static-1.4.0/src/lib.rs",
    edition = "2015",
    features = ["spin",
    "spin_no_std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:spin-0.5.2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "libc",
    srcs = ["vendor/libc-0.2.98/src/fixed_width_ints.rs",
    "vendor/libc-0.2.98/src/fuchsia/aarch64.rs",
    "vendor/libc-0.2.98/src/fuchsia/align.rs",
    "vendor/libc-0.2.98/src/fuchsia/mod.rs",
    "vendor/libc-0.2.98/src/fuchsia/no_align.rs",
    "vendor/libc-0.2.98/src/fuchsia/x86_64.rs",
    "vendor/libc-0.2.98/src/hermit/aarch64.rs",
    "vendor/libc-0.2.98/src/hermit/mod.rs",
    "vendor/libc-0.2.98/src/hermit/x86_64.rs",
    "vendor/libc-0.2.98/src/lib.rs",
    "vendor/libc-0.2.98/src/macros.rs",
    "vendor/libc-0.2.98/src/psp.rs",
    "vendor/libc-0.2.98/src/sgx.rs",
    "vendor/libc-0.2.98/src/switch.rs",
    "vendor/libc-0.2.98/src/unix/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b32/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b32/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/aarch64/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/aarch64/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/x86_64/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/dragonfly/errno.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/dragonfly/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/aarch64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/arm.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd11/b64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd11/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd12/b64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd12/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd13/b64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd13/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/powerpc.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/powerpc64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86_64/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/aarch64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/arm.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/powerpc.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/sparc64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/x86.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/x86_64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/aarch64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/sparc64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/x86.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/x86_64.rs",
    "vendor/libc-0.2.98/src/unix/haiku/b32.rs",
    "vendor/libc-0.2.98/src/unix/haiku/b64.rs",
    "vendor/libc-0.2.98/src/unix/haiku/mod.rs",
    "vendor/libc-0.2.98/src/unix/haiku/native.rs",
    "vendor/libc-0.2.98/src/unix/hermit/aarch64.rs",
    "vendor/libc-0.2.98/src/unix/hermit/mod.rs",
    "vendor/libc-0.2.98/src/unix/hermit/x86_64.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b32/arm.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b32/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b32/x86/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b32/x86/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b64/aarch64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b64/aarch64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b64/x86_64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b64/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/emscripten/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/emscripten/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/emscripten/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/arch/generic/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/arch/mips/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/arch/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/arch/powerpc/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/arch/sparc/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/arm/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/arm/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mips/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mips/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/powerpc.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/riscv32/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/sparc/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/sparc/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/x86/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/x86/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/ilp32.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/lp64.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mips64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mips64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/powerpc64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/powerpc64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/riscv64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/s390x.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/sparc64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/sparc64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/x32.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/arm/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/arm/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/hexagon.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/mips/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/mips/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/powerpc.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/x86/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/x86/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/aarch64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/aarch64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/mips64.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/powerpc64.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/s390x.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/x86_64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/l4re.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/other.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/mod.rs",
    "vendor/libc-0.2.98/src/unix/mod.rs",
    "vendor/libc-0.2.98/src/unix/newlib/aarch64/mod.rs",
    "vendor/libc-0.2.98/src/unix/newlib/align.rs",
    "vendor/libc-0.2.98/src/unix/newlib/arm/mod.rs",
    "vendor/libc-0.2.98/src/unix/newlib/mod.rs",
    "vendor/libc-0.2.98/src/unix/newlib/no_align.rs",
    "vendor/libc-0.2.98/src/unix/newlib/powerpc/mod.rs",
    "vendor/libc-0.2.98/src/unix/newlib/xtensa/mod.rs",
    "vendor/libc-0.2.98/src/unix/no_align.rs",
    "vendor/libc-0.2.98/src/unix/redox/mod.rs",
    "vendor/libc-0.2.98/src/unix/solarish/compat.rs",
    "vendor/libc-0.2.98/src/unix/solarish/illumos.rs",
    "vendor/libc-0.2.98/src/unix/solarish/mod.rs",
    "vendor/libc-0.2.98/src/unix/solarish/solaris.rs",
    "vendor/libc-0.2.98/src/vxworks/aarch64.rs",
    "vendor/libc-0.2.98/src/vxworks/arm.rs",
    "vendor/libc-0.2.98/src/vxworks/mod.rs",
    "vendor/libc-0.2.98/src/vxworks/powerpc.rs",
    "vendor/libc-0.2.98/src/vxworks/powerpc64.rs",
    "vendor/libc-0.2.98/src/vxworks/x86.rs",
    "vendor/libc-0.2.98/src/vxworks/x86_64.rs",
    "vendor/libc-0.2.98/src/wasi.rs",
    "vendor/libc-0.2.98/src/windows/gnu/align.rs",
    "vendor/libc-0.2.98/src/windows/gnu/mod.rs",
    "vendor/libc-0.2.98/src/windows/mod.rs",
    "vendor/libc-0.2.98/src/windows/msvc.rs",
    ],
    deps = [],
    crate = "libc",
    crate_root = "vendor/libc-0.2.98/src/lib.rs",
    edition = "2015",
    features = ["align",
    "default",
    "extra_traits",
    "std",
    "use_std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :libc-0.2.98-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "libc-0.2.98-build-script-build",
    srcs = ["vendor/libc-0.2.98/build.rs",
    "vendor/libc-0.2.98/src/fixed_width_ints.rs",
    "vendor/libc-0.2.98/src/fuchsia/aarch64.rs",
    "vendor/libc-0.2.98/src/fuchsia/align.rs",
    "vendor/libc-0.2.98/src/fuchsia/mod.rs",
    "vendor/libc-0.2.98/src/fuchsia/no_align.rs",
    "vendor/libc-0.2.98/src/fuchsia/x86_64.rs",
    "vendor/libc-0.2.98/src/hermit/aarch64.rs",
    "vendor/libc-0.2.98/src/hermit/mod.rs",
    "vendor/libc-0.2.98/src/hermit/x86_64.rs",
    "vendor/libc-0.2.98/src/lib.rs",
    "vendor/libc-0.2.98/src/macros.rs",
    "vendor/libc-0.2.98/src/psp.rs",
    "vendor/libc-0.2.98/src/sgx.rs",
    "vendor/libc-0.2.98/src/switch.rs",
    "vendor/libc-0.2.98/src/unix/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b32/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b32/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/aarch64/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/aarch64/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/x86_64/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/b64/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/apple/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/dragonfly/errno.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/dragonfly/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/aarch64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/arm.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd11/b64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd11/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd12/b64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd12/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd13/b64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd13/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/powerpc.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/powerpc64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86_64/align.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/freebsdlike/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/aarch64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/arm.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/powerpc.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/sparc64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/x86.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/x86_64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/aarch64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/mod.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/sparc64.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/x86.rs",
    "vendor/libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/x86_64.rs",
    "vendor/libc-0.2.98/src/unix/haiku/b32.rs",
    "vendor/libc-0.2.98/src/unix/haiku/b64.rs",
    "vendor/libc-0.2.98/src/unix/haiku/mod.rs",
    "vendor/libc-0.2.98/src/unix/haiku/native.rs",
    "vendor/libc-0.2.98/src/unix/hermit/aarch64.rs",
    "vendor/libc-0.2.98/src/unix/hermit/mod.rs",
    "vendor/libc-0.2.98/src/unix/hermit/x86_64.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b32/arm.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b32/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b32/x86/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b32/x86/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b64/aarch64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b64/aarch64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b64/x86_64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/b64/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/android/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/emscripten/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/emscripten/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/emscripten/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/arch/generic/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/arch/mips/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/arch/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/arch/powerpc/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/arch/sparc/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/arm/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/arm/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mips/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mips/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/powerpc.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/riscv32/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/sparc/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/sparc/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/x86/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b32/x86/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/ilp32.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/lp64.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mips64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mips64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/powerpc64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/powerpc64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/riscv64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/s390x.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/sparc64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/sparc64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/x32.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/gnu/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/arm/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/arm/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/hexagon.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/mips/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/mips/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/powerpc.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/x86/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b32/x86/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/aarch64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/aarch64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/mips64.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/powerpc64.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/s390x.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/x86_64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/b64/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/musl/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/no_align.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/l4re.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/mod.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/other.rs",
    "vendor/libc-0.2.98/src/unix/linux_like/mod.rs",
    "vendor/libc-0.2.98/src/unix/mod.rs",
    "vendor/libc-0.2.98/src/unix/newlib/aarch64/mod.rs",
    "vendor/libc-0.2.98/src/unix/newlib/align.rs",
    "vendor/libc-0.2.98/src/unix/newlib/arm/mod.rs",
    "vendor/libc-0.2.98/src/unix/newlib/mod.rs",
    "vendor/libc-0.2.98/src/unix/newlib/no_align.rs",
    "vendor/libc-0.2.98/src/unix/newlib/powerpc/mod.rs",
    "vendor/libc-0.2.98/src/unix/newlib/xtensa/mod.rs",
    "vendor/libc-0.2.98/src/unix/no_align.rs",
    "vendor/libc-0.2.98/src/unix/redox/mod.rs",
    "vendor/libc-0.2.98/src/unix/solarish/compat.rs",
    "vendor/libc-0.2.98/src/unix/solarish/illumos.rs",
    "vendor/libc-0.2.98/src/unix/solarish/mod.rs",
    "vendor/libc-0.2.98/src/unix/solarish/solaris.rs",
    "vendor/libc-0.2.98/src/vxworks/aarch64.rs",
    "vendor/libc-0.2.98/src/vxworks/arm.rs",
    "vendor/libc-0.2.98/src/vxworks/mod.rs",
    "vendor/libc-0.2.98/src/vxworks/powerpc.rs",
    "vendor/libc-0.2.98/src/vxworks/powerpc64.rs",
    "vendor/libc-0.2.98/src/vxworks/x86.rs",
    "vendor/libc-0.2.98/src/vxworks/x86_64.rs",
    "vendor/libc-0.2.98/src/wasi.rs",
    "vendor/libc-0.2.98/src/windows/gnu/align.rs",
    "vendor/libc-0.2.98/src/windows/gnu/mod.rs",
    "vendor/libc-0.2.98/src/windows/mod.rs",
    "vendor/libc-0.2.98/src/windows/msvc.rs",
    "vendor/libc-0.2.98/tests/const_fn.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/libc-0.2.98/build.rs",
    edition = "2015",
    features = ["align",
    "default",
    "extra_traits",
    "std",
    "use_std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "libm",
    srcs = ["vendor/libm-0.2.1/src/lib.rs",
    "vendor/libm-0.2.1/src/math/acos.rs",
    "vendor/libm-0.2.1/src/math/acosf.rs",
    "vendor/libm-0.2.1/src/math/acosh.rs",
    "vendor/libm-0.2.1/src/math/acoshf.rs",
    "vendor/libm-0.2.1/src/math/asin.rs",
    "vendor/libm-0.2.1/src/math/asinf.rs",
    "vendor/libm-0.2.1/src/math/asinh.rs",
    "vendor/libm-0.2.1/src/math/asinhf.rs",
    "vendor/libm-0.2.1/src/math/atan.rs",
    "vendor/libm-0.2.1/src/math/atan2.rs",
    "vendor/libm-0.2.1/src/math/atan2f.rs",
    "vendor/libm-0.2.1/src/math/atanf.rs",
    "vendor/libm-0.2.1/src/math/atanh.rs",
    "vendor/libm-0.2.1/src/math/atanhf.rs",
    "vendor/libm-0.2.1/src/math/cbrt.rs",
    "vendor/libm-0.2.1/src/math/cbrtf.rs",
    "vendor/libm-0.2.1/src/math/ceil.rs",
    "vendor/libm-0.2.1/src/math/ceilf.rs",
    "vendor/libm-0.2.1/src/math/copysign.rs",
    "vendor/libm-0.2.1/src/math/copysignf.rs",
    "vendor/libm-0.2.1/src/math/cos.rs",
    "vendor/libm-0.2.1/src/math/cosf.rs",
    "vendor/libm-0.2.1/src/math/cosh.rs",
    "vendor/libm-0.2.1/src/math/coshf.rs",
    "vendor/libm-0.2.1/src/math/erf.rs",
    "vendor/libm-0.2.1/src/math/erff.rs",
    "vendor/libm-0.2.1/src/math/exp.rs",
    "vendor/libm-0.2.1/src/math/exp10.rs",
    "vendor/libm-0.2.1/src/math/exp10f.rs",
    "vendor/libm-0.2.1/src/math/exp2.rs",
    "vendor/libm-0.2.1/src/math/exp2f.rs",
    "vendor/libm-0.2.1/src/math/expf.rs",
    "vendor/libm-0.2.1/src/math/expm1.rs",
    "vendor/libm-0.2.1/src/math/expm1f.rs",
    "vendor/libm-0.2.1/src/math/expo2.rs",
    "vendor/libm-0.2.1/src/math/fabs.rs",
    "vendor/libm-0.2.1/src/math/fabsf.rs",
    "vendor/libm-0.2.1/src/math/fdim.rs",
    "vendor/libm-0.2.1/src/math/fdimf.rs",
    "vendor/libm-0.2.1/src/math/fenv.rs",
    "vendor/libm-0.2.1/src/math/floor.rs",
    "vendor/libm-0.2.1/src/math/floorf.rs",
    "vendor/libm-0.2.1/src/math/fma.rs",
    "vendor/libm-0.2.1/src/math/fmaf.rs",
    "vendor/libm-0.2.1/src/math/fmax.rs",
    "vendor/libm-0.2.1/src/math/fmaxf.rs",
    "vendor/libm-0.2.1/src/math/fmin.rs",
    "vendor/libm-0.2.1/src/math/fminf.rs",
    "vendor/libm-0.2.1/src/math/fmod.rs",
    "vendor/libm-0.2.1/src/math/fmodf.rs",
    "vendor/libm-0.2.1/src/math/frexp.rs",
    "vendor/libm-0.2.1/src/math/frexpf.rs",
    "vendor/libm-0.2.1/src/math/hypot.rs",
    "vendor/libm-0.2.1/src/math/hypotf.rs",
    "vendor/libm-0.2.1/src/math/ilogb.rs",
    "vendor/libm-0.2.1/src/math/ilogbf.rs",
    "vendor/libm-0.2.1/src/math/j0.rs",
    "vendor/libm-0.2.1/src/math/j0f.rs",
    "vendor/libm-0.2.1/src/math/j1.rs",
    "vendor/libm-0.2.1/src/math/j1f.rs",
    "vendor/libm-0.2.1/src/math/jn.rs",
    "vendor/libm-0.2.1/src/math/jnf.rs",
    "vendor/libm-0.2.1/src/math/k_cos.rs",
    "vendor/libm-0.2.1/src/math/k_cosf.rs",
    "vendor/libm-0.2.1/src/math/k_expo2.rs",
    "vendor/libm-0.2.1/src/math/k_expo2f.rs",
    "vendor/libm-0.2.1/src/math/k_sin.rs",
    "vendor/libm-0.2.1/src/math/k_sinf.rs",
    "vendor/libm-0.2.1/src/math/k_tan.rs",
    "vendor/libm-0.2.1/src/math/k_tanf.rs",
    "vendor/libm-0.2.1/src/math/ldexp.rs",
    "vendor/libm-0.2.1/src/math/ldexpf.rs",
    "vendor/libm-0.2.1/src/math/lgamma.rs",
    "vendor/libm-0.2.1/src/math/lgamma_r.rs",
    "vendor/libm-0.2.1/src/math/lgammaf.rs",
    "vendor/libm-0.2.1/src/math/lgammaf_r.rs",
    "vendor/libm-0.2.1/src/math/log.rs",
    "vendor/libm-0.2.1/src/math/log10.rs",
    "vendor/libm-0.2.1/src/math/log10f.rs",
    "vendor/libm-0.2.1/src/math/log1p.rs",
    "vendor/libm-0.2.1/src/math/log1pf.rs",
    "vendor/libm-0.2.1/src/math/log2.rs",
    "vendor/libm-0.2.1/src/math/log2f.rs",
    "vendor/libm-0.2.1/src/math/logf.rs",
    "vendor/libm-0.2.1/src/math/mod.rs",
    "vendor/libm-0.2.1/src/math/modf.rs",
    "vendor/libm-0.2.1/src/math/modff.rs",
    "vendor/libm-0.2.1/src/math/nextafter.rs",
    "vendor/libm-0.2.1/src/math/nextafterf.rs",
    "vendor/libm-0.2.1/src/math/pow.rs",
    "vendor/libm-0.2.1/src/math/powf.rs",
    "vendor/libm-0.2.1/src/math/rem_pio2.rs",
    "vendor/libm-0.2.1/src/math/rem_pio2_large.rs",
    "vendor/libm-0.2.1/src/math/rem_pio2f.rs",
    "vendor/libm-0.2.1/src/math/remainder.rs",
    "vendor/libm-0.2.1/src/math/remainderf.rs",
    "vendor/libm-0.2.1/src/math/remquo.rs",
    "vendor/libm-0.2.1/src/math/remquof.rs",
    "vendor/libm-0.2.1/src/math/round.rs",
    "vendor/libm-0.2.1/src/math/roundf.rs",
    "vendor/libm-0.2.1/src/math/scalbn.rs",
    "vendor/libm-0.2.1/src/math/scalbnf.rs",
    "vendor/libm-0.2.1/src/math/sin.rs",
    "vendor/libm-0.2.1/src/math/sincos.rs",
    "vendor/libm-0.2.1/src/math/sincosf.rs",
    "vendor/libm-0.2.1/src/math/sinf.rs",
    "vendor/libm-0.2.1/src/math/sinh.rs",
    "vendor/libm-0.2.1/src/math/sinhf.rs",
    "vendor/libm-0.2.1/src/math/sqrt.rs",
    "vendor/libm-0.2.1/src/math/sqrtf.rs",
    "vendor/libm-0.2.1/src/math/tan.rs",
    "vendor/libm-0.2.1/src/math/tanf.rs",
    "vendor/libm-0.2.1/src/math/tanh.rs",
    "vendor/libm-0.2.1/src/math/tanhf.rs",
    "vendor/libm-0.2.1/src/math/tgamma.rs",
    "vendor/libm-0.2.1/src/math/tgammaf.rs",
    "vendor/libm-0.2.1/src/math/trunc.rs",
    "vendor/libm-0.2.1/src/math/truncf.rs",
    ],
    deps = [],
    crate = "libm",
    crate_root = "vendor/libm-0.2.1/src/lib.rs",
    edition = "2018",
    features = ["default",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "link-cplusplus-1.0.3",
    srcs = ["vendor/link-cplusplus-1.0.3/src/lib.rs",],
    deps = [],
    crate = "link_cplusplus",
    crate_root = "vendor/link-cplusplus-1.0.3/src/lib.rs",
    edition = "2018",
    features = ["default",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "linked-hash-map",
    srcs = ["vendor/linked-hash-map-0.5.3/src/heapsize.rs",
    "vendor/linked-hash-map-0.5.3/src/lib.rs",
    "vendor/linked-hash-map-0.5.3/src/serde.rs",
    ],
    deps = [],
    crate = "linked_hash_map",
    crate_root = "vendor/linked-hash-map-0.5.3/src/lib.rs",
    edition = "2015",
    features = ["serde",
    "serde_impl",
    "serde_test",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:serde",
    "//generated/third-party/rust:serde_test",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "lock_api-0.4.1",
    srcs = ["vendor/lock_api-0.4.1/src/lib.rs",
    "vendor/lock_api-0.4.1/src/mutex.rs",
    "vendor/lock_api-0.4.1/src/remutex.rs",
    "vendor/lock_api-0.4.1/src/rwlock.rs",
    ],
    deps = [],
    crate = "lock_api",
    crate_root = "vendor/lock_api-0.4.1/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:scopeguard",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "log",
    srcs = ["vendor/log-0.4.11/src/kv/error.rs",
    "vendor/log-0.4.11/src/kv/key.rs",
    "vendor/log-0.4.11/src/kv/mod.rs",
    "vendor/log-0.4.11/src/kv/source.rs",
    "vendor/log-0.4.11/src/kv/value/fill.rs",
    "vendor/log-0.4.11/src/kv/value/impls.rs",
    "vendor/log-0.4.11/src/kv/value/internal/cast.rs",
    "vendor/log-0.4.11/src/kv/value/internal/fmt.rs",
    "vendor/log-0.4.11/src/kv/value/internal/mod.rs",
    "vendor/log-0.4.11/src/kv/value/internal/sval.rs",
    "vendor/log-0.4.11/src/kv/value/mod.rs",
    "vendor/log-0.4.11/src/kv/value/test.rs",
    "vendor/log-0.4.11/src/lib.rs",
    "vendor/log-0.4.11/src/macros.rs",
    "vendor/log-0.4.11/src/serde.rs",
    ],
    deps = [],
    crate = "log",
    crate_root = "vendor/log-0.4.11/src/lib.rs",
    edition = "2015",
    features = ["kv_unstable",
    "serde",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if",
    "//generated/third-party/rust:serde",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :log-0.4.11-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "log-0.4.11-build-script-build",
    srcs = ["vendor/log-0.4.11/build.rs",
    "vendor/log-0.4.11/src/kv/error.rs",
    "vendor/log-0.4.11/src/kv/key.rs",
    "vendor/log-0.4.11/src/kv/mod.rs",
    "vendor/log-0.4.11/src/kv/source.rs",
    "vendor/log-0.4.11/src/kv/value/fill.rs",
    "vendor/log-0.4.11/src/kv/value/impls.rs",
    "vendor/log-0.4.11/src/kv/value/internal/cast.rs",
    "vendor/log-0.4.11/src/kv/value/internal/fmt.rs",
    "vendor/log-0.4.11/src/kv/value/internal/mod.rs",
    "vendor/log-0.4.11/src/kv/value/internal/sval.rs",
    "vendor/log-0.4.11/src/kv/value/mod.rs",
    "vendor/log-0.4.11/src/kv/value/test.rs",
    "vendor/log-0.4.11/src/lib.rs",
    "vendor/log-0.4.11/src/macros.rs",
    "vendor/log-0.4.11/src/serde.rs",
    "vendor/log-0.4.11/tests/filters.rs",
    "vendor/log-0.4.11/tests/macros.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/log-0.4.11/build.rs",
    edition = "2015",
    features = ["kv_unstable",
    "serde",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "logos",
    srcs = ["vendor/logos-0.11.4/src/internal.rs",
    "vendor/logos-0.11.4/src/lexer.rs",
    "vendor/logos-0.11.4/src/lib.rs",
    "vendor/logos-0.11.4/src/source.rs",
    ],
    deps = [],
    crate = "logos",
    crate_root = "vendor/logos-0.11.4/src/lib.rs",
    edition = "2018",
    features = ["default",
    "export_derive",
    "logos-derive",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:logos-derive-0.11.5",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "logos-derive-0.11.5",
    srcs = ["vendor/logos-derive-0.11.5/src/error.rs",
    "vendor/logos-derive-0.11.5/src/generator/context.rs",
    "vendor/logos-derive-0.11.5/src/generator/fork.rs",
    "vendor/logos-derive-0.11.5/src/generator/leaf.rs",
    "vendor/logos-derive-0.11.5/src/generator/mod.rs",
    "vendor/logos-derive-0.11.5/src/generator/rope.rs",
    "vendor/logos-derive-0.11.5/src/generator/tables.rs",
    "vendor/logos-derive-0.11.5/src/graph/fork.rs",
    "vendor/logos-derive-0.11.5/src/graph/impls.rs",
    "vendor/logos-derive-0.11.5/src/graph/meta.rs",
    "vendor/logos-derive-0.11.5/src/graph/mod.rs",
    "vendor/logos-derive-0.11.5/src/graph/range.rs",
    "vendor/logos-derive-0.11.5/src/graph/regex.rs",
    "vendor/logos-derive-0.11.5/src/graph/rope.rs",
    "vendor/logos-derive-0.11.5/src/leaf.rs",
    "vendor/logos-derive-0.11.5/src/lib.rs",
    "vendor/logos-derive-0.11.5/src/mir.rs",
    "vendor/logos-derive-0.11.5/src/parser/definition.rs",
    "vendor/logos-derive-0.11.5/src/parser/mod.rs",
    "vendor/logos-derive-0.11.5/src/parser/nested.rs",
    "vendor/logos-derive-0.11.5/src/parser/subpattern.rs",
    "vendor/logos-derive-0.11.5/src/parser/type_params.rs",
    "vendor/logos-derive-0.11.5/src/util.rs",
    ],
    deps = [],
    crate = "logos_derive",
    crate_root = "vendor/logos-derive-0.11.5/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:beef-0.4.4",
    "//generated/third-party/rust:fnv",
    "//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:regex-syntax-0.6.21",
    "//generated/third-party/rust:syn",
    "//generated/third-party/rust:utf8-ranges-1.0.4",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "--extern=proc_macro",
    ],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "lru-cache",
    srcs = ["vendor/lru-cache-0.1.2/src/heapsize.rs",
    "vendor/lru-cache-0.1.2/src/lib.rs",
    ],
    deps = [],
    crate = "lru_cache",
    crate_root = "vendor/lru-cache-0.1.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:linked-hash-map",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "maplit",
    srcs = ["vendor/maplit-1.0.2/src/lib.rs",],
    deps = [],
    crate = "maplit",
    crate_root = "vendor/maplit-1.0.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "match_cfg-0.1.0",
    srcs = ["vendor/match_cfg-0.1.0/src/lib.rs",],
    deps = [],
    crate = "match_cfg",
    crate_root = "vendor/match_cfg-0.1.0/src/lib.rs",
    edition = "2015",
    features = ["default",
    "use_core",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "matches-0.1.8",
    srcs = ["vendor/matches-0.1.8/lib.rs",
    "vendor/matches-0.1.8/tests/macro_use_one.rs",
    ],
    deps = [],
    crate = "matches",
    crate_root = "vendor/matches-0.1.8/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "maybe-uninit-2.0.0",
    srcs = ["vendor/maybe-uninit-2.0.0/src/lib.rs",
    "vendor/maybe-uninit-2.0.0/src/maybe_uninit.rs",
    ],
    deps = [],
    crate = "maybe_uninit",
    crate_root = "vendor/maybe-uninit-2.0.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :maybe-uninit-2.0.0-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "maybe-uninit-2.0.0-build-script-build",
    srcs = ["vendor/maybe-uninit-2.0.0/build.rs",
    "vendor/maybe-uninit-2.0.0/src/lib.rs",
    "vendor/maybe-uninit-2.0.0/src/maybe_uninit.rs",
    "vendor/maybe-uninit-2.0.0/tests/doesnt_drop.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/maybe-uninit-2.0.0/build.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "memchr-2.4.1",
    srcs = ["vendor/memchr-2.4.1/src/cow.rs",
    "vendor/memchr-2.4.1/src/lib.rs",
    "vendor/memchr-2.4.1/src/memchr/c.rs",
    "vendor/memchr-2.4.1/src/memchr/fallback.rs",
    "vendor/memchr-2.4.1/src/memchr/iter.rs",
    "vendor/memchr-2.4.1/src/memchr/mod.rs",
    "vendor/memchr-2.4.1/src/memchr/naive.rs",
    "vendor/memchr-2.4.1/src/memchr/x86/avx.rs",
    "vendor/memchr-2.4.1/src/memchr/x86/mod.rs",
    "vendor/memchr-2.4.1/src/memchr/x86/sse2.rs",
    "vendor/memchr-2.4.1/src/memmem/byte_frequencies.rs",
    "vendor/memchr-2.4.1/src/memmem/genericsimd.rs",
    "vendor/memchr-2.4.1/src/memmem/mod.rs",
    "vendor/memchr-2.4.1/src/memmem/prefilter/fallback.rs",
    "vendor/memchr-2.4.1/src/memmem/prefilter/genericsimd.rs",
    "vendor/memchr-2.4.1/src/memmem/prefilter/mod.rs",
    "vendor/memchr-2.4.1/src/memmem/prefilter/x86/avx.rs",
    "vendor/memchr-2.4.1/src/memmem/prefilter/x86/mod.rs",
    "vendor/memchr-2.4.1/src/memmem/prefilter/x86/sse.rs",
    "vendor/memchr-2.4.1/src/memmem/rabinkarp.rs",
    "vendor/memchr-2.4.1/src/memmem/rarebytes.rs",
    "vendor/memchr-2.4.1/src/memmem/twoway.rs",
    "vendor/memchr-2.4.1/src/memmem/util.rs",
    "vendor/memchr-2.4.1/src/memmem/vector.rs",
    "vendor/memchr-2.4.1/src/memmem/x86/avx.rs",
    "vendor/memchr-2.4.1/src/memmem/x86/mod.rs",
    "vendor/memchr-2.4.1/src/memmem/x86/sse.rs",
    "vendor/memchr-2.4.1/src/tests/memchr/iter.rs",
    "vendor/memchr-2.4.1/src/tests/memchr/memchr.rs",
    "vendor/memchr-2.4.1/src/tests/memchr/mod.rs",
    "vendor/memchr-2.4.1/src/tests/memchr/simple.rs",
    "vendor/memchr-2.4.1/src/tests/memchr/testdata.rs",
    "vendor/memchr-2.4.1/src/tests/mod.rs",
    ],
    deps = [],
    crate = "memchr",
    crate_root = "vendor/memchr-2.4.1/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    "use_std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :memchr-2.4.1-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "memchr-2.4.1-build-script-build",
    srcs = ["vendor/memchr-2.4.1/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/memchr-2.4.1/build.rs",
    edition = "2018",
    features = ["default",
    "std",
    "use_std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "memoffset",
    srcs = ["vendor/memoffset-0.6.4/src/lib.rs",
    "vendor/memoffset-0.6.4/src/offset_of.rs",
    "vendor/memoffset-0.6.4/src/raw_field.rs",
    "vendor/memoffset-0.6.4/src/span_of.rs",
    ],
    deps = [],
    crate = "memoffset",
    crate_root = "vendor/memoffset-0.6.4/src/lib.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :memoffset-0.6.4-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "memoffset-0.6.4-build-script-build",
    srcs = ["vendor/memoffset-0.6.4/build.rs",
    "vendor/memoffset-0.6.4/src/lib.rs",
    "vendor/memoffset-0.6.4/src/offset_of.rs",
    "vendor/memoffset-0.6.4/src/raw_field.rs",
    "vendor/memoffset-0.6.4/src/span_of.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/memoffset-0.6.4/build.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:autocfg-1.0.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "mime",
    srcs = ["vendor/mime-0.3.16/src/lib.rs",
    "vendor/mime-0.3.16/src/parse.rs",
    ],
    deps = [],
    crate = "mime",
    crate_root = "vendor/mime-0.3.16/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "mime_guess-2.0.3",
    srcs = ["vendor/mime_guess-2.0.3/src/impl_bin_search.rs",
    "vendor/mime_guess-2.0.3/src/impl_phf.rs",
    "vendor/mime_guess-2.0.3/src/lib.rs",
    "vendor/mime_guess-2.0.3/src/mime_types.rs",
    ],
    deps = [],
    crate = "mime_guess",
    crate_root = "vendor/mime_guess-2.0.3/src/lib.rs",
    edition = "2015",
    features = ["default",
    "rev-mappings",
    ],
    mapped_srcs = {
        "//third-party/rust:mime_guess-2.0.3-build-script-build-srcs=mime_types_generated.rs": "vendor/mime_guess-2.0.3/src/mime_types_generated.rs",
    },
    deps = ["//generated/third-party/rust:mime",
    "//generated/third-party/rust:unicase",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "OUT_DIR": ".",
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "mime_guess-2.0.3-build-script-build",
    srcs = ["vendor/mime_guess-2.0.3/benches/benchmark.rs",
    "vendor/mime_guess-2.0.3/build.rs",
    "vendor/mime_guess-2.0.3/examples/rev_map.rs",
    "vendor/mime_guess-2.0.3/src/impl_bin_search.rs",
    "vendor/mime_guess-2.0.3/src/impl_phf.rs",
    "vendor/mime_guess-2.0.3/src/lib.rs",
    "vendor/mime_guess-2.0.3/src/mime_types.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/mime_guess-2.0.3/build.rs",
    edition = "2015",
    features = ["default",
    "rev-mappings",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:unicase",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "OUT_DIR": ".",
    },
    unittests = False,
)
third_party_rust_library(
    name = "miniz_oxide-0.4.2",
    srcs = ["vendor/miniz_oxide-0.4.2/src/deflate/buffer.rs",
    "vendor/miniz_oxide-0.4.2/src/deflate/core.rs",
    "vendor/miniz_oxide-0.4.2/src/deflate/mod.rs",
    "vendor/miniz_oxide-0.4.2/src/deflate/stream.rs",
    "vendor/miniz_oxide-0.4.2/src/inflate/core.rs",
    "vendor/miniz_oxide-0.4.2/src/inflate/mod.rs",
    "vendor/miniz_oxide-0.4.2/src/inflate/output_buffer.rs",
    "vendor/miniz_oxide-0.4.2/src/inflate/stream.rs",
    "vendor/miniz_oxide-0.4.2/src/lib.rs",
    "vendor/miniz_oxide-0.4.2/src/shared.rs",
    ],
    deps = [],
    crate = "miniz_oxide",
    crate_root = "vendor/miniz_oxide-0.4.2/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:adler-0.2.3",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "mio",
    srcs = ["vendor/mio-0.7.7/src/event/event.rs",
    "vendor/mio-0.7.7/src/event/events.rs",
    "vendor/mio-0.7.7/src/event/mod.rs",
    "vendor/mio-0.7.7/src/event/source.rs",
    "vendor/mio-0.7.7/src/interest.rs",
    "vendor/mio-0.7.7/src/io_source.rs",
    "vendor/mio-0.7.7/src/lib.rs",
    "vendor/mio-0.7.7/src/macros.rs",
    "vendor/mio-0.7.7/src/net/mod.rs",
    "vendor/mio-0.7.7/src/net/tcp/listener.rs",
    "vendor/mio-0.7.7/src/net/tcp/mod.rs",
    "vendor/mio-0.7.7/src/net/tcp/socket.rs",
    "vendor/mio-0.7.7/src/net/tcp/stream.rs",
    "vendor/mio-0.7.7/src/net/udp.rs",
    "vendor/mio-0.7.7/src/net/uds/datagram.rs",
    "vendor/mio-0.7.7/src/net/uds/listener.rs",
    "vendor/mio-0.7.7/src/net/uds/mod.rs",
    "vendor/mio-0.7.7/src/net/uds/stream.rs",
    "vendor/mio-0.7.7/src/poll.rs",
    "vendor/mio-0.7.7/src/sys/mod.rs",
    "vendor/mio-0.7.7/src/sys/shell/mod.rs",
    "vendor/mio-0.7.7/src/sys/shell/selector.rs",
    "vendor/mio-0.7.7/src/sys/shell/tcp.rs",
    "vendor/mio-0.7.7/src/sys/shell/udp.rs",
    "vendor/mio-0.7.7/src/sys/shell/uds.rs",
    "vendor/mio-0.7.7/src/sys/shell/waker.rs",
    "vendor/mio-0.7.7/src/sys/unix/mod.rs",
    "vendor/mio-0.7.7/src/sys/unix/net.rs",
    "vendor/mio-0.7.7/src/sys/unix/pipe.rs",
    "vendor/mio-0.7.7/src/sys/unix/selector/epoll.rs",
    "vendor/mio-0.7.7/src/sys/unix/selector/kqueue.rs",
    "vendor/mio-0.7.7/src/sys/unix/selector/mod.rs",
    "vendor/mio-0.7.7/src/sys/unix/sourcefd.rs",
    "vendor/mio-0.7.7/src/sys/unix/tcp.rs",
    "vendor/mio-0.7.7/src/sys/unix/udp.rs",
    "vendor/mio-0.7.7/src/sys/unix/uds/datagram.rs",
    "vendor/mio-0.7.7/src/sys/unix/uds/listener.rs",
    "vendor/mio-0.7.7/src/sys/unix/uds/mod.rs",
    "vendor/mio-0.7.7/src/sys/unix/uds/socketaddr.rs",
    "vendor/mio-0.7.7/src/sys/unix/uds/stream.rs",
    "vendor/mio-0.7.7/src/sys/unix/waker.rs",
    "vendor/mio-0.7.7/src/sys/windows/afd.rs",
    "vendor/mio-0.7.7/src/sys/windows/event.rs",
    "vendor/mio-0.7.7/src/sys/windows/io_status_block.rs",
    "vendor/mio-0.7.7/src/sys/windows/mod.rs",
    "vendor/mio-0.7.7/src/sys/windows/named_pipe.rs",
    "vendor/mio-0.7.7/src/sys/windows/net.rs",
    "vendor/mio-0.7.7/src/sys/windows/overlapped.rs",
    "vendor/mio-0.7.7/src/sys/windows/selector.rs",
    "vendor/mio-0.7.7/src/sys/windows/tcp.rs",
    "vendor/mio-0.7.7/src/sys/windows/udp.rs",
    "vendor/mio-0.7.7/src/sys/windows/waker.rs",
    "vendor/mio-0.7.7/src/token.rs",
    "vendor/mio-0.7.7/src/waker.rs",
    ],
    deps = [],
    crate = "mio",
    crate_root = "vendor/mio-0.7.7/src/lib.rs",
    edition = "2018",
    features = ["default",
    "net",
    "os-ext",
    "os-poll",
    "os-util",
    "tcp",
    "udp",
    "uds",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:log",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "mio-06",
    srcs = ["vendor/mio-0.6.23/src/channel.rs",
    "vendor/mio-0.6.23/src/deprecated/event_loop.rs",
    "vendor/mio-0.6.23/src/deprecated/handler.rs",
    "vendor/mio-0.6.23/src/deprecated/io.rs",
    "vendor/mio-0.6.23/src/deprecated/mod.rs",
    "vendor/mio-0.6.23/src/deprecated/notify.rs",
    "vendor/mio-0.6.23/src/deprecated/unix.rs",
    "vendor/mio-0.6.23/src/event_imp.rs",
    "vendor/mio-0.6.23/src/io.rs",
    "vendor/mio-0.6.23/src/lazycell.rs",
    "vendor/mio-0.6.23/src/lib.rs",
    "vendor/mio-0.6.23/src/net/mod.rs",
    "vendor/mio-0.6.23/src/net/tcp.rs",
    "vendor/mio-0.6.23/src/net/udp.rs",
    "vendor/mio-0.6.23/src/poll.rs",
    "vendor/mio-0.6.23/src/sys/fuchsia/awakener.rs",
    "vendor/mio-0.6.23/src/sys/fuchsia/eventedfd.rs",
    "vendor/mio-0.6.23/src/sys/fuchsia/handles.rs",
    "vendor/mio-0.6.23/src/sys/fuchsia/mod.rs",
    "vendor/mio-0.6.23/src/sys/fuchsia/net.rs",
    "vendor/mio-0.6.23/src/sys/fuchsia/ready.rs",
    "vendor/mio-0.6.23/src/sys/fuchsia/selector.rs",
    "vendor/mio-0.6.23/src/sys/mod.rs",
    "vendor/mio-0.6.23/src/sys/unix/awakener.rs",
    "vendor/mio-0.6.23/src/sys/unix/dlsym.rs",
    "vendor/mio-0.6.23/src/sys/unix/epoll.rs",
    "vendor/mio-0.6.23/src/sys/unix/eventedfd.rs",
    "vendor/mio-0.6.23/src/sys/unix/io.rs",
    "vendor/mio-0.6.23/src/sys/unix/kqueue.rs",
    "vendor/mio-0.6.23/src/sys/unix/mod.rs",
    "vendor/mio-0.6.23/src/sys/unix/ready.rs",
    "vendor/mio-0.6.23/src/sys/unix/tcp.rs",
    "vendor/mio-0.6.23/src/sys/unix/udp.rs",
    "vendor/mio-0.6.23/src/sys/unix/uds.rs",
    "vendor/mio-0.6.23/src/sys/unix/uio.rs",
    "vendor/mio-0.6.23/src/sys/windows/awakener.rs",
    "vendor/mio-0.6.23/src/sys/windows/buffer_pool.rs",
    "vendor/mio-0.6.23/src/sys/windows/from_raw_arc.rs",
    "vendor/mio-0.6.23/src/sys/windows/mod.rs",
    "vendor/mio-0.6.23/src/sys/windows/selector.rs",
    "vendor/mio-0.6.23/src/sys/windows/tcp.rs",
    "vendor/mio-0.6.23/src/sys/windows/udp.rs",
    "vendor/mio-0.6.23/src/timer.rs",
    "vendor/mio-0.6.23/src/token.rs",
    "vendor/mio-0.6.23/src/udp.rs",
    ],
    deps = [],
    crate = "mio",
    crate_root = "vendor/mio-0.6.23/src/lib.rs",
    edition = "2015",
    features = ["default",
    "with-deprecated",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if",
    "//generated/third-party/rust:iovec-0.1.4",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:net2-0.2.37",
    "//generated/third-party/rust:slab-0.4.2",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "mio-uds-0.6.8",
    srcs = ["vendor/mio-uds-0.6.8/src/datagram.rs",
    "vendor/mio-uds-0.6.8/src/lib.rs",
    "vendor/mio-uds-0.6.8/src/listener.rs",
    "vendor/mio-uds-0.6.8/src/socket.rs",
    "vendor/mio-uds-0.6.8/src/stream.rs",
    ],
    deps = [],
    crate = "mio_uds",
    crate_root = "vendor/mio-uds-0.6.8/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:iovec-0.1.4",
    "//generated/third-party/rust:libc",
    "//generated/third-party/rust:mio-06",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "multipart-0.17.0",
    srcs = ["vendor/multipart-0.17.0/src/bin/form_test.rs",
    "vendor/multipart-0.17.0/src/bin/read_file.rs",
    "vendor/multipart-0.17.0/src/client/hyper.rs",
    "vendor/multipart-0.17.0/src/client/lazy.rs",
    "vendor/multipart-0.17.0/src/client/mod.rs",
    "vendor/multipart-0.17.0/src/client/sized.rs",
    "vendor/multipart-0.17.0/src/lib.rs",
    "vendor/multipart-0.17.0/src/local_test.rs",
    "vendor/multipart-0.17.0/src/mock.rs",
    "vendor/multipart-0.17.0/src/server/boundary.rs",
    "vendor/multipart-0.17.0/src/server/field.rs",
    "vendor/multipart-0.17.0/src/server/hyper.rs",
    "vendor/multipart-0.17.0/src/server/iron.rs",
    "vendor/multipart-0.17.0/src/server/mod.rs",
    "vendor/multipart-0.17.0/src/server/nickel.rs",
    "vendor/multipart-0.17.0/src/server/save.rs",
    "vendor/multipart-0.17.0/src/server/tiny_http.rs",
    ],
    deps = [],
    crate = "multipart",
    crate_root = "vendor/multipart-0.17.0/src/lib.rs",
    edition = "2015",
    features = ["buf_redux",
    "httparse",
    "quick-error",
    "safemem",
    "server",
    "twoway",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:buf_redux-0.8.4",
    "//generated/third-party/rust:httparse-1.4.1",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:mime",
    "//generated/third-party/rust:mime_guess-2.0.3",
    "//generated/third-party/rust:quick-error-1.2.3",
    "//generated/third-party/rust:rand-0.6.5",
    "//generated/third-party/rust:safemem-0.3.3",
    "//generated/third-party/rust:tempfile",
    "//generated/third-party/rust:twoway-0.1.8",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "net2-0.2.37",
    srcs = ["vendor/net2-0.2.37/src/ext.rs",
    "vendor/net2-0.2.37/src/lib.rs",
    "vendor/net2-0.2.37/src/socket.rs",
    "vendor/net2-0.2.37/src/sys/redox/impls.rs",
    "vendor/net2-0.2.37/src/sys/redox/mod.rs",
    "vendor/net2-0.2.37/src/sys/unix/impls.rs",
    "vendor/net2-0.2.37/src/sys/unix/mod.rs",
    "vendor/net2-0.2.37/src/sys/wasi/impls.rs",
    "vendor/net2-0.2.37/src/sys/wasi/mod.rs",
    "vendor/net2-0.2.37/src/sys/windows/impls.rs",
    "vendor/net2-0.2.37/src/sys/windows/mod.rs",
    "vendor/net2-0.2.37/src/tcp.rs",
    "vendor/net2-0.2.37/src/udp.rs",
    "vendor/net2-0.2.37/src/unix.rs",
    "vendor/net2-0.2.37/src/utils.rs",
    ],
    deps = [],
    crate = "net2",
    crate_root = "vendor/net2-0.2.37/src/lib.rs",
    edition = "2015",
    features = ["default",
    "duration",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "new_debug_unreachable-1.0.4",
    srcs = ["vendor/new_debug_unreachable-1.0.4/src/lib.rs",],
    deps = [],
    crate = "debug_unreachable",
    crate_root = "vendor/new_debug_unreachable-1.0.4/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "nix",
    srcs = ["vendor/nix-0.20.0/src/dir.rs",
    "vendor/nix-0.20.0/src/env.rs",
    "vendor/nix-0.20.0/src/errno.rs",
    "vendor/nix-0.20.0/src/fcntl.rs",
    "vendor/nix-0.20.0/src/features.rs",
    "vendor/nix-0.20.0/src/ifaddrs.rs",
    "vendor/nix-0.20.0/src/kmod.rs",
    "vendor/nix-0.20.0/src/lib.rs",
    "vendor/nix-0.20.0/src/macros.rs",
    "vendor/nix-0.20.0/src/mount.rs",
    "vendor/nix-0.20.0/src/mqueue.rs",
    "vendor/nix-0.20.0/src/net/if_.rs",
    "vendor/nix-0.20.0/src/net/mod.rs",
    "vendor/nix-0.20.0/src/poll.rs",
    "vendor/nix-0.20.0/src/pty.rs",
    "vendor/nix-0.20.0/src/sched.rs",
    "vendor/nix-0.20.0/src/sys/aio.rs",
    "vendor/nix-0.20.0/src/sys/epoll.rs",
    "vendor/nix-0.20.0/src/sys/event.rs",
    "vendor/nix-0.20.0/src/sys/eventfd.rs",
    "vendor/nix-0.20.0/src/sys/inotify.rs",
    "vendor/nix-0.20.0/src/sys/ioctl/bsd.rs",
    "vendor/nix-0.20.0/src/sys/ioctl/linux.rs",
    "vendor/nix-0.20.0/src/sys/ioctl/mod.rs",
    "vendor/nix-0.20.0/src/sys/memfd.rs",
    "vendor/nix-0.20.0/src/sys/mman.rs",
    "vendor/nix-0.20.0/src/sys/mod.rs",
    "vendor/nix-0.20.0/src/sys/personality.rs",
    "vendor/nix-0.20.0/src/sys/pthread.rs",
    "vendor/nix-0.20.0/src/sys/ptrace/bsd.rs",
    "vendor/nix-0.20.0/src/sys/ptrace/linux.rs",
    "vendor/nix-0.20.0/src/sys/ptrace/mod.rs",
    "vendor/nix-0.20.0/src/sys/quota.rs",
    "vendor/nix-0.20.0/src/sys/reboot.rs",
    "vendor/nix-0.20.0/src/sys/select.rs",
    "vendor/nix-0.20.0/src/sys/sendfile.rs",
    "vendor/nix-0.20.0/src/sys/signal.rs",
    "vendor/nix-0.20.0/src/sys/signalfd.rs",
    "vendor/nix-0.20.0/src/sys/socket/addr.rs",
    "vendor/nix-0.20.0/src/sys/socket/mod.rs",
    "vendor/nix-0.20.0/src/sys/socket/sockopt.rs",
    "vendor/nix-0.20.0/src/sys/stat.rs",
    "vendor/nix-0.20.0/src/sys/statfs.rs",
    "vendor/nix-0.20.0/src/sys/statvfs.rs",
    "vendor/nix-0.20.0/src/sys/sysinfo.rs",
    "vendor/nix-0.20.0/src/sys/termios.rs",
    "vendor/nix-0.20.0/src/sys/time.rs",
    "vendor/nix-0.20.0/src/sys/timerfd.rs",
    "vendor/nix-0.20.0/src/sys/uio.rs",
    "vendor/nix-0.20.0/src/sys/utsname.rs",
    "vendor/nix-0.20.0/src/sys/wait.rs",
    "vendor/nix-0.20.0/src/time.rs",
    "vendor/nix-0.20.0/src/ucontext.rs",
    "vendor/nix-0.20.0/src/unistd.rs",
    ],
    deps = [],
    crate = "nix",
    crate_root = "vendor/nix-0.20.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bitflags",
    "//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "nix-0.19.1",
    srcs = ["vendor/nix-0.19.1/src/dir.rs",
    "vendor/nix-0.19.1/src/env.rs",
    "vendor/nix-0.19.1/src/errno.rs",
    "vendor/nix-0.19.1/src/fcntl.rs",
    "vendor/nix-0.19.1/src/features.rs",
    "vendor/nix-0.19.1/src/ifaddrs.rs",
    "vendor/nix-0.19.1/src/kmod.rs",
    "vendor/nix-0.19.1/src/lib.rs",
    "vendor/nix-0.19.1/src/macros.rs",
    "vendor/nix-0.19.1/src/mount.rs",
    "vendor/nix-0.19.1/src/mqueue.rs",
    "vendor/nix-0.19.1/src/net/if_.rs",
    "vendor/nix-0.19.1/src/net/mod.rs",
    "vendor/nix-0.19.1/src/poll.rs",
    "vendor/nix-0.19.1/src/pty.rs",
    "vendor/nix-0.19.1/src/sched.rs",
    "vendor/nix-0.19.1/src/sys/aio.rs",
    "vendor/nix-0.19.1/src/sys/epoll.rs",
    "vendor/nix-0.19.1/src/sys/event.rs",
    "vendor/nix-0.19.1/src/sys/eventfd.rs",
    "vendor/nix-0.19.1/src/sys/inotify.rs",
    "vendor/nix-0.19.1/src/sys/ioctl/bsd.rs",
    "vendor/nix-0.19.1/src/sys/ioctl/linux.rs",
    "vendor/nix-0.19.1/src/sys/ioctl/mod.rs",
    "vendor/nix-0.19.1/src/sys/memfd.rs",
    "vendor/nix-0.19.1/src/sys/mman.rs",
    "vendor/nix-0.19.1/src/sys/mod.rs",
    "vendor/nix-0.19.1/src/sys/pthread.rs",
    "vendor/nix-0.19.1/src/sys/ptrace/bsd.rs",
    "vendor/nix-0.19.1/src/sys/ptrace/linux.rs",
    "vendor/nix-0.19.1/src/sys/ptrace/mod.rs",
    "vendor/nix-0.19.1/src/sys/quota.rs",
    "vendor/nix-0.19.1/src/sys/reboot.rs",
    "vendor/nix-0.19.1/src/sys/select.rs",
    "vendor/nix-0.19.1/src/sys/sendfile.rs",
    "vendor/nix-0.19.1/src/sys/signal.rs",
    "vendor/nix-0.19.1/src/sys/signalfd.rs",
    "vendor/nix-0.19.1/src/sys/socket/addr.rs",
    "vendor/nix-0.19.1/src/sys/socket/mod.rs",
    "vendor/nix-0.19.1/src/sys/socket/sockopt.rs",
    "vendor/nix-0.19.1/src/sys/stat.rs",
    "vendor/nix-0.19.1/src/sys/statfs.rs",
    "vendor/nix-0.19.1/src/sys/statvfs.rs",
    "vendor/nix-0.19.1/src/sys/sysinfo.rs",
    "vendor/nix-0.19.1/src/sys/termios.rs",
    "vendor/nix-0.19.1/src/sys/time.rs",
    "vendor/nix-0.19.1/src/sys/timerfd.rs",
    "vendor/nix-0.19.1/src/sys/uio.rs",
    "vendor/nix-0.19.1/src/sys/utsname.rs",
    "vendor/nix-0.19.1/src/sys/wait.rs",
    "vendor/nix-0.19.1/src/time.rs",
    "vendor/nix-0.19.1/src/ucontext.rs",
    "vendor/nix-0.19.1/src/unistd.rs",
    ],
    deps = [],
    crate = "nix",
    crate_root = "vendor/nix-0.19.1/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bitflags",
    "//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "num-derive",
    srcs = ["vendor/num-derive-0.3.2/src/lib.rs",
    "vendor/num-derive-0.3.2/src/test.rs",
    ],
    deps = [],
    crate = "num_derive",
    crate_root = "vendor/num-derive-0.3.2/src/lib.rs",
    edition = "2018",
    features = ["full-syntax",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "num-integer-0.1.44",
    srcs = ["vendor/num-integer-0.1.44/src/average.rs",
    "vendor/num-integer-0.1.44/src/lib.rs",
    "vendor/num-integer-0.1.44/src/roots.rs",
    ],
    deps = [],
    crate = "num_integer",
    crate_root = "vendor/num-integer-0.1.44/src/lib.rs",
    edition = "2015",
    features = ["default",
    "i128",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:num-traits",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :num-integer-0.1.44-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "num-integer-0.1.44-build-script-build",
    srcs = ["vendor/num-integer-0.1.44/benches/average.rs",
    "vendor/num-integer-0.1.44/benches/gcd.rs",
    "vendor/num-integer-0.1.44/benches/roots.rs",
    "vendor/num-integer-0.1.44/build.rs",
    "vendor/num-integer-0.1.44/src/average.rs",
    "vendor/num-integer-0.1.44/src/lib.rs",
    "vendor/num-integer-0.1.44/src/roots.rs",
    "vendor/num-integer-0.1.44/tests/average.rs",
    "vendor/num-integer-0.1.44/tests/roots.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/num-integer-0.1.44/build.rs",
    edition = "2015",
    features = ["default",
    "i128",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:autocfg-1.0.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "num-traits",
    srcs = ["vendor/num-traits-0.2.14/src/bounds.rs",
    "vendor/num-traits-0.2.14/src/cast.rs",
    "vendor/num-traits-0.2.14/src/float.rs",
    "vendor/num-traits-0.2.14/src/identities.rs",
    "vendor/num-traits-0.2.14/src/int.rs",
    "vendor/num-traits-0.2.14/src/lib.rs",
    "vendor/num-traits-0.2.14/src/macros.rs",
    "vendor/num-traits-0.2.14/src/ops/checked.rs",
    "vendor/num-traits-0.2.14/src/ops/inv.rs",
    "vendor/num-traits-0.2.14/src/ops/mod.rs",
    "vendor/num-traits-0.2.14/src/ops/mul_add.rs",
    "vendor/num-traits-0.2.14/src/ops/overflowing.rs",
    "vendor/num-traits-0.2.14/src/ops/saturating.rs",
    "vendor/num-traits-0.2.14/src/ops/wrapping.rs",
    "vendor/num-traits-0.2.14/src/pow.rs",
    "vendor/num-traits-0.2.14/src/real.rs",
    "vendor/num-traits-0.2.14/src/sign.rs",
    ],
    deps = [],
    crate = "num_traits",
    crate_root = "vendor/num-traits-0.2.14/src/lib.rs",
    edition = "2015",
    features = ["default",
    "i128",
    "libm",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libm",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :num-traits-0.2.14-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "num-traits-0.2.14-build-script-build",
    srcs = ["vendor/num-traits-0.2.14/build.rs",
    "vendor/num-traits-0.2.14/src/bounds.rs",
    "vendor/num-traits-0.2.14/src/cast.rs",
    "vendor/num-traits-0.2.14/src/float.rs",
    "vendor/num-traits-0.2.14/src/identities.rs",
    "vendor/num-traits-0.2.14/src/int.rs",
    "vendor/num-traits-0.2.14/src/lib.rs",
    "vendor/num-traits-0.2.14/src/macros.rs",
    "vendor/num-traits-0.2.14/src/ops/checked.rs",
    "vendor/num-traits-0.2.14/src/ops/inv.rs",
    "vendor/num-traits-0.2.14/src/ops/mod.rs",
    "vendor/num-traits-0.2.14/src/ops/mul_add.rs",
    "vendor/num-traits-0.2.14/src/ops/overflowing.rs",
    "vendor/num-traits-0.2.14/src/ops/saturating.rs",
    "vendor/num-traits-0.2.14/src/ops/wrapping.rs",
    "vendor/num-traits-0.2.14/src/pow.rs",
    "vendor/num-traits-0.2.14/src/real.rs",
    "vendor/num-traits-0.2.14/src/sign.rs",
    "vendor/num-traits-0.2.14/tests/cast.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/num-traits-0.2.14/build.rs",
    edition = "2015",
    features = ["default",
    "i128",
    "libm",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:autocfg-1.0.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "num_cpus",
    srcs = ["vendor/num_cpus-1.13.0/src/lib.rs",
    "vendor/num_cpus-1.13.0/src/linux.rs",
    ],
    deps = [],
    crate = "num_cpus",
    crate_root = "vendor/num_cpus-1.13.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "object-0.20.0",
    srcs = ["vendor/object-0.20.0/src/common.rs",
    "vendor/object-0.20.0/src/elf.rs",
    "vendor/object-0.20.0/src/endian.rs",
    "vendor/object-0.20.0/src/lib.rs",
    "vendor/object-0.20.0/src/macho.rs",
    "vendor/object-0.20.0/src/pe.rs",
    "vendor/object-0.20.0/src/pod.rs",
    "vendor/object-0.20.0/src/read/any.rs",
    "vendor/object-0.20.0/src/read/coff/file.rs",
    "vendor/object-0.20.0/src/read/coff/mod.rs",
    "vendor/object-0.20.0/src/read/coff/relocation.rs",
    "vendor/object-0.20.0/src/read/coff/section.rs",
    "vendor/object-0.20.0/src/read/coff/symbol.rs",
    "vendor/object-0.20.0/src/read/elf/compression.rs",
    "vendor/object-0.20.0/src/read/elf/file.rs",
    "vendor/object-0.20.0/src/read/elf/mod.rs",
    "vendor/object-0.20.0/src/read/elf/note.rs",
    "vendor/object-0.20.0/src/read/elf/relocation.rs",
    "vendor/object-0.20.0/src/read/elf/section.rs",
    "vendor/object-0.20.0/src/read/elf/segment.rs",
    "vendor/object-0.20.0/src/read/elf/symbol.rs",
    "vendor/object-0.20.0/src/read/macho/file.rs",
    "vendor/object-0.20.0/src/read/macho/load_command.rs",
    "vendor/object-0.20.0/src/read/macho/mod.rs",
    "vendor/object-0.20.0/src/read/macho/relocation.rs",
    "vendor/object-0.20.0/src/read/macho/section.rs",
    "vendor/object-0.20.0/src/read/macho/segment.rs",
    "vendor/object-0.20.0/src/read/macho/symbol.rs",
    "vendor/object-0.20.0/src/read/mod.rs",
    "vendor/object-0.20.0/src/read/pe/file.rs",
    "vendor/object-0.20.0/src/read/pe/mod.rs",
    "vendor/object-0.20.0/src/read/pe/section.rs",
    "vendor/object-0.20.0/src/read/traits.rs",
    "vendor/object-0.20.0/src/read/util.rs",
    "vendor/object-0.20.0/src/read/wasm.rs",
    "vendor/object-0.20.0/src/write/coff.rs",
    "vendor/object-0.20.0/src/write/elf.rs",
    "vendor/object-0.20.0/src/write/macho.rs",
    "vendor/object-0.20.0/src/write/mod.rs",
    "vendor/object-0.20.0/src/write/string.rs",
    "vendor/object-0.20.0/src/write/util.rs",
    ],
    deps = [],
    crate = "object",
    crate_root = "vendor/object-0.20.0/src/lib.rs",
    edition = "2018",
    features = ["coff",
    "elf",
    "macho",
    "pe",
    "read_core",
    "unaligned",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "once_cell",
    srcs = ["vendor/once_cell-1.7.2/src/imp_pl.rs",
    "vendor/once_cell-1.7.2/src/imp_std.rs",
    "vendor/once_cell-1.7.2/src/lib.rs",
    "vendor/once_cell-1.7.2/src/race.rs",
    ],
    deps = [],
    crate = "once_cell",
    crate_root = "vendor/once_cell-1.7.2/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "default",
    "race",
    "std",
    "unstable",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "opaque-debug-0.2.3",
    srcs = ["vendor/opaque-debug-0.2.3/src/lib.rs",],
    deps = [],
    crate = "opaque_debug",
    crate_root = "vendor/opaque-debug-0.2.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "opaque-debug-0.3.0",
    srcs = ["vendor/opaque-debug-0.3.0/src/lib.rs",],
    deps = [],
    crate = "opaque_debug",
    crate_root = "vendor/opaque-debug-0.3.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "openssl-probe-0.1.2",
    srcs = ["vendor/openssl-probe-0.1.2/src/lib.rs",],
    deps = [],
    crate = "openssl_probe",
    crate_root = "vendor/openssl-probe-0.1.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "ordered-float",
    srcs = ["vendor/ordered-float-1.1.1/src/lib.rs",],
    deps = [],
    crate = "ordered_float",
    crate_root = "vendor/ordered-float-1.1.1/src/lib.rs",
    edition = "2015",
    features = ["default",
    "serde",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:num-traits",
    "//generated/third-party/rust:serde",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "parking_lot-0.11.0",
    srcs = ["vendor/parking_lot-0.11.0/src/condvar.rs",
    "vendor/parking_lot-0.11.0/src/deadlock.rs",
    "vendor/parking_lot-0.11.0/src/elision.rs",
    "vendor/parking_lot-0.11.0/src/fair_mutex.rs",
    "vendor/parking_lot-0.11.0/src/lib.rs",
    "vendor/parking_lot-0.11.0/src/mutex.rs",
    "vendor/parking_lot-0.11.0/src/once.rs",
    "vendor/parking_lot-0.11.0/src/raw_fair_mutex.rs",
    "vendor/parking_lot-0.11.0/src/raw_mutex.rs",
    "vendor/parking_lot-0.11.0/src/raw_rwlock.rs",
    "vendor/parking_lot-0.11.0/src/remutex.rs",
    "vendor/parking_lot-0.11.0/src/rwlock.rs",
    "vendor/parking_lot-0.11.0/src/util.rs",
    ],
    deps = [],
    crate = "parking_lot",
    crate_root = "vendor/parking_lot-0.11.0/src/lib.rs",
    edition = "2018",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:instant-0.1.7",
    "//generated/third-party/rust:lock_api-0.4.1",
    "//generated/third-party/rust:parking_lot_core-0.8.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "parking_lot_core-0.8.0",
    srcs = ["vendor/parking_lot_core-0.8.0/src/lib.rs",
    "vendor/parking_lot_core-0.8.0/src/parking_lot.rs",
    "vendor/parking_lot_core-0.8.0/src/spinwait.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/cloudabi.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/generic.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/linux.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/mod.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/redox.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/sgx.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/unix.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/wasm.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/wasm_atomic.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/windows/keyed_event.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/windows/mod.rs",
    "vendor/parking_lot_core-0.8.0/src/thread_parker/windows/waitaddress.rs",
    "vendor/parking_lot_core-0.8.0/src/util.rs",
    "vendor/parking_lot_core-0.8.0/src/word_lock.rs",
    ],
    deps = [],
    crate = "parking_lot_core",
    crate_root = "vendor/parking_lot_core-0.8.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if",
    "//generated/third-party/rust:instant-0.1.7",
    "//generated/third-party/rust:smallvec",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "paste",
    srcs = ["vendor/paste-1.0.2/src/doc.rs",
    "vendor/paste-1.0.2/src/error.rs",
    "vendor/paste-1.0.2/src/lib.rs",
    "vendor/paste-1.0.2/src/segment.rs",
    ],
    deps = [],
    crate = "paste",
    crate_root = "vendor/paste-1.0.2/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "percent-encoding",
    srcs = ["vendor/percent-encoding-2.1.0/lib.rs",],
    deps = [],
    crate = "percent_encoding",
    crate_root = "vendor/percent-encoding-2.1.0/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "pest",
    srcs = ["vendor/pest-2.1.3/src/error.rs",
    "vendor/pest-2.1.3/src/iterators/flat_pairs.rs",
    "vendor/pest-2.1.3/src/iterators/mod.rs",
    "vendor/pest-2.1.3/src/iterators/pair.rs",
    "vendor/pest-2.1.3/src/iterators/pairs.rs",
    "vendor/pest-2.1.3/src/iterators/queueable_token.rs",
    "vendor/pest-2.1.3/src/iterators/tokens.rs",
    "vendor/pest-2.1.3/src/lib.rs",
    "vendor/pest-2.1.3/src/macros.rs",
    "vendor/pest-2.1.3/src/parser.rs",
    "vendor/pest-2.1.3/src/parser_state.rs",
    "vendor/pest-2.1.3/src/position.rs",
    "vendor/pest-2.1.3/src/prec_climber.rs",
    "vendor/pest-2.1.3/src/span.rs",
    "vendor/pest-2.1.3/src/stack.rs",
    "vendor/pest-2.1.3/src/token.rs",
    "vendor/pest-2.1.3/src/unicode/binary.rs",
    "vendor/pest-2.1.3/src/unicode/category.rs",
    "vendor/pest-2.1.3/src/unicode/mod.rs",
    ],
    deps = [],
    crate = "pest",
    crate_root = "vendor/pest-2.1.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:ucd-trie-0.1.3",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "pest_derive",
    srcs = ["vendor/pest_derive-2.1.0/src/lib.rs",],
    deps = [],
    crate = "pest_derive",
    crate_root = "vendor/pest_derive-2.1.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:pest",
    "//generated/third-party/rust:pest_generator-2.1.3",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "pest_generator-2.1.3",
    srcs = ["vendor/pest_generator-2.1.3/src/generator.rs",
    "vendor/pest_generator-2.1.3/src/lib.rs",
    "vendor/pest_generator-2.1.3/src/macros.rs",
    ],
    deps = [],
    crate = "pest_generator",
    crate_root = "vendor/pest_generator-2.1.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:pest",
    "//generated/third-party/rust:pest_meta-2.1.3",
    "//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "pest_meta-2.1.3",
    srcs = ["vendor/pest_meta-2.1.3/src/ast.rs",
    "vendor/pest_meta-2.1.3/src/grammar.rs",
    "vendor/pest_meta-2.1.3/src/lib.rs",
    "vendor/pest_meta-2.1.3/src/optimizer/concatenator.rs",
    "vendor/pest_meta-2.1.3/src/optimizer/factorizer.rs",
    "vendor/pest_meta-2.1.3/src/optimizer/mod.rs",
    "vendor/pest_meta-2.1.3/src/optimizer/restorer.rs",
    "vendor/pest_meta-2.1.3/src/optimizer/rotater.rs",
    "vendor/pest_meta-2.1.3/src/optimizer/skipper.rs",
    "vendor/pest_meta-2.1.3/src/optimizer/unroller.rs",
    "vendor/pest_meta-2.1.3/src/parser.rs",
    "vendor/pest_meta-2.1.3/src/validator.rs",
    ],
    deps = [],
    crate = "pest_meta",
    crate_root = "vendor/pest_meta-2.1.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:maplit",
    "//generated/third-party/rust:pest",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "petgraph-0.5.1",
    srcs = ["vendor/petgraph-0.5.1/src/algo/dominators.rs",
    "vendor/petgraph-0.5.1/src/algo/mod.rs",
    "vendor/petgraph-0.5.1/src/astar.rs",
    "vendor/petgraph-0.5.1/src/csr.rs",
    "vendor/petgraph-0.5.1/src/data.rs",
    "vendor/petgraph-0.5.1/src/dijkstra.rs",
    "vendor/petgraph-0.5.1/src/dot.rs",
    "vendor/petgraph-0.5.1/src/generate.rs",
    "vendor/petgraph-0.5.1/src/graph_impl/frozen.rs",
    "vendor/petgraph-0.5.1/src/graph_impl/mod.rs",
    "vendor/petgraph-0.5.1/src/graph_impl/serialization.rs",
    "vendor/petgraph-0.5.1/src/graph_impl/stable_graph/mod.rs",
    "vendor/petgraph-0.5.1/src/graph_impl/stable_graph/serialization.rs",
    "vendor/petgraph-0.5.1/src/graphmap.rs",
    "vendor/petgraph-0.5.1/src/isomorphism.rs",
    "vendor/petgraph-0.5.1/src/iter_format.rs",
    "vendor/petgraph-0.5.1/src/iter_utils.rs",
    "vendor/petgraph-0.5.1/src/lib.rs",
    "vendor/petgraph-0.5.1/src/macros.rs",
    "vendor/petgraph-0.5.1/src/matrix_graph.rs",
    "vendor/petgraph-0.5.1/src/prelude.rs",
    "vendor/petgraph-0.5.1/src/quickcheck.rs",
    "vendor/petgraph-0.5.1/src/scored.rs",
    "vendor/petgraph-0.5.1/src/serde_utils.rs",
    "vendor/petgraph-0.5.1/src/simple_paths.rs",
    "vendor/petgraph-0.5.1/src/traits_graph.rs",
    "vendor/petgraph-0.5.1/src/unionfind.rs",
    "vendor/petgraph-0.5.1/src/util.rs",
    "vendor/petgraph-0.5.1/src/visit/dfsvisit.rs",
    "vendor/petgraph-0.5.1/src/visit/filter.rs",
    "vendor/petgraph-0.5.1/src/visit/macros.rs",
    "vendor/petgraph-0.5.1/src/visit/mod.rs",
    "vendor/petgraph-0.5.1/src/visit/reversed.rs",
    "vendor/petgraph-0.5.1/src/visit/traversal.rs",
    ],
    deps = [],
    crate = "petgraph",
    crate_root = "vendor/petgraph-0.5.1/src/lib.rs",
    edition = "2018",
    features = ["default",
    "graphmap",
    "matrix_graph",
    "stable_graph",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:fixedbitset-0.2.0",
    "//generated/third-party/rust:indexmap",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "phf_shared-0.8.0",
    srcs = ["vendor/phf_shared-0.8.0/src/lib.rs",],
    deps = [],
    crate = "phf_shared",
    crate_root = "vendor/phf_shared-0.8.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:siphasher",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "pin-project",
    srcs = ["vendor/pin-project-0.4.24/src/lib.rs",],
    deps = [],
    crate = "pin_project",
    crate_root = "vendor/pin-project-0.4.24/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:pin-project-internal-0.4.24",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "pin-project-1.0.2",
    srcs = ["vendor/pin-project-1.0.2/src/lib.rs",],
    deps = [],
    crate = "pin_project",
    crate_root = "vendor/pin-project-1.0.2/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:pin-project-internal-1.0.2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "pin-project-internal-0.4.24",
    srcs = ["vendor/pin-project-internal-0.4.24/src/lib.rs",
    "vendor/pin-project-internal-0.4.24/src/pin_project/attribute.rs",
    "vendor/pin-project-internal-0.4.24/src/pin_project/derive.rs",
    "vendor/pin-project-internal-0.4.24/src/pin_project/mod.rs",
    "vendor/pin-project-internal-0.4.24/src/pinned_drop.rs",
    "vendor/pin-project-internal-0.4.24/src/project.rs",
    "vendor/pin-project-internal-0.4.24/src/utils.rs",
    ],
    deps = [],
    crate = "pin_project_internal",
    crate_root = "vendor/pin-project-internal-0.4.24/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :pin-project-internal-0.4.24-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_binary(
    name = "pin-project-internal-0.4.24-build-script-build",
    srcs = ["vendor/pin-project-internal-0.4.24/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/pin-project-internal-0.4.24/build.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "pin-project-internal-1.0.2",
    srcs = ["vendor/pin-project-internal-1.0.2/src/lib.rs",
    "vendor/pin-project-internal-1.0.2/src/pin_project/args.rs",
    "vendor/pin-project-internal-1.0.2/src/pin_project/attribute.rs",
    "vendor/pin-project-internal-1.0.2/src/pin_project/derive.rs",
    "vendor/pin-project-internal-1.0.2/src/pin_project/mod.rs",
    "vendor/pin-project-internal-1.0.2/src/pinned_drop.rs",
    "vendor/pin-project-internal-1.0.2/src/utils.rs",
    ],
    deps = [],
    crate = "pin_project_internal",
    crate_root = "vendor/pin-project-internal-1.0.2/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "pin-project-lite-0.1.11",
    srcs = ["vendor/pin-project-lite-0.1.11/src/lib.rs",],
    deps = [],
    crate = "pin_project_lite",
    crate_root = "vendor/pin-project-lite-0.1.11/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "pin-project-lite-0.2.6",
    srcs = ["vendor/pin-project-lite-0.2.6/src/lib.rs",],
    deps = [],
    crate = "pin_project_lite",
    crate_root = "vendor/pin-project-lite-0.2.6/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "pin-utils-0.1.0",
    srcs = ["vendor/pin-utils-0.1.0/src/lib.rs",
    "vendor/pin-utils-0.1.0/src/projection.rs",
    "vendor/pin-utils-0.1.0/src/stack_pin.rs",
    ],
    deps = [],
    crate = "pin_utils",
    crate_root = "vendor/pin-utils-0.1.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "plain",
    srcs = ["vendor/plain-0.2.3/src/error.rs",
    "vendor/plain-0.2.3/src/lib.rs",
    "vendor/plain-0.2.3/src/methods.rs",
    "vendor/plain-0.2.3/src/plain.rs",
    "vendor/plain-0.2.3/src/tests.rs",
    ],
    deps = [],
    crate = "plain",
    crate_root = "vendor/plain-0.2.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "ppv-lite86-0.2.9",
    srcs = ["vendor/ppv-lite86-0.2.9/src/generic.rs",
    "vendor/ppv-lite86-0.2.9/src/lib.rs",
    "vendor/ppv-lite86-0.2.9/src/soft.rs",
    "vendor/ppv-lite86-0.2.9/src/types.rs",
    "vendor/ppv-lite86-0.2.9/src/x86_64/mod.rs",
    "vendor/ppv-lite86-0.2.9/src/x86_64/sse2.rs",
    ],
    deps = [],
    crate = "ppv_lite86",
    crate_root = "vendor/ppv-lite86-0.2.9/src/lib.rs",
    edition = "2018",
    features = ["simd",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "precomputed-hash-0.1.1",
    srcs = ["vendor/precomputed-hash-0.1.1/src/lib.rs",],
    deps = [],
    crate = "precomputed_hash",
    crate_root = "vendor/precomputed-hash-0.1.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "proc-macro-error",
    srcs = ["vendor/proc-macro-error-1.0.4/src/diagnostic.rs",
    "vendor/proc-macro-error-1.0.4/src/dummy.rs",
    "vendor/proc-macro-error-1.0.4/src/imp/delegate.rs",
    "vendor/proc-macro-error-1.0.4/src/imp/fallback.rs",
    "vendor/proc-macro-error-1.0.4/src/lib.rs",
    "vendor/proc-macro-error-1.0.4/src/macros.rs",
    "vendor/proc-macro-error-1.0.4/src/sealed.rs",
    ],
    deps = [],
    crate = "proc_macro_error",
    crate_root = "vendor/proc-macro-error-1.0.4/src/lib.rs",
    edition = "2018",
    features = ["default",
    "syn",
    "syn-error",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro-error-attr-1.0.4",
    "//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "proc-macro-error-attr-1.0.4",
    srcs = ["vendor/proc-macro-error-attr-1.0.4/src/lib.rs",
    "vendor/proc-macro-error-attr-1.0.4/src/parse.rs",
    "vendor/proc-macro-error-attr-1.0.4/src/settings.rs",
    ],
    deps = [],
    crate = "proc_macro_error_attr",
    crate_root = "vendor/proc-macro-error-attr-1.0.4/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :proc-macro-error-attr-1.0.4-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_binary(
    name = "proc-macro-error-attr-1.0.4-build-script-build",
    srcs = ["vendor/proc-macro-error-attr-1.0.4/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/proc-macro-error-attr-1.0.4/build.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:version_check-0.9.2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "proc-macro-hack",
    srcs = ["vendor/proc-macro-hack-0.5.19/src/error.rs",
    "vendor/proc-macro-hack-0.5.19/src/iter.rs",
    "vendor/proc-macro-hack-0.5.19/src/lib.rs",
    "vendor/proc-macro-hack-0.5.19/src/parse.rs",
    "vendor/proc-macro-hack-0.5.19/src/quote.rs",
    ],
    deps = [],
    crate = "proc_macro_hack",
    crate_root = "vendor/proc-macro-hack-0.5.19/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :proc-macro-hack-0.5.19-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_binary(
    name = "proc-macro-hack-0.5.19-build-script-build",
    srcs = ["vendor/proc-macro-hack-0.5.19/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/proc-macro-hack-0.5.19/build.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "proc-macro-nested-0.1.6",
    srcs = ["vendor/proc-macro-nested-0.1.6/src/lib.rs",],
    deps = [],
    crate = "proc_macro_nested",
    crate_root = "vendor/proc-macro-nested-0.1.6/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
        "//third-party/rust:proc-macro-nested-0.1.6-build-script-build-srcs=count.rs": "vendor/proc-macro-nested-0.1.6/src/count.rs",
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "OUT_DIR": ".",
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "proc-macro-nested-0.1.6-build-script-build",
    srcs = ["vendor/proc-macro-nested-0.1.6/build.rs",
    "vendor/proc-macro-nested-0.1.6/src/lib.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/proc-macro-nested-0.1.6/build.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "OUT_DIR": ".",
    },
    unittests = False,
)
third_party_rust_library(
    name = "proc-macro2",
    srcs = ["vendor/proc-macro2-1.0.26/src/detection.rs",
    "vendor/proc-macro2-1.0.26/src/fallback.rs",
    "vendor/proc-macro2-1.0.26/src/lib.rs",
    "vendor/proc-macro2-1.0.26/src/marker.rs",
    "vendor/proc-macro2-1.0.26/src/parse.rs",
    "vendor/proc-macro2-1.0.26/src/wrapper.rs",
    ],
    deps = [],
    crate = "proc_macro2",
    crate_root = "vendor/proc-macro2-1.0.26/src/lib.rs",
    edition = "2018",
    features = ["default",
    "proc-macro",
    "span-locations",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:unicode-xid-0.2.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :proc-macro2-1.0.26-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "proc-macro2-1.0.26-build-script-build",
    srcs = ["vendor/proc-macro2-1.0.26/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/proc-macro2-1.0.26/build.rs",
    edition = "2018",
    features = ["default",
    "proc-macro",
    "span-locations",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "quick-error-1.2.3",
    srcs = ["vendor/quick-error-1.2.3/src/lib.rs",],
    deps = [],
    crate = "quick_error",
    crate_root = "vendor/quick-error-1.2.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "quick-error-2.0.0",
    srcs = ["vendor/quick-error-2.0.0/src/lib.rs",],
    deps = [],
    crate = "quick_error",
    crate_root = "vendor/quick-error-2.0.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "quickcheck",
    srcs = ["vendor/quickcheck-0.9.2/src/arbitrary.rs",
    "vendor/quickcheck-0.9.2/src/lib.rs",
    "vendor/quickcheck-0.9.2/src/tester.rs",
    "vendor/quickcheck-0.9.2/src/tests.rs",
    ],
    deps = [],
    crate = "quickcheck",
    crate_root = "vendor/quickcheck-0.9.2/src/lib.rs",
    edition = "2018",
    features = ["default",
    "env_logger",
    "log",
    "regex",
    "use_logging",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:env_logger",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:rand",
    "//generated/third-party/rust:rand_core",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "quote",
    srcs = ["vendor/quote-1.0.9/src/ext.rs",
    "vendor/quote-1.0.9/src/format.rs",
    "vendor/quote-1.0.9/src/ident_fragment.rs",
    "vendor/quote-1.0.9/src/lib.rs",
    "vendor/quote-1.0.9/src/runtime.rs",
    "vendor/quote-1.0.9/src/spanned.rs",
    "vendor/quote-1.0.9/src/to_tokens.rs",
    ],
    deps = [],
    crate = "quote",
    crate_root = "vendor/quote-1.0.9/src/lib.rs",
    edition = "2018",
    features = ["default",
    "proc-macro",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand",
    srcs = ["vendor/rand-0.7.3/src/distributions/bernoulli.rs",
    "vendor/rand-0.7.3/src/distributions/binomial.rs",
    "vendor/rand-0.7.3/src/distributions/cauchy.rs",
    "vendor/rand-0.7.3/src/distributions/dirichlet.rs",
    "vendor/rand-0.7.3/src/distributions/exponential.rs",
    "vendor/rand-0.7.3/src/distributions/float.rs",
    "vendor/rand-0.7.3/src/distributions/gamma.rs",
    "vendor/rand-0.7.3/src/distributions/integer.rs",
    "vendor/rand-0.7.3/src/distributions/mod.rs",
    "vendor/rand-0.7.3/src/distributions/normal.rs",
    "vendor/rand-0.7.3/src/distributions/other.rs",
    "vendor/rand-0.7.3/src/distributions/pareto.rs",
    "vendor/rand-0.7.3/src/distributions/poisson.rs",
    "vendor/rand-0.7.3/src/distributions/triangular.rs",
    "vendor/rand-0.7.3/src/distributions/uniform.rs",
    "vendor/rand-0.7.3/src/distributions/unit_circle.rs",
    "vendor/rand-0.7.3/src/distributions/unit_sphere.rs",
    "vendor/rand-0.7.3/src/distributions/utils.rs",
    "vendor/rand-0.7.3/src/distributions/weibull.rs",
    "vendor/rand-0.7.3/src/distributions/weighted/alias_method.rs",
    "vendor/rand-0.7.3/src/distributions/weighted/mod.rs",
    "vendor/rand-0.7.3/src/distributions/ziggurat_tables.rs",
    "vendor/rand-0.7.3/src/lib.rs",
    "vendor/rand-0.7.3/src/prelude.rs",
    "vendor/rand-0.7.3/src/rngs/adapter/mod.rs",
    "vendor/rand-0.7.3/src/rngs/adapter/read.rs",
    "vendor/rand-0.7.3/src/rngs/adapter/reseeding.rs",
    "vendor/rand-0.7.3/src/rngs/entropy.rs",
    "vendor/rand-0.7.3/src/rngs/mock.rs",
    "vendor/rand-0.7.3/src/rngs/mod.rs",
    "vendor/rand-0.7.3/src/rngs/small.rs",
    "vendor/rand-0.7.3/src/rngs/std.rs",
    "vendor/rand-0.7.3/src/rngs/thread.rs",
    "vendor/rand-0.7.3/src/seq/index.rs",
    "vendor/rand-0.7.3/src/seq/mod.rs",
    ],
    deps = [],
    crate = "rand",
    crate_root = "vendor/rand-0.7.3/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "default",
    "getrandom",
    "getrandom_package",
    "libc",
    "rand_pcg",
    "small_rng",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_core",
    "//generated/third-party/rust:rand_pcg",
    "//generated/third-party/rust:libc",
    "//generated/third-party/rust:rand_chacha",
    ],
    named_deps = {
        "getrandom_package": "//generated/third-party/rust:getrandom-0.1.15",
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand-0.6.5",
    srcs = ["vendor/rand-0.6.5/src/deprecated.rs",
    "vendor/rand-0.6.5/src/distributions/bernoulli.rs",
    "vendor/rand-0.6.5/src/distributions/binomial.rs",
    "vendor/rand-0.6.5/src/distributions/cauchy.rs",
    "vendor/rand-0.6.5/src/distributions/dirichlet.rs",
    "vendor/rand-0.6.5/src/distributions/exponential.rs",
    "vendor/rand-0.6.5/src/distributions/float.rs",
    "vendor/rand-0.6.5/src/distributions/gamma.rs",
    "vendor/rand-0.6.5/src/distributions/integer.rs",
    "vendor/rand-0.6.5/src/distributions/mod.rs",
    "vendor/rand-0.6.5/src/distributions/normal.rs",
    "vendor/rand-0.6.5/src/distributions/other.rs",
    "vendor/rand-0.6.5/src/distributions/pareto.rs",
    "vendor/rand-0.6.5/src/distributions/poisson.rs",
    "vendor/rand-0.6.5/src/distributions/triangular.rs",
    "vendor/rand-0.6.5/src/distributions/uniform.rs",
    "vendor/rand-0.6.5/src/distributions/unit_circle.rs",
    "vendor/rand-0.6.5/src/distributions/unit_sphere.rs",
    "vendor/rand-0.6.5/src/distributions/utils.rs",
    "vendor/rand-0.6.5/src/distributions/weibull.rs",
    "vendor/rand-0.6.5/src/distributions/weighted.rs",
    "vendor/rand-0.6.5/src/distributions/ziggurat_tables.rs",
    "vendor/rand-0.6.5/src/lib.rs",
    "vendor/rand-0.6.5/src/prelude.rs",
    "vendor/rand-0.6.5/src/prng/mod.rs",
    "vendor/rand-0.6.5/src/rngs/adapter/mod.rs",
    "vendor/rand-0.6.5/src/rngs/adapter/read.rs",
    "vendor/rand-0.6.5/src/rngs/adapter/reseeding.rs",
    "vendor/rand-0.6.5/src/rngs/entropy.rs",
    "vendor/rand-0.6.5/src/rngs/mock.rs",
    "vendor/rand-0.6.5/src/rngs/mod.rs",
    "vendor/rand-0.6.5/src/rngs/small.rs",
    "vendor/rand-0.6.5/src/rngs/std.rs",
    "vendor/rand-0.6.5/src/rngs/thread.rs",
    "vendor/rand-0.6.5/src/seq/index.rs",
    "vendor/rand-0.6.5/src/seq/mod.rs",
    ],
    deps = [],
    crate = "rand",
    crate_root = "vendor/rand-0.6.5/src/lib.rs",
    edition = "2015",
    features = ["alloc",
    "default",
    "rand_os",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_chacha-0.1.1",
    "//generated/third-party/rust:rand_core-0.4.2",
    "//generated/third-party/rust:rand_hc-0.1.0",
    "//generated/third-party/rust:rand_isaac-0.1.1",
    "//generated/third-party/rust:rand_jitter-0.1.4",
    "//generated/third-party/rust:rand_os-0.1.3",
    "//generated/third-party/rust:rand_pcg-0.1.2",
    "//generated/third-party/rust:rand_xorshift-0.1.1",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :rand-0.6.5-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "rand-0.6.5-build-script-build",
    srcs = ["vendor/rand-0.6.5/benches/distributions.rs",
    "vendor/rand-0.6.5/benches/generators.rs",
    "vendor/rand-0.6.5/benches/misc.rs",
    "vendor/rand-0.6.5/benches/seq.rs",
    "vendor/rand-0.6.5/build.rs",
    "vendor/rand-0.6.5/examples/monte-carlo.rs",
    "vendor/rand-0.6.5/examples/monty-hall.rs",
    "vendor/rand-0.6.5/src/deprecated.rs",
    "vendor/rand-0.6.5/src/distributions/bernoulli.rs",
    "vendor/rand-0.6.5/src/distributions/binomial.rs",
    "vendor/rand-0.6.5/src/distributions/cauchy.rs",
    "vendor/rand-0.6.5/src/distributions/dirichlet.rs",
    "vendor/rand-0.6.5/src/distributions/exponential.rs",
    "vendor/rand-0.6.5/src/distributions/float.rs",
    "vendor/rand-0.6.5/src/distributions/gamma.rs",
    "vendor/rand-0.6.5/src/distributions/integer.rs",
    "vendor/rand-0.6.5/src/distributions/mod.rs",
    "vendor/rand-0.6.5/src/distributions/normal.rs",
    "vendor/rand-0.6.5/src/distributions/other.rs",
    "vendor/rand-0.6.5/src/distributions/pareto.rs",
    "vendor/rand-0.6.5/src/distributions/poisson.rs",
    "vendor/rand-0.6.5/src/distributions/triangular.rs",
    "vendor/rand-0.6.5/src/distributions/uniform.rs",
    "vendor/rand-0.6.5/src/distributions/unit_circle.rs",
    "vendor/rand-0.6.5/src/distributions/unit_sphere.rs",
    "vendor/rand-0.6.5/src/distributions/utils.rs",
    "vendor/rand-0.6.5/src/distributions/weibull.rs",
    "vendor/rand-0.6.5/src/distributions/weighted.rs",
    "vendor/rand-0.6.5/src/distributions/ziggurat_tables.rs",
    "vendor/rand-0.6.5/src/lib.rs",
    "vendor/rand-0.6.5/src/prelude.rs",
    "vendor/rand-0.6.5/src/prng/mod.rs",
    "vendor/rand-0.6.5/src/rngs/adapter/mod.rs",
    "vendor/rand-0.6.5/src/rngs/adapter/read.rs",
    "vendor/rand-0.6.5/src/rngs/adapter/reseeding.rs",
    "vendor/rand-0.6.5/src/rngs/entropy.rs",
    "vendor/rand-0.6.5/src/rngs/mock.rs",
    "vendor/rand-0.6.5/src/rngs/mod.rs",
    "vendor/rand-0.6.5/src/rngs/small.rs",
    "vendor/rand-0.6.5/src/rngs/std.rs",
    "vendor/rand-0.6.5/src/rngs/thread.rs",
    "vendor/rand-0.6.5/src/seq/index.rs",
    "vendor/rand-0.6.5/src/seq/mod.rs",
    "vendor/rand-0.6.5/tests/uniformity.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/rand-0.6.5/build.rs",
    edition = "2015",
    features = ["alloc",
    "default",
    "rand_os",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:autocfg-0.1.7",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "rand-0.8.3",
    srcs = ["vendor/rand-0.8.3/src/distributions/bernoulli.rs",
    "vendor/rand-0.8.3/src/distributions/float.rs",
    "vendor/rand-0.8.3/src/distributions/integer.rs",
    "vendor/rand-0.8.3/src/distributions/mod.rs",
    "vendor/rand-0.8.3/src/distributions/other.rs",
    "vendor/rand-0.8.3/src/distributions/uniform.rs",
    "vendor/rand-0.8.3/src/distributions/utils.rs",
    "vendor/rand-0.8.3/src/distributions/weighted.rs",
    "vendor/rand-0.8.3/src/distributions/weighted_index.rs",
    "vendor/rand-0.8.3/src/lib.rs",
    "vendor/rand-0.8.3/src/prelude.rs",
    "vendor/rand-0.8.3/src/rng.rs",
    "vendor/rand-0.8.3/src/rngs/adapter/mod.rs",
    "vendor/rand-0.8.3/src/rngs/adapter/read.rs",
    "vendor/rand-0.8.3/src/rngs/adapter/reseeding.rs",
    "vendor/rand-0.8.3/src/rngs/mock.rs",
    "vendor/rand-0.8.3/src/rngs/mod.rs",
    "vendor/rand-0.8.3/src/rngs/small.rs",
    "vendor/rand-0.8.3/src/rngs/std.rs",
    "vendor/rand-0.8.3/src/rngs/thread.rs",
    "vendor/rand-0.8.3/src/rngs/xoshiro128plusplus.rs",
    "vendor/rand-0.8.3/src/rngs/xoshiro256plusplus.rs",
    "vendor/rand-0.8.3/src/seq/index.rs",
    "vendor/rand-0.8.3/src/seq/mod.rs",
    ],
    deps = [],
    crate = "rand",
    crate_root = "vendor/rand-0.8.3/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "default",
    "getrandom",
    "libc",
    "rand_chacha",
    "rand_hc",
    "small_rng",
    "std",
    "std_rng",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_core-0.6.1",
    "//generated/third-party/rust:libc",
    "//generated/third-party/rust:rand_chacha-0.3.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_chacha",
    srcs = ["vendor/rand_chacha-0.2.2/src/chacha.rs",
    "vendor/rand_chacha-0.2.2/src/guts.rs",
    "vendor/rand_chacha-0.2.2/src/lib.rs",
    ],
    deps = [],
    crate = "rand_chacha",
    crate_root = "vendor/rand_chacha-0.2.2/src/lib.rs",
    edition = "2018",
    features = ["default",
    "simd",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:ppv-lite86-0.2.9",
    "//generated/third-party/rust:rand_core",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_chacha-0.1.1",
    srcs = ["vendor/rand_chacha-0.1.1/src/chacha.rs",
    "vendor/rand_chacha-0.1.1/src/lib.rs",
    ],
    deps = [],
    crate = "rand_chacha",
    crate_root = "vendor/rand_chacha-0.1.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_core-0.3.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :rand_chacha-0.1.1-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "rand_chacha-0.1.1-build-script-build",
    srcs = ["vendor/rand_chacha-0.1.1/build.rs",
    "vendor/rand_chacha-0.1.1/src/chacha.rs",
    "vendor/rand_chacha-0.1.1/src/lib.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/rand_chacha-0.1.1/build.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:autocfg-0.1.7",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "rand_chacha-0.3.0",
    srcs = ["vendor/rand_chacha-0.3.0/src/chacha.rs",
    "vendor/rand_chacha-0.3.0/src/guts.rs",
    "vendor/rand_chacha-0.3.0/src/lib.rs",
    ],
    deps = [],
    crate = "rand_chacha",
    crate_root = "vendor/rand_chacha-0.3.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:ppv-lite86-0.2.9",
    "//generated/third-party/rust:rand_core-0.6.1",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_core",
    srcs = ["vendor/rand_core-0.5.1/src/block.rs",
    "vendor/rand_core-0.5.1/src/error.rs",
    "vendor/rand_core-0.5.1/src/impls.rs",
    "vendor/rand_core-0.5.1/src/le.rs",
    "vendor/rand_core-0.5.1/src/lib.rs",
    "vendor/rand_core-0.5.1/src/os.rs",
    ],
    deps = [],
    crate = "rand_core",
    crate_root = "vendor/rand_core-0.5.1/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "getrandom",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:getrandom-0.1.15",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_core-0.3.1",
    srcs = ["vendor/rand_core-0.3.1/src/block.rs",
    "vendor/rand_core-0.3.1/src/error.rs",
    "vendor/rand_core-0.3.1/src/impls.rs",
    "vendor/rand_core-0.3.1/src/le.rs",
    "vendor/rand_core-0.3.1/src/lib.rs",
    ],
    deps = [],
    crate = "rand_core",
    crate_root = "vendor/rand_core-0.3.1/src/lib.rs",
    edition = "2015",
    features = ["alloc",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_core-0.4.2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_core-0.4.2",
    srcs = ["vendor/rand_core-0.4.2/src/block.rs",
    "vendor/rand_core-0.4.2/src/error.rs",
    "vendor/rand_core-0.4.2/src/impls.rs",
    "vendor/rand_core-0.4.2/src/le.rs",
    "vendor/rand_core-0.4.2/src/lib.rs",
    ],
    deps = [],
    crate = "rand_core",
    crate_root = "vendor/rand_core-0.4.2/src/lib.rs",
    edition = "2015",
    features = ["alloc",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_core-0.6.1",
    srcs = ["vendor/rand_core-0.6.1/src/block.rs",
    "vendor/rand_core-0.6.1/src/error.rs",
    "vendor/rand_core-0.6.1/src/impls.rs",
    "vendor/rand_core-0.6.1/src/le.rs",
    "vendor/rand_core-0.6.1/src/lib.rs",
    "vendor/rand_core-0.6.1/src/os.rs",
    ],
    deps = [],
    crate = "rand_core",
    crate_root = "vendor/rand_core-0.6.1/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "getrandom",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:getrandom-0.2.2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_hc-0.1.0",
    srcs = ["vendor/rand_hc-0.1.0/src/hc128.rs",
    "vendor/rand_hc-0.1.0/src/lib.rs",
    ],
    deps = [],
    crate = "rand_hc",
    crate_root = "vendor/rand_hc-0.1.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_core-0.3.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_isaac-0.1.1",
    srcs = ["vendor/rand_isaac-0.1.1/src/isaac.rs",
    "vendor/rand_isaac-0.1.1/src/isaac64.rs",
    "vendor/rand_isaac-0.1.1/src/isaac_array.rs",
    "vendor/rand_isaac-0.1.1/src/lib.rs",
    ],
    deps = [],
    crate = "rand_isaac",
    crate_root = "vendor/rand_isaac-0.1.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_core-0.3.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_jitter-0.1.4",
    srcs = ["vendor/rand_jitter-0.1.4/src/dummy_log.rs",
    "vendor/rand_jitter-0.1.4/src/error.rs",
    "vendor/rand_jitter-0.1.4/src/lib.rs",
    "vendor/rand_jitter-0.1.4/src/platform.rs",
    ],
    deps = [],
    crate = "rand_jitter",
    crate_root = "vendor/rand_jitter-0.1.4/src/lib.rs",
    edition = "2015",
    features = ["std",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_core-0.4.2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_os-0.1.3",
    srcs = ["vendor/rand_os-0.1.3/src/cloudabi.rs",
    "vendor/rand_os-0.1.3/src/dragonfly_haiku_emscripten.rs",
    "vendor/rand_os-0.1.3/src/dummy_log.rs",
    "vendor/rand_os-0.1.3/src/freebsd.rs",
    "vendor/rand_os-0.1.3/src/fuchsia.rs",
    "vendor/rand_os-0.1.3/src/lib.rs",
    "vendor/rand_os-0.1.3/src/linux_android.rs",
    "vendor/rand_os-0.1.3/src/macos.rs",
    "vendor/rand_os-0.1.3/src/netbsd.rs",
    "vendor/rand_os-0.1.3/src/openbsd_bitrig.rs",
    "vendor/rand_os-0.1.3/src/random_device.rs",
    "vendor/rand_os-0.1.3/src/redox.rs",
    "vendor/rand_os-0.1.3/src/sgx.rs",
    "vendor/rand_os-0.1.3/src/solarish.rs",
    "vendor/rand_os-0.1.3/src/wasm32_bindgen.rs",
    "vendor/rand_os-0.1.3/src/wasm32_stdweb.rs",
    "vendor/rand_os-0.1.3/src/windows.rs",
    ],
    deps = [],
    crate = "rand_os",
    crate_root = "vendor/rand_os-0.1.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_core-0.4.2",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_pcg",
    srcs = ["vendor/rand_pcg-0.2.1/src/lib.rs",
    "vendor/rand_pcg-0.2.1/src/pcg128.rs",
    "vendor/rand_pcg-0.2.1/src/pcg64.rs",
    ],
    deps = [],
    crate = "rand_pcg",
    crate_root = "vendor/rand_pcg-0.2.1/src/lib.rs",
    edition = "2018",
    features = ["serde",
    "serde1",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_core",
    "//generated/third-party/rust:serde",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rand_pcg-0.1.2",
    srcs = ["vendor/rand_pcg-0.1.2/src/lib.rs",
    "vendor/rand_pcg-0.1.2/src/pcg128.rs",
    "vendor/rand_pcg-0.1.2/src/pcg64.rs",
    ],
    deps = [],
    crate = "rand_pcg",
    crate_root = "vendor/rand_pcg-0.1.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_core-0.4.2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :rand_pcg-0.1.2-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "rand_pcg-0.1.2-build-script-build",
    srcs = ["vendor/rand_pcg-0.1.2/build.rs",
    "vendor/rand_pcg-0.1.2/src/lib.rs",
    "vendor/rand_pcg-0.1.2/src/pcg128.rs",
    "vendor/rand_pcg-0.1.2/src/pcg64.rs",
    "vendor/rand_pcg-0.1.2/tests/lcg64xsh32.rs",
    "vendor/rand_pcg-0.1.2/tests/mcg128xsl64.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/rand_pcg-0.1.2/build.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:autocfg-0.1.7",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "rand_xorshift-0.1.1",
    srcs = ["vendor/rand_xorshift-0.1.1/src/lib.rs",],
    deps = [],
    crate = "rand_xorshift",
    crate_root = "vendor/rand_xorshift-0.1.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rand_core-0.3.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rayon",
    srcs = ["vendor/rayon-1.5.0/src/collections/binary_heap.rs",
    "vendor/rayon-1.5.0/src/collections/btree_map.rs",
    "vendor/rayon-1.5.0/src/collections/btree_set.rs",
    "vendor/rayon-1.5.0/src/collections/hash_map.rs",
    "vendor/rayon-1.5.0/src/collections/hash_set.rs",
    "vendor/rayon-1.5.0/src/collections/linked_list.rs",
    "vendor/rayon-1.5.0/src/collections/mod.rs",
    "vendor/rayon-1.5.0/src/collections/vec_deque.rs",
    "vendor/rayon-1.5.0/src/compile_fail/cannot_collect_filtermap_data.rs",
    "vendor/rayon-1.5.0/src/compile_fail/cannot_zip_filtered_data.rs",
    "vendor/rayon-1.5.0/src/compile_fail/cell_par_iter.rs",
    "vendor/rayon-1.5.0/src/compile_fail/mod.rs",
    "vendor/rayon-1.5.0/src/compile_fail/must_use.rs",
    "vendor/rayon-1.5.0/src/compile_fail/no_send_par_iter.rs",
    "vendor/rayon-1.5.0/src/compile_fail/rc_par_iter.rs",
    "vendor/rayon-1.5.0/src/delegate.rs",
    "vendor/rayon-1.5.0/src/iter/chain.rs",
    "vendor/rayon-1.5.0/src/iter/chunks.rs",
    "vendor/rayon-1.5.0/src/iter/cloned.rs",
    "vendor/rayon-1.5.0/src/iter/collect/consumer.rs",
    "vendor/rayon-1.5.0/src/iter/collect/mod.rs",
    "vendor/rayon-1.5.0/src/iter/collect/test.rs",
    "vendor/rayon-1.5.0/src/iter/copied.rs",
    "vendor/rayon-1.5.0/src/iter/empty.rs",
    "vendor/rayon-1.5.0/src/iter/enumerate.rs",
    "vendor/rayon-1.5.0/src/iter/extend.rs",
    "vendor/rayon-1.5.0/src/iter/filter.rs",
    "vendor/rayon-1.5.0/src/iter/filter_map.rs",
    "vendor/rayon-1.5.0/src/iter/find.rs",
    "vendor/rayon-1.5.0/src/iter/find_first_last/mod.rs",
    "vendor/rayon-1.5.0/src/iter/find_first_last/test.rs",
    "vendor/rayon-1.5.0/src/iter/flat_map.rs",
    "vendor/rayon-1.5.0/src/iter/flat_map_iter.rs",
    "vendor/rayon-1.5.0/src/iter/flatten.rs",
    "vendor/rayon-1.5.0/src/iter/flatten_iter.rs",
    "vendor/rayon-1.5.0/src/iter/fold.rs",
    "vendor/rayon-1.5.0/src/iter/for_each.rs",
    "vendor/rayon-1.5.0/src/iter/from_par_iter.rs",
    "vendor/rayon-1.5.0/src/iter/inspect.rs",
    "vendor/rayon-1.5.0/src/iter/interleave.rs",
    "vendor/rayon-1.5.0/src/iter/interleave_shortest.rs",
    "vendor/rayon-1.5.0/src/iter/intersperse.rs",
    "vendor/rayon-1.5.0/src/iter/len.rs",
    "vendor/rayon-1.5.0/src/iter/map.rs",
    "vendor/rayon-1.5.0/src/iter/map_with.rs",
    "vendor/rayon-1.5.0/src/iter/mod.rs",
    "vendor/rayon-1.5.0/src/iter/multizip.rs",
    "vendor/rayon-1.5.0/src/iter/noop.rs",
    "vendor/rayon-1.5.0/src/iter/once.rs",
    "vendor/rayon-1.5.0/src/iter/panic_fuse.rs",
    "vendor/rayon-1.5.0/src/iter/par_bridge.rs",
    "vendor/rayon-1.5.0/src/iter/plumbing/mod.rs",
    "vendor/rayon-1.5.0/src/iter/positions.rs",
    "vendor/rayon-1.5.0/src/iter/product.rs",
    "vendor/rayon-1.5.0/src/iter/reduce.rs",
    "vendor/rayon-1.5.0/src/iter/repeat.rs",
    "vendor/rayon-1.5.0/src/iter/rev.rs",
    "vendor/rayon-1.5.0/src/iter/skip.rs",
    "vendor/rayon-1.5.0/src/iter/splitter.rs",
    "vendor/rayon-1.5.0/src/iter/step_by.rs",
    "vendor/rayon-1.5.0/src/iter/sum.rs",
    "vendor/rayon-1.5.0/src/iter/take.rs",
    "vendor/rayon-1.5.0/src/iter/test.rs",
    "vendor/rayon-1.5.0/src/iter/try_fold.rs",
    "vendor/rayon-1.5.0/src/iter/try_reduce.rs",
    "vendor/rayon-1.5.0/src/iter/try_reduce_with.rs",
    "vendor/rayon-1.5.0/src/iter/unzip.rs",
    "vendor/rayon-1.5.0/src/iter/update.rs",
    "vendor/rayon-1.5.0/src/iter/while_some.rs",
    "vendor/rayon-1.5.0/src/iter/zip.rs",
    "vendor/rayon-1.5.0/src/iter/zip_eq.rs",
    "vendor/rayon-1.5.0/src/lib.rs",
    "vendor/rayon-1.5.0/src/math.rs",
    "vendor/rayon-1.5.0/src/option.rs",
    "vendor/rayon-1.5.0/src/par_either.rs",
    "vendor/rayon-1.5.0/src/prelude.rs",
    "vendor/rayon-1.5.0/src/private.rs",
    "vendor/rayon-1.5.0/src/range.rs",
    "vendor/rayon-1.5.0/src/range_inclusive.rs",
    "vendor/rayon-1.5.0/src/result.rs",
    "vendor/rayon-1.5.0/src/slice/mergesort.rs",
    "vendor/rayon-1.5.0/src/slice/mod.rs",
    "vendor/rayon-1.5.0/src/slice/quicksort.rs",
    "vendor/rayon-1.5.0/src/slice/test.rs",
    "vendor/rayon-1.5.0/src/split_producer.rs",
    "vendor/rayon-1.5.0/src/str.rs",
    "vendor/rayon-1.5.0/src/string.rs",
    "vendor/rayon-1.5.0/src/vec.rs",
    ],
    deps = [],
    crate = "rayon",
    crate_root = "vendor/rayon-1.5.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:crossbeam-deque-0.8.0",
    "//generated/third-party/rust:either",
    "//generated/third-party/rust:rayon-core-1.9.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :rayon-1.5.0-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "rayon-1.5.0-build-script-build",
    srcs = ["vendor/rayon-1.5.0/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/rayon-1.5.0/build.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:autocfg-1.0.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "rayon-core-1.9.0",
    srcs = ["vendor/rayon-core-1.9.0/src/compile_fail/mod.rs",
    "vendor/rayon-core-1.9.0/src/compile_fail/quicksort_race1.rs",
    "vendor/rayon-core-1.9.0/src/compile_fail/quicksort_race2.rs",
    "vendor/rayon-core-1.9.0/src/compile_fail/quicksort_race3.rs",
    "vendor/rayon-core-1.9.0/src/compile_fail/rc_return.rs",
    "vendor/rayon-core-1.9.0/src/compile_fail/rc_upvar.rs",
    "vendor/rayon-core-1.9.0/src/compile_fail/scope_join_bad.rs",
    "vendor/rayon-core-1.9.0/src/job.rs",
    "vendor/rayon-core-1.9.0/src/join/mod.rs",
    "vendor/rayon-core-1.9.0/src/join/test.rs",
    "vendor/rayon-core-1.9.0/src/latch.rs",
    "vendor/rayon-core-1.9.0/src/lib.rs",
    "vendor/rayon-core-1.9.0/src/log.rs",
    "vendor/rayon-core-1.9.0/src/private.rs",
    "vendor/rayon-core-1.9.0/src/registry.rs",
    "vendor/rayon-core-1.9.0/src/scope/mod.rs",
    "vendor/rayon-core-1.9.0/src/scope/test.rs",
    "vendor/rayon-core-1.9.0/src/sleep/counters.rs",
    "vendor/rayon-core-1.9.0/src/sleep/mod.rs",
    "vendor/rayon-core-1.9.0/src/spawn/mod.rs",
    "vendor/rayon-core-1.9.0/src/spawn/test.rs",
    "vendor/rayon-core-1.9.0/src/test.rs",
    "vendor/rayon-core-1.9.0/src/thread_pool/mod.rs",
    "vendor/rayon-core-1.9.0/src/thread_pool/test.rs",
    "vendor/rayon-core-1.9.0/src/unwind.rs",
    "vendor/rayon-core-1.9.0/src/util.rs",
    ],
    deps = [],
    crate = "rayon_core",
    crate_root = "vendor/rayon-core-1.9.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:crossbeam-channel",
    "//generated/third-party/rust:crossbeam-deque-0.8.0",
    "//generated/third-party/rust:crossbeam-utils-0.8.0",
    "//generated/third-party/rust:lazy_static",
    "//generated/third-party/rust:num_cpus",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "ref-cast",
    srcs = ["vendor/ref-cast-1.0.6/src/layout.rs",
    "vendor/ref-cast-1.0.6/src/lib.rs",
    "vendor/ref-cast-1.0.6/src/trivial.rs",
    ],
    deps = [],
    crate = "ref_cast",
    crate_root = "vendor/ref-cast-1.0.6/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:ref-cast-impl-1.0.6",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :ref-cast-1.0.6-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "ref-cast-1.0.6-build-script-build",
    srcs = ["vendor/ref-cast-1.0.6/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/ref-cast-1.0.6/build.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "ref-cast-impl-1.0.6",
    srcs = ["vendor/ref-cast-impl-1.0.6/src/lib.rs",],
    deps = [],
    crate = "ref_cast_impl",
    crate_root = "vendor/ref-cast-impl-1.0.6/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "regex",
    srcs = ["vendor/regex-1.4.2/src/backtrack.rs",
    "vendor/regex-1.4.2/src/cache.rs",
    "vendor/regex-1.4.2/src/compile.rs",
    "vendor/regex-1.4.2/src/dfa.rs",
    "vendor/regex-1.4.2/src/error.rs",
    "vendor/regex-1.4.2/src/exec.rs",
    "vendor/regex-1.4.2/src/expand.rs",
    "vendor/regex-1.4.2/src/find_byte.rs",
    "vendor/regex-1.4.2/src/freqs.rs",
    "vendor/regex-1.4.2/src/input.rs",
    "vendor/regex-1.4.2/src/lib.rs",
    "vendor/regex-1.4.2/src/literal/imp.rs",
    "vendor/regex-1.4.2/src/literal/mod.rs",
    "vendor/regex-1.4.2/src/pattern.rs",
    "vendor/regex-1.4.2/src/pikevm.rs",
    "vendor/regex-1.4.2/src/prog.rs",
    "vendor/regex-1.4.2/src/re_builder.rs",
    "vendor/regex-1.4.2/src/re_bytes.rs",
    "vendor/regex-1.4.2/src/re_set.rs",
    "vendor/regex-1.4.2/src/re_trait.rs",
    "vendor/regex-1.4.2/src/re_unicode.rs",
    "vendor/regex-1.4.2/src/sparse.rs",
    "vendor/regex-1.4.2/src/utf8.rs",
    ],
    deps = [],
    crate = "regex",
    crate_root = "vendor/regex-1.4.2/src/lib.rs",
    edition = "2015",
    features = ["aho-corasick",
    "default",
    "memchr",
    "perf",
    "perf-cache",
    "perf-dfa",
    "perf-inline",
    "perf-literal",
    "std",
    "thread_local",
    "unicode",
    "unicode-age",
    "unicode-bool",
    "unicode-case",
    "unicode-gencat",
    "unicode-perl",
    "unicode-script",
    "unicode-segment",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:aho-corasick",
    "//generated/third-party/rust:memchr-2.4.1",
    "//generated/third-party/rust:regex-syntax-0.6.21",
    "//generated/third-party/rust:thread_local-1.0.1",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "regex-syntax-0.6.21",
    srcs = ["vendor/regex-syntax-0.6.21/src/ast/mod.rs",
    "vendor/regex-syntax-0.6.21/src/ast/parse.rs",
    "vendor/regex-syntax-0.6.21/src/ast/print.rs",
    "vendor/regex-syntax-0.6.21/src/ast/visitor.rs",
    "vendor/regex-syntax-0.6.21/src/either.rs",
    "vendor/regex-syntax-0.6.21/src/error.rs",
    "vendor/regex-syntax-0.6.21/src/hir/interval.rs",
    "vendor/regex-syntax-0.6.21/src/hir/literal/mod.rs",
    "vendor/regex-syntax-0.6.21/src/hir/mod.rs",
    "vendor/regex-syntax-0.6.21/src/hir/print.rs",
    "vendor/regex-syntax-0.6.21/src/hir/translate.rs",
    "vendor/regex-syntax-0.6.21/src/hir/visitor.rs",
    "vendor/regex-syntax-0.6.21/src/lib.rs",
    "vendor/regex-syntax-0.6.21/src/parser.rs",
    "vendor/regex-syntax-0.6.21/src/unicode.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/age.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/case_folding_simple.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/general_category.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/grapheme_cluster_break.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/mod.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/perl_decimal.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/perl_space.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/perl_word.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/property_bool.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/property_names.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/property_values.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/script.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/script_extension.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/sentence_break.rs",
    "vendor/regex-syntax-0.6.21/src/unicode_tables/word_break.rs",
    "vendor/regex-syntax-0.6.21/src/utf8.rs",
    ],
    deps = [],
    crate = "regex_syntax",
    crate_root = "vendor/regex-syntax-0.6.21/src/lib.rs",
    edition = "2015",
    features = ["default",
    "unicode",
    "unicode-age",
    "unicode-bool",
    "unicode-case",
    "unicode-gencat",
    "unicode-perl",
    "unicode-script",
    "unicode-segment",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "remove_dir_all-0.5.3",
    srcs = ["vendor/remove_dir_all-0.5.3/src/fs.rs",
    "vendor/remove_dir_all-0.5.3/src/lib.rs",
    ],
    deps = [],
    crate = "remove_dir_all",
    crate_root = "vendor/remove_dir_all-0.5.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "resolv-conf-0.7.0",
    srcs = ["vendor/resolv-conf-0.7.0/src/config.rs",
    "vendor/resolv-conf-0.7.0/src/grammar.rs",
    "vendor/resolv-conf-0.7.0/src/ip.rs",
    "vendor/resolv-conf-0.7.0/src/lib.rs",
    ],
    deps = [],
    crate = "resolv_conf",
    crate_root = "vendor/resolv-conf-0.7.0/src/lib.rs",
    edition = "2015",
    features = ["hostname",
    "system",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:hostname",
    "//generated/third-party/rust:quick-error-1.2.3",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "ring",
    srcs = ["vendor/ring-0.16.20/src/aead.rs",
    "vendor/ring-0.16.20/src/aead/aes.rs",
    "vendor/ring-0.16.20/src/aead/aes_gcm.rs",
    "vendor/ring-0.16.20/src/aead/block.rs",
    "vendor/ring-0.16.20/src/aead/chacha.rs",
    "vendor/ring-0.16.20/src/aead/chacha20_poly1305.rs",
    "vendor/ring-0.16.20/src/aead/chacha20_poly1305_openssh.rs",
    "vendor/ring-0.16.20/src/aead/counter.rs",
    "vendor/ring-0.16.20/src/aead/gcm.rs",
    "vendor/ring-0.16.20/src/aead/gcm/gcm_nohw.rs",
    "vendor/ring-0.16.20/src/aead/iv.rs",
    "vendor/ring-0.16.20/src/aead/nonce.rs",
    "vendor/ring-0.16.20/src/aead/poly1305.rs",
    "vendor/ring-0.16.20/src/aead/quic.rs",
    "vendor/ring-0.16.20/src/aead/shift.rs",
    "vendor/ring-0.16.20/src/agreement.rs",
    "vendor/ring-0.16.20/src/arithmetic.rs",
    "vendor/ring-0.16.20/src/arithmetic/bigint.rs",
    "vendor/ring-0.16.20/src/arithmetic/constant.rs",
    "vendor/ring-0.16.20/src/arithmetic/montgomery.rs",
    "vendor/ring-0.16.20/src/bits.rs",
    "vendor/ring-0.16.20/src/bssl.rs",
    "vendor/ring-0.16.20/src/c.rs",
    "vendor/ring-0.16.20/src/constant_time.rs",
    "vendor/ring-0.16.20/src/cpu.rs",
    "vendor/ring-0.16.20/src/data/alg-rsa-encryption.der",
    "vendor/ring-0.16.20/src/debug.rs",
    "vendor/ring-0.16.20/src/digest.rs",
    "vendor/ring-0.16.20/src/digest/sha1.rs",
    "vendor/ring-0.16.20/src/digest/sha2.rs",
    "vendor/ring-0.16.20/src/ec.rs",
    "vendor/ring-0.16.20/src/ec/curve25519.rs",
    "vendor/ring-0.16.20/src/ec/curve25519/ed25519.rs",
    "vendor/ring-0.16.20/src/ec/curve25519/ed25519/ed25519_pkcs8_v2_template.der",
    "vendor/ring-0.16.20/src/ec/curve25519/ed25519/signing.rs",
    "vendor/ring-0.16.20/src/ec/curve25519/ed25519/verification.rs",
    "vendor/ring-0.16.20/src/ec/curve25519/ops.rs",
    "vendor/ring-0.16.20/src/ec/curve25519/scalar.rs",
    "vendor/ring-0.16.20/src/ec/curve25519/x25519.rs",
    "vendor/ring-0.16.20/src/ec/keys.rs",
    "vendor/ring-0.16.20/src/ec/suite_b.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/curve.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/ecdh.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/ecdsa.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/ecdsa/digest_scalar.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/ecdsa/ecPublicKey_p256_pkcs8_v1_template.der",
    "vendor/ring-0.16.20/src/ec/suite_b/ecdsa/ecPublicKey_p384_pkcs8_v1_template.der",
    "vendor/ring-0.16.20/src/ec/suite_b/ecdsa/signing.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/ecdsa/verification.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/ops.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/ops/elem.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/ops/p256.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/ops/p384.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/private_key.rs",
    "vendor/ring-0.16.20/src/ec/suite_b/public_key.rs",
    "vendor/ring-0.16.20/src/endian.rs",
    "vendor/ring-0.16.20/src/error.rs",
    "vendor/ring-0.16.20/src/hkdf.rs",
    "vendor/ring-0.16.20/src/hmac.rs",
    "vendor/ring-0.16.20/src/io.rs",
    "vendor/ring-0.16.20/src/io/der.rs",
    "vendor/ring-0.16.20/src/io/der_writer.rs",
    "vendor/ring-0.16.20/src/io/positive.rs",
    "vendor/ring-0.16.20/src/io/writer.rs",
    "vendor/ring-0.16.20/src/lib.rs",
    "vendor/ring-0.16.20/src/limb.rs",
    "vendor/ring-0.16.20/src/pbkdf2.rs",
    "vendor/ring-0.16.20/src/pkcs8.rs",
    "vendor/ring-0.16.20/src/polyfill.rs",
    "vendor/ring-0.16.20/src/rand.rs",
    "vendor/ring-0.16.20/src/rsa.rs",
    "vendor/ring-0.16.20/src/rsa/padding.rs",
    "vendor/ring-0.16.20/src/rsa/signature_rsa_example_private_key.der",
    "vendor/ring-0.16.20/src/rsa/signing.rs",
    "vendor/ring-0.16.20/src/rsa/verification.rs",
    "vendor/ring-0.16.20/src/signature.rs",
    "vendor/ring-0.16.20/src/test.rs",
    ],
    deps = [],
    crate = "ring",
    crate_root = "vendor/ring-0.16.20/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "default",
    "dev_urandom_fallback",
    "once_cell",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:untrusted-0.7.1",
    "//generated/third-party/rust:libc",
    "//generated/third-party/rust:once_cell",
    "//generated/third-party/rust:ring-0.16.20-ring-c-asm-elf",
    "//generated/third-party/rust:spin-0.5.2",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_cxx_library(
    name = "ring-0.16.20-ring-c-asm-elf",
    srcs = ["vendor/ring-0.16.20/crypto/constant_time_test.c",
    "vendor/ring-0.16.20/crypto/cpu-intel.c",
    "vendor/ring-0.16.20/crypto/crypto.c",
    "vendor/ring-0.16.20/crypto/curve25519/curve25519.c",
    "vendor/ring-0.16.20/crypto/fipsmodule/aes/aes_nohw.c",
    "vendor/ring-0.16.20/crypto/fipsmodule/bn/montgomery.c",
    "vendor/ring-0.16.20/crypto/fipsmodule/bn/montgomery_inv.c",
    "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz.c",
    "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz256.c",
    "vendor/ring-0.16.20/crypto/fipsmodule/ec/gfp_p256.c",
    "vendor/ring-0.16.20/crypto/fipsmodule/ec/gfp_p384.c",
    "vendor/ring-0.16.20/crypto/limbs/limbs.c",
    "vendor/ring-0.16.20/crypto/mem.c",
    "vendor/ring-0.16.20/crypto/poly1305/poly1305.c",
    "vendor/ring-0.16.20/crypto/poly1305/poly1305_arm.c",
    "vendor/ring-0.16.20/crypto/poly1305/poly1305_vec.c",
    "vendor/ring-0.16.20/pregenerated/aesni-gcm-x86_64-elf.S",
    "vendor/ring-0.16.20/pregenerated/aesni-x86_64-elf.S",
    "vendor/ring-0.16.20/pregenerated/chacha-x86_64-elf.S",
    "vendor/ring-0.16.20/pregenerated/chacha20_poly1305_x86_64-elf.S",
    "vendor/ring-0.16.20/pregenerated/ghash-x86_64-elf.S",
    "vendor/ring-0.16.20/pregenerated/p256-x86_64-asm-elf.S",
    "vendor/ring-0.16.20/pregenerated/sha256-x86_64-elf.S",
    "vendor/ring-0.16.20/pregenerated/sha512-x86_64-elf.S",
    "vendor/ring-0.16.20/pregenerated/vpaes-x86_64-elf.S",
    "vendor/ring-0.16.20/pregenerated/x86_64-mont-elf.S",
    "vendor/ring-0.16.20/pregenerated/x86_64-mont5-elf.S",
    ],
    deps = [],
    headers = ["vendor/ring-0.16.20/crypto/curve25519/curve25519_tables.h",
    "vendor/ring-0.16.20/crypto/curve25519/internal.h",
    "vendor/ring-0.16.20/crypto/fipsmodule/bn/internal.h",
    "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz.h",
    "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz256.h",
    "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz256_table.inl",
    "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz384.h",
    "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz384.inl",
    "vendor/ring-0.16.20/crypto/internal.h",
    "vendor/ring-0.16.20/crypto/limbs/limbs.h",
    "vendor/ring-0.16.20/crypto/limbs/limbs.inl",
    "vendor/ring-0.16.20/crypto/poly1305/internal.h",
    "vendor/ring-0.16.20/include/GFp/aes.h",
    "vendor/ring-0.16.20/include/GFp/arm_arch.h",
    "vendor/ring-0.16.20/include/GFp/base.h",
    "vendor/ring-0.16.20/include/GFp/check.h",
    "vendor/ring-0.16.20/include/GFp/cpu.h",
    "vendor/ring-0.16.20/include/GFp/mem.h",
    "vendor/ring-0.16.20/include/GFp/poly1305.h",
    "vendor/ring-0.16.20/include/GFp/type_check.h",
    "vendor/ring-0.16.20/third_party/fiat/curve25519_32.h",
    "vendor/ring-0.16.20/third_party/fiat/curve25519_64.h",
    ],
    header_namespace = None,
    exported_headers = None,
)
third_party_rust_library(
    name = "rustc-demangle",
    srcs = ["vendor/rustc-demangle-0.1.20/src/legacy.rs",
    "vendor/rustc-demangle-0.1.20/src/lib.rs",
    "vendor/rustc-demangle-0.1.20/src/v0.rs",
    ],
    deps = [],
    crate = "rustc_demangle",
    crate_root = "vendor/rustc-demangle-0.1.20/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rustls",
    srcs = ["vendor/rustls-0.19.1/src/anchors.rs",
    "vendor/rustls-0.19.1/src/bs_debug.rs",
    "vendor/rustls-0.19.1/src/check.rs",
    "vendor/rustls-0.19.1/src/cipher.rs",
    "vendor/rustls-0.19.1/src/client/common.rs",
    "vendor/rustls-0.19.1/src/client/handy.rs",
    "vendor/rustls-0.19.1/src/client/hs.rs",
    "vendor/rustls-0.19.1/src/client/mod.rs",
    "vendor/rustls-0.19.1/src/client/tls12.rs",
    "vendor/rustls-0.19.1/src/client/tls13.rs",
    "vendor/rustls-0.19.1/src/error.rs",
    "vendor/rustls-0.19.1/src/hash_hs.rs",
    "vendor/rustls-0.19.1/src/key.rs",
    "vendor/rustls-0.19.1/src/key_schedule.rs",
    "vendor/rustls-0.19.1/src/keylog.rs",
    "vendor/rustls-0.19.1/src/lib.rs",
    "vendor/rustls-0.19.1/src/manual/features.rs",
    "vendor/rustls-0.19.1/src/manual/howto.rs",
    "vendor/rustls-0.19.1/src/manual/implvulns.rs",
    "vendor/rustls-0.19.1/src/manual/mod.rs",
    "vendor/rustls-0.19.1/src/manual/tlsvulns.rs",
    "vendor/rustls-0.19.1/src/msgs/alert.rs",
    "vendor/rustls-0.19.1/src/msgs/base.rs",
    "vendor/rustls-0.19.1/src/msgs/ccs.rs",
    "vendor/rustls-0.19.1/src/msgs/codec.rs",
    "vendor/rustls-0.19.1/src/msgs/deframer.rs",
    "vendor/rustls-0.19.1/src/msgs/enums.rs",
    "vendor/rustls-0.19.1/src/msgs/enums_test.rs",
    "vendor/rustls-0.19.1/src/msgs/fragmenter.rs",
    "vendor/rustls-0.19.1/src/msgs/handshake.rs",
    "vendor/rustls-0.19.1/src/msgs/handshake-test.1.bin",
    "vendor/rustls-0.19.1/src/msgs/handshake_test.rs",
    "vendor/rustls-0.19.1/src/msgs/hsjoiner.rs",
    "vendor/rustls-0.19.1/src/msgs/macros.rs",
    "vendor/rustls-0.19.1/src/msgs/message.rs",
    "vendor/rustls-0.19.1/src/msgs/message_test.rs",
    "vendor/rustls-0.19.1/src/msgs/mod.rs",
    "vendor/rustls-0.19.1/src/msgs/persist.rs",
    "vendor/rustls-0.19.1/src/msgs/persist_test.rs",
    "vendor/rustls-0.19.1/src/pemfile.rs",
    "vendor/rustls-0.19.1/src/prf.rs",
    "vendor/rustls-0.19.1/src/quic.rs",
    "vendor/rustls-0.19.1/src/rand.rs",
    "vendor/rustls-0.19.1/src/record_layer.rs",
    "vendor/rustls-0.19.1/src/server/common.rs",
    "vendor/rustls-0.19.1/src/server/handy.rs",
    "vendor/rustls-0.19.1/src/server/hs.rs",
    "vendor/rustls-0.19.1/src/server/mod.rs",
    "vendor/rustls-0.19.1/src/server/tls12.rs",
    "vendor/rustls-0.19.1/src/server/tls13.rs",
    "vendor/rustls-0.19.1/src/session.rs",
    "vendor/rustls-0.19.1/src/sign.rs",
    "vendor/rustls-0.19.1/src/stream.rs",
    "vendor/rustls-0.19.1/src/suites.rs",
    "vendor/rustls-0.19.1/src/testdata/cert-arstechnica.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-arstechnica.1.der",
    "vendor/rustls-0.19.1/src/testdata/cert-arstechnica.2.der",
    "vendor/rustls-0.19.1/src/testdata/cert-duckduckgo.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-duckduckgo.1.der",
    "vendor/rustls-0.19.1/src/testdata/cert-github.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-github.1.der",
    "vendor/rustls-0.19.1/src/testdata/cert-google.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-google.1.der",
    "vendor/rustls-0.19.1/src/testdata/cert-google.2.der",
    "vendor/rustls-0.19.1/src/testdata/cert-hn.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-hn.1.der",
    "vendor/rustls-0.19.1/src/testdata/cert-hn.2.der",
    "vendor/rustls-0.19.1/src/testdata/cert-reddit.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-reddit.1.der",
    "vendor/rustls-0.19.1/src/testdata/cert-rustlang.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-rustlang.1.der",
    "vendor/rustls-0.19.1/src/testdata/cert-rustlang.2.der",
    "vendor/rustls-0.19.1/src/testdata/cert-servo.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-servo.1.der",
    "vendor/rustls-0.19.1/src/testdata/cert-servo.2.der",
    "vendor/rustls-0.19.1/src/testdata/cert-stackoverflow.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-stackoverflow.1.der",
    "vendor/rustls-0.19.1/src/testdata/cert-twitter.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-twitter.1.der",
    "vendor/rustls-0.19.1/src/testdata/cert-wapo.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-wapo.1.der",
    "vendor/rustls-0.19.1/src/testdata/cert-wapo.2.der",
    "vendor/rustls-0.19.1/src/testdata/cert-wikipedia.0.der",
    "vendor/rustls-0.19.1/src/testdata/cert-wikipedia.1.der",
    "vendor/rustls-0.19.1/src/testdata/deframer-test.1.bin",
    "vendor/rustls-0.19.1/src/testdata/deframer-test.2.bin",
    "vendor/rustls-0.19.1/src/testdata/prf-result.1.bin",
    "vendor/rustls-0.19.1/src/testdata/prf-result.2.bin",
    "vendor/rustls-0.19.1/src/ticketer.rs",
    "vendor/rustls-0.19.1/src/vecbuf.rs",
    "vendor/rustls-0.19.1/src/verify.rs",
    "vendor/rustls-0.19.1/src/verifybench.rs",
    "vendor/rustls-0.19.1/src/x509.rs",
    ],
    deps = [],
    crate = "rustls",
    crate_root = "vendor/rustls-0.19.1/src/lib.rs",
    edition = "2018",
    features = ["dangerous_configuration",
    "default",
    "log",
    "logging",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:base64-0.13.0",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:ring",
    "//generated/third-party/rust:sct-0.6.0",
    "//generated/third-party/rust:webpki",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rustls-native-certs",
    srcs = ["vendor/rustls-native-certs-0.5.0/src/lib.rs",
    "vendor/rustls-native-certs-0.5.0/src/macos.rs",
    "vendor/rustls-native-certs-0.5.0/src/rustls.rs",
    "vendor/rustls-native-certs-0.5.0/src/unix.rs",
    "vendor/rustls-native-certs-0.5.0/src/windows.rs",
    ],
    deps = [],
    crate = "rustls_native_certs",
    crate_root = "vendor/rustls-native-certs-0.5.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "rustls",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rustls",
    "//generated/third-party/rust:openssl-probe-0.1.2",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "rustyline",
    srcs = ["vendor/rustyline-7.1.0/src/command.rs",
    "vendor/rustyline-7.1.0/src/completion.rs",
    "vendor/rustyline-7.1.0/src/config.rs",
    "vendor/rustyline-7.1.0/src/edit.rs",
    "vendor/rustyline-7.1.0/src/error.rs",
    "vendor/rustyline-7.1.0/src/highlight.rs",
    "vendor/rustyline-7.1.0/src/hint.rs",
    "vendor/rustyline-7.1.0/src/history.rs",
    "vendor/rustyline-7.1.0/src/keymap.rs",
    "vendor/rustyline-7.1.0/src/keys.rs",
    "vendor/rustyline-7.1.0/src/kill_ring.rs",
    "vendor/rustyline-7.1.0/src/layout.rs",
    "vendor/rustyline-7.1.0/src/lib.rs",
    "vendor/rustyline-7.1.0/src/line_buffer.rs",
    "vendor/rustyline-7.1.0/src/test/common.rs",
    "vendor/rustyline-7.1.0/src/test/emacs.rs",
    "vendor/rustyline-7.1.0/src/test/history.rs",
    "vendor/rustyline-7.1.0/src/test/mod.rs",
    "vendor/rustyline-7.1.0/src/test/vi_cmd.rs",
    "vendor/rustyline-7.1.0/src/test/vi_insert.rs",
    "vendor/rustyline-7.1.0/src/tty/mod.rs",
    "vendor/rustyline-7.1.0/src/tty/test.rs",
    "vendor/rustyline-7.1.0/src/tty/unix.rs",
    "vendor/rustyline-7.1.0/src/tty/windows.rs",
    "vendor/rustyline-7.1.0/src/undo.rs",
    "vendor/rustyline-7.1.0/src/validate.rs",
    ],
    deps = [],
    crate = "rustyline",
    crate_root = "vendor/rustyline-7.1.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "dirs-next",
    "with-dirs",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bitflags",
    "//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:dirs-next-2.0.0",
    "//generated/third-party/rust:fs2",
    "//generated/third-party/rust:libc",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:memchr-2.4.1",
    "//generated/third-party/rust:unicode-segmentation",
    "//generated/third-party/rust:unicode-width",
    "//generated/third-party/rust:nix-0.19.1",
    "//generated/third-party/rust:utf8parse-0.2.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "ryu-1.0.5",
    srcs = ["vendor/ryu-1.0.5/src/buffer/mod.rs",
    "vendor/ryu-1.0.5/src/common.rs",
    "vendor/ryu-1.0.5/src/d2s.rs",
    "vendor/ryu-1.0.5/src/d2s_full_table.rs",
    "vendor/ryu-1.0.5/src/d2s_intrinsics.rs",
    "vendor/ryu-1.0.5/src/d2s_small_table.rs",
    "vendor/ryu-1.0.5/src/digit_table.rs",
    "vendor/ryu-1.0.5/src/f2s.rs",
    "vendor/ryu-1.0.5/src/f2s_intrinsics.rs",
    "vendor/ryu-1.0.5/src/lib.rs",
    "vendor/ryu-1.0.5/src/pretty/exponent.rs",
    "vendor/ryu-1.0.5/src/pretty/mantissa.rs",
    "vendor/ryu-1.0.5/src/pretty/mod.rs",
    ],
    deps = [],
    crate = "ryu",
    crate_root = "vendor/ryu-1.0.5/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :ryu-1.0.5-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "ryu-1.0.5-build-script-build",
    srcs = ["vendor/ryu-1.0.5/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/ryu-1.0.5/build.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "safemem-0.3.3",
    srcs = ["vendor/safemem-0.3.3/src/lib.rs",],
    deps = [],
    crate = "safemem",
    crate_root = "vendor/safemem-0.3.3/src/lib.rs",
    edition = "2015",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "scoped-tls-1.0.0",
    srcs = ["vendor/scoped-tls-1.0.0/src/lib.rs",],
    deps = [],
    crate = "scoped_tls",
    crate_root = "vendor/scoped-tls-1.0.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "scopeguard",
    srcs = ["vendor/scopeguard-1.1.0/src/lib.rs",],
    deps = [],
    crate = "scopeguard",
    crate_root = "vendor/scopeguard-1.1.0/src/lib.rs",
    edition = "2015",
    features = ["default",
    "use_std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "scroll",
    srcs = ["vendor/scroll-0.10.1/src/ctx.rs",
    "vendor/scroll-0.10.1/src/endian.rs",
    "vendor/scroll-0.10.1/src/error.rs",
    "vendor/scroll-0.10.1/src/greater.rs",
    "vendor/scroll-0.10.1/src/leb128.rs",
    "vendor/scroll-0.10.1/src/lesser.rs",
    "vendor/scroll-0.10.1/src/lib.rs",
    "vendor/scroll-0.10.1/src/pread.rs",
    "vendor/scroll-0.10.1/src/pwrite.rs",
    ],
    deps = [],
    crate = "scroll",
    crate_root = "vendor/scroll-0.10.1/src/lib.rs",
    edition = "2018",
    features = ["default",
    "derive",
    "scroll_derive",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:scroll_derive-0.10.2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "scroll_derive-0.10.2",
    srcs = ["vendor/scroll_derive-0.10.2/src/lib.rs",],
    deps = [],
    crate = "scroll_derive",
    crate_root = "vendor/scroll_derive-0.10.2/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "sct-0.6.0",
    srcs = ["vendor/sct-0.6.0/src/lib.rs",
    "vendor/sct-0.6.0/src/testdata/ecdsa-prime256v1-pub.raw",
    "vendor/sct-0.6.0/src/testdata/ecdsa-secp384r1-pub.raw",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p256-badsigalg-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p256-basic-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p256-future-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p256-junk-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p256-short-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p256-version-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p256-wrongcert-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p256-wrongext-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p256-wrongid-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p256-wrongtime-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p384-basic-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p384-wrongcert-sct.bin",
    "vendor/sct-0.6.0/src/testdata/ecdsa_p384-wrongtime-sct.bin",
    "vendor/sct-0.6.0/src/testdata/google-cert.bin",
    "vendor/sct-0.6.0/src/testdata/google-pilot-pubkey.bin",
    "vendor/sct-0.6.0/src/testdata/google-sct0.bin",
    "vendor/sct-0.6.0/src/testdata/google-sct1.bin",
    "vendor/sct-0.6.0/src/testdata/rsa-2048-pub.raw",
    "vendor/sct-0.6.0/src/testdata/rsa-3072-pub.raw",
    "vendor/sct-0.6.0/src/testdata/rsa-4096-pub.raw",
    "vendor/sct-0.6.0/src/testdata/rsa2048-basic-sct.bin",
    "vendor/sct-0.6.0/src/testdata/rsa2048-wrongcert-sct.bin",
    "vendor/sct-0.6.0/src/testdata/rsa2048-wrongtime-sct.bin",
    "vendor/sct-0.6.0/src/testdata/rsa3072-basic-sct.bin",
    "vendor/sct-0.6.0/src/testdata/rsa3072-wrongcert-sct.bin",
    "vendor/sct-0.6.0/src/testdata/rsa3072-wrongtime-sct.bin",
    "vendor/sct-0.6.0/src/testdata/rsa4096-basic-sct.bin",
    "vendor/sct-0.6.0/src/testdata/rsa4096-wrongcert-sct.bin",
    "vendor/sct-0.6.0/src/testdata/rsa4096-wrongtime-sct.bin",
    "vendor/sct-0.6.0/src/testdata/symantec-log-pubkey.bin",
    "vendor/sct-0.6.0/src/tests.rs",
    "vendor/sct-0.6.0/src/tests_generated.rs",
    "vendor/sct-0.6.0/src/tests_google.rs",
    ],
    deps = [],
    crate = "sct",
    crate_root = "vendor/sct-0.6.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:ring",
    "//generated/third-party/rust:untrusted-0.7.1",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "serde",
    srcs = ["vendor/serde-1.0.126/src/de/ignored_any.rs",
    "vendor/serde-1.0.126/src/de/impls.rs",
    "vendor/serde-1.0.126/src/de/mod.rs",
    "vendor/serde-1.0.126/src/de/seed.rs",
    "vendor/serde-1.0.126/src/de/utf8.rs",
    "vendor/serde-1.0.126/src/de/value.rs",
    "vendor/serde-1.0.126/src/integer128.rs",
    "vendor/serde-1.0.126/src/lib.rs",
    "vendor/serde-1.0.126/src/macros.rs",
    "vendor/serde-1.0.126/src/private/de.rs",
    "vendor/serde-1.0.126/src/private/doc.rs",
    "vendor/serde-1.0.126/src/private/mod.rs",
    "vendor/serde-1.0.126/src/private/ser.rs",
    "vendor/serde-1.0.126/src/private/size_hint.rs",
    "vendor/serde-1.0.126/src/ser/fmt.rs",
    "vendor/serde-1.0.126/src/ser/impls.rs",
    "vendor/serde-1.0.126/src/ser/impossible.rs",
    "vendor/serde-1.0.126/src/ser/mod.rs",
    "vendor/serde-1.0.126/src/std_error.rs",
    ],
    deps = [],
    crate = "serde",
    crate_root = "vendor/serde-1.0.126/src/lib.rs",
    edition = "2015",
    features = ["alloc",
    "default",
    "derive",
    "rc",
    "serde_derive",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:serde_derive",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :serde-1.0.126-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "serde-1.0.126-build-script-build",
    srcs = ["vendor/serde-1.0.126/build.rs",
    "vendor/serde-1.0.126/src/de/ignored_any.rs",
    "vendor/serde-1.0.126/src/de/impls.rs",
    "vendor/serde-1.0.126/src/de/mod.rs",
    "vendor/serde-1.0.126/src/de/seed.rs",
    "vendor/serde-1.0.126/src/de/utf8.rs",
    "vendor/serde-1.0.126/src/de/value.rs",
    "vendor/serde-1.0.126/src/integer128.rs",
    "vendor/serde-1.0.126/src/lib.rs",
    "vendor/serde-1.0.126/src/macros.rs",
    "vendor/serde-1.0.126/src/private/de.rs",
    "vendor/serde-1.0.126/src/private/doc.rs",
    "vendor/serde-1.0.126/src/private/mod.rs",
    "vendor/serde-1.0.126/src/private/ser.rs",
    "vendor/serde-1.0.126/src/private/size_hint.rs",
    "vendor/serde-1.0.126/src/ser/fmt.rs",
    "vendor/serde-1.0.126/src/ser/impls.rs",
    "vendor/serde-1.0.126/src/ser/impossible.rs",
    "vendor/serde-1.0.126/src/ser/mod.rs",
    "vendor/serde-1.0.126/src/std_error.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/serde-1.0.126/build.rs",
    edition = "2015",
    features = ["alloc",
    "default",
    "derive",
    "rc",
    "serde_derive",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "serde_derive",
    srcs = ["vendor/serde_derive-1.0.126/src/bound.rs",
    "vendor/serde_derive-1.0.126/src/de.rs",
    "vendor/serde_derive-1.0.126/src/dummy.rs",
    "vendor/serde_derive-1.0.126/src/fragment.rs",
    "vendor/serde_derive-1.0.126/src/internals/ast.rs",
    "vendor/serde_derive-1.0.126/src/internals/attr.rs",
    "vendor/serde_derive-1.0.126/src/internals/case.rs",
    "vendor/serde_derive-1.0.126/src/internals/check.rs",
    "vendor/serde_derive-1.0.126/src/internals/ctxt.rs",
    "vendor/serde_derive-1.0.126/src/internals/mod.rs",
    "vendor/serde_derive-1.0.126/src/internals/receiver.rs",
    "vendor/serde_derive-1.0.126/src/internals/respan.rs",
    "vendor/serde_derive-1.0.126/src/internals/symbol.rs",
    "vendor/serde_derive-1.0.126/src/lib.rs",
    "vendor/serde_derive-1.0.126/src/pretend.rs",
    "vendor/serde_derive-1.0.126/src/ser.rs",
    "vendor/serde_derive-1.0.126/src/try.rs",
    ],
    deps = [],
    crate = "serde_derive",
    crate_root = "vendor/serde_derive-1.0.126/src/lib.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :serde_derive-1.0.126-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_binary(
    name = "serde_derive-1.0.126-build-script-build",
    srcs = ["vendor/serde_derive-1.0.126/build.rs",
    "vendor/serde_derive-1.0.126/src/bound.rs",
    "vendor/serde_derive-1.0.126/src/de.rs",
    "vendor/serde_derive-1.0.126/src/dummy.rs",
    "vendor/serde_derive-1.0.126/src/fragment.rs",
    "vendor/serde_derive-1.0.126/src/internals/ast.rs",
    "vendor/serde_derive-1.0.126/src/internals/attr.rs",
    "vendor/serde_derive-1.0.126/src/internals/case.rs",
    "vendor/serde_derive-1.0.126/src/internals/check.rs",
    "vendor/serde_derive-1.0.126/src/internals/ctxt.rs",
    "vendor/serde_derive-1.0.126/src/internals/mod.rs",
    "vendor/serde_derive-1.0.126/src/internals/receiver.rs",
    "vendor/serde_derive-1.0.126/src/internals/respan.rs",
    "vendor/serde_derive-1.0.126/src/internals/symbol.rs",
    "vendor/serde_derive-1.0.126/src/lib.rs",
    "vendor/serde_derive-1.0.126/src/pretend.rs",
    "vendor/serde_derive-1.0.126/src/ser.rs",
    "vendor/serde_derive-1.0.126/src/try.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/serde_derive-1.0.126/build.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "serde_json",
    srcs = ["vendor/serde_json-1.0.59/src/de.rs",
    "vendor/serde_json-1.0.59/src/error.rs",
    "vendor/serde_json-1.0.59/src/features_check/mod.rs",
    "vendor/serde_json-1.0.59/src/io/core.rs",
    "vendor/serde_json-1.0.59/src/io/mod.rs",
    "vendor/serde_json-1.0.59/src/iter.rs",
    "vendor/serde_json-1.0.59/src/lexical/algorithm.rs",
    "vendor/serde_json-1.0.59/src/lexical/bhcomp.rs",
    "vendor/serde_json-1.0.59/src/lexical/bignum.rs",
    "vendor/serde_json-1.0.59/src/lexical/cached.rs",
    "vendor/serde_json-1.0.59/src/lexical/cached_float80.rs",
    "vendor/serde_json-1.0.59/src/lexical/digit.rs",
    "vendor/serde_json-1.0.59/src/lexical/errors.rs",
    "vendor/serde_json-1.0.59/src/lexical/exponent.rs",
    "vendor/serde_json-1.0.59/src/lexical/float.rs",
    "vendor/serde_json-1.0.59/src/lexical/large_powers.rs",
    "vendor/serde_json-1.0.59/src/lexical/large_powers32.rs",
    "vendor/serde_json-1.0.59/src/lexical/large_powers64.rs",
    "vendor/serde_json-1.0.59/src/lexical/math.rs",
    "vendor/serde_json-1.0.59/src/lexical/mod.rs",
    "vendor/serde_json-1.0.59/src/lexical/num.rs",
    "vendor/serde_json-1.0.59/src/lexical/parse.rs",
    "vendor/serde_json-1.0.59/src/lexical/rounding.rs",
    "vendor/serde_json-1.0.59/src/lexical/shift.rs",
    "vendor/serde_json-1.0.59/src/lexical/small_powers.rs",
    "vendor/serde_json-1.0.59/src/lib.rs",
    "vendor/serde_json-1.0.59/src/macros.rs",
    "vendor/serde_json-1.0.59/src/map.rs",
    "vendor/serde_json-1.0.59/src/number.rs",
    "vendor/serde_json-1.0.59/src/raw.rs",
    "vendor/serde_json-1.0.59/src/read.rs",
    "vendor/serde_json-1.0.59/src/ser.rs",
    "vendor/serde_json-1.0.59/src/value/de.rs",
    "vendor/serde_json-1.0.59/src/value/from.rs",
    "vendor/serde_json-1.0.59/src/value/index.rs",
    "vendor/serde_json-1.0.59/src/value/mod.rs",
    "vendor/serde_json-1.0.59/src/value/partial_eq.rs",
    "vendor/serde_json-1.0.59/src/value/ser.rs",
    ],
    deps = [],
    crate = "serde_json",
    crate_root = "vendor/serde_json-1.0.59/src/lib.rs",
    edition = "2018",
    features = ["default",
    "float_roundtrip",
    "raw_value",
    "std",
    "unbounded_depth",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:indexmap",
    "//generated/third-party/rust:itoa-0.4.6",
    "//generated/third-party/rust:ryu-1.0.5",
    "//generated/third-party/rust:serde",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "--cfg=limb_width_64",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "serde_test",
    srcs = ["vendor/serde_test-1.0.116/src/assert.rs",
    "vendor/serde_test-1.0.116/src/configure.rs",
    "vendor/serde_test-1.0.116/src/de.rs",
    "vendor/serde_test-1.0.116/src/error.rs",
    "vendor/serde_test-1.0.116/src/lib.rs",
    "vendor/serde_test-1.0.116/src/ser.rs",
    "vendor/serde_test-1.0.116/src/token.rs",
    ],
    deps = [],
    crate = "serde_test",
    crate_root = "vendor/serde_test-1.0.116/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:serde",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "serde_urlencoded-0.7.0",
    srcs = ["vendor/serde_urlencoded-0.7.0/src/de.rs",
    "vendor/serde_urlencoded-0.7.0/src/lib.rs",
    "vendor/serde_urlencoded-0.7.0/src/ser/key.rs",
    "vendor/serde_urlencoded-0.7.0/src/ser/mod.rs",
    "vendor/serde_urlencoded-0.7.0/src/ser/pair.rs",
    "vendor/serde_urlencoded-0.7.0/src/ser/part.rs",
    "vendor/serde_urlencoded-0.7.0/src/ser/value.rs",
    ],
    deps = [],
    crate = "serde_urlencoded",
    crate_root = "vendor/serde_urlencoded-0.7.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:form_urlencoded-1.0.0",
    "//generated/third-party/rust:itoa-0.4.6",
    "//generated/third-party/rust:ryu-1.0.5",
    "//generated/third-party/rust:serde",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "sha-1",
    srcs = ["vendor/sha-1-0.8.2/src/aarch64.rs",
    "vendor/sha-1-0.8.2/src/consts.rs",
    "vendor/sha-1-0.8.2/src/lib.rs",
    "vendor/sha-1-0.8.2/src/utils.rs",
    ],
    deps = [],
    crate = "sha1",
    crate_root = "vendor/sha-1-0.8.2/src/lib.rs",
    edition = "2015",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:block-buffer-0.7.3",
    "//generated/third-party/rust:digest",
    "//generated/third-party/rust:fake-simd-0.1.2",
    "//generated/third-party/rust:opaque-debug-0.2.3",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "sha-1-0.9.4",
    srcs = ["vendor/sha-1-0.9.4/src/compress.rs",
    "vendor/sha-1-0.9.4/src/compress/aarch64.rs",
    "vendor/sha-1-0.9.4/src/compress/soft.rs",
    "vendor/sha-1-0.9.4/src/compress/x86.rs",
    "vendor/sha-1-0.9.4/src/consts.rs",
    "vendor/sha-1-0.9.4/src/lib.rs",
    ],
    deps = [],
    crate = "sha1",
    crate_root = "vendor/sha-1-0.9.4/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:block-buffer-0.9.0",
    "//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:digest-0.9.0",
    "//generated/third-party/rust:opaque-debug-0.3.0",
    "//generated/third-party/rust:cpuid-bool-0.1.2",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "sha2",
    srcs = ["vendor/sha2-0.8.2/src/aarch64.rs",
    "vendor/sha2-0.8.2/src/consts.rs",
    "vendor/sha2-0.8.2/src/lib.rs",
    "vendor/sha2-0.8.2/src/sha256.rs",
    "vendor/sha2-0.8.2/src/sha256_utils.rs",
    "vendor/sha2-0.8.2/src/sha512.rs",
    "vendor/sha2-0.8.2/src/sha512_utils.rs",
    ],
    deps = [],
    crate = "sha2",
    crate_root = "vendor/sha2-0.8.2/src/lib.rs",
    edition = "2015",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:block-buffer-0.7.3",
    "//generated/third-party/rust:digest",
    "//generated/third-party/rust:fake-simd-0.1.2",
    "//generated/third-party/rust:opaque-debug-0.2.3",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "signal-hook-registry-1.4.0",
    srcs = ["vendor/signal-hook-registry-1.4.0/src/half_lock.rs",
    "vendor/signal-hook-registry-1.4.0/src/lib.rs",
    ],
    deps = [],
    crate = "signal_hook_registry",
    crate_root = "vendor/signal-hook-registry-1.4.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "siphasher",
    srcs = ["vendor/siphasher-0.3.3/src/lib.rs",
    "vendor/siphasher-0.3.3/src/sip.rs",
    "vendor/siphasher-0.3.3/src/sip128.rs",
    "vendor/siphasher-0.3.3/src/tests.rs",
    "vendor/siphasher-0.3.3/src/tests128.rs",
    ],
    deps = [],
    crate = "siphasher",
    crate_root = "vendor/siphasher-0.3.3/src/lib.rs",
    edition = "2015",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "slab-0.4.2",
    srcs = ["vendor/slab-0.4.2/src/lib.rs",],
    deps = [],
    crate = "slab",
    crate_root = "vendor/slab-0.4.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "slog",
    srcs = ["vendor/slog-2.5.2/src/key/dynamic.rs",
    "vendor/slog-2.5.2/src/key/dynamic_nostd.rs",
    "vendor/slog-2.5.2/src/key/mod.rs",
    "vendor/slog-2.5.2/src/key/static.rs",
    "vendor/slog-2.5.2/src/lib.rs",
    "vendor/slog-2.5.2/src/tests.rs",
    ],
    deps = [],
    crate = "slog",
    crate_root = "vendor/slog-2.5.2/src/lib.rs",
    edition = "2015",
    features = ["default",
    "erased-serde",
    "max_level_trace",
    "nested-values",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:erased-serde",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :slog-2.5.2-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "slog-2.5.2-build-script-build",
    srcs = ["vendor/slog-2.5.2/build.rs",
    "vendor/slog-2.5.2/examples/common/mod.rs",
    "vendor/slog-2.5.2/examples/named.rs",
    "vendor/slog-2.5.2/examples/singlethread.rs",
    "vendor/slog-2.5.2/examples/struct-log-self.rs",
    "vendor/slog-2.5.2/src/key/dynamic.rs",
    "vendor/slog-2.5.2/src/key/dynamic_nostd.rs",
    "vendor/slog-2.5.2/src/key/mod.rs",
    "vendor/slog-2.5.2/src/key/static.rs",
    "vendor/slog-2.5.2/src/lib.rs",
    "vendor/slog-2.5.2/src/tests.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/slog-2.5.2/build.rs",
    edition = "2015",
    features = ["default",
    "erased-serde",
    "max_level_trace",
    "nested-values",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "slog-async",
    srcs = ["vendor/slog-async-2.5.0/lib.rs",],
    deps = [],
    crate = "slog_async",
    crate_root = "vendor/slog-async-2.5.0/lib.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:crossbeam-channel-0.4.4",
    "//generated/third-party/rust:slog",
    "//generated/third-party/rust:take_mut",
    "//generated/third-party/rust:thread_local-1.0.1",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "slog-term",
    srcs = ["vendor/slog-term-2.6.0/src/lib.rs",],
    deps = [],
    crate = "slog_term",
    crate_root = "vendor/slog-term-2.6.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:atty",
    "//generated/third-party/rust:chrono",
    "//generated/third-party/rust:slog",
    "//generated/third-party/rust:term-0.6.1",
    "//generated/third-party/rust:thread_local-1.0.1",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "smallvec",
    srcs = ["vendor/smallvec-1.6.1/src/lib.rs",
    "vendor/smallvec-1.6.1/src/specialization.rs",
    "vendor/smallvec-1.6.1/src/tests.rs",
    ],
    deps = [],
    crate = "smallvec",
    crate_root = "vendor/smallvec-1.6.1/src/lib.rs",
    edition = "2018",
    features = ["const_generics",
    "serde",
    "specialization",
    "union",
    "write",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:serde",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "socket2-0.4.0",
    srcs = ["vendor/socket2-0.4.0/src/lib.rs",
    "vendor/socket2-0.4.0/src/sockaddr.rs",
    "vendor/socket2-0.4.0/src/socket.rs",
    "vendor/socket2-0.4.0/src/sockref.rs",
    "vendor/socket2-0.4.0/src/sys/unix.rs",
    "vendor/socket2-0.4.0/src/sys/windows.rs",
    ],
    deps = [],
    crate = "socket2",
    crate_root = "vendor/socket2-0.4.0/src/lib.rs",
    edition = "2018",
    features = ["all",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "spin-0.5.2",
    srcs = ["vendor/spin-0.5.2/src/lib.rs",
    "vendor/spin-0.5.2/src/mutex.rs",
    "vendor/spin-0.5.2/src/once.rs",
    "vendor/spin-0.5.2/src/rw_lock.rs",
    ],
    deps = [],
    crate = "spin",
    crate_root = "vendor/spin-0.5.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "stable_deref_trait",
    srcs = ["vendor/stable_deref_trait-1.2.0/src/lib.rs",],
    deps = [],
    crate = "stable_deref_trait",
    crate_root = "vendor/stable_deref_trait-1.2.0/src/lib.rs",
    edition = "2015",
    features = ["alloc",
    "default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "static_assertions",
    srcs = ["vendor/static_assertions-1.1.0/src/assert_cfg.rs",
    "vendor/static_assertions-1.1.0/src/assert_eq_align.rs",
    "vendor/static_assertions-1.1.0/src/assert_eq_size.rs",
    "vendor/static_assertions-1.1.0/src/assert_fields.rs",
    "vendor/static_assertions-1.1.0/src/assert_impl.rs",
    "vendor/static_assertions-1.1.0/src/assert_obj_safe.rs",
    "vendor/static_assertions-1.1.0/src/assert_trait.rs",
    "vendor/static_assertions-1.1.0/src/assert_type.rs",
    "vendor/static_assertions-1.1.0/src/const_assert.rs",
    "vendor/static_assertions-1.1.0/src/lib.rs",
    ],
    deps = [],
    crate = "static_assertions",
    crate_root = "vendor/static_assertions-1.1.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "string_cache",
    srcs = ["vendor/string_cache-0.8.0/src/atom.rs",
    "vendor/string_cache-0.8.0/src/dynamic_set.rs",
    "vendor/string_cache-0.8.0/src/lib.rs",
    "vendor/string_cache-0.8.0/src/static_sets.rs",
    "vendor/string_cache-0.8.0/src/trivial_impls.rs",
    ],
    deps = [],
    crate = "string_cache",
    crate_root = "vendor/string_cache-0.8.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:lazy_static",
    "//generated/third-party/rust:new_debug_unreachable-1.0.4",
    "//generated/third-party/rust:phf_shared-0.8.0",
    "//generated/third-party/rust:precomputed-hash-0.1.1",
    "//generated/third-party/rust:serde",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "strsim",
    srcs = ["vendor/strsim-0.10.0/src/lib.rs",],
    deps = [],
    crate = "strsim",
    crate_root = "vendor/strsim-0.10.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "strsim-0.8.0",
    srcs = ["vendor/strsim-0.8.0/src/lib.rs",],
    deps = [],
    crate = "strsim",
    crate_root = "vendor/strsim-0.8.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "strsim-0.9.3",
    srcs = ["vendor/strsim-0.9.3/src/lib.rs",],
    deps = [],
    crate = "strsim",
    crate_root = "vendor/strsim-0.9.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "structopt",
    srcs = ["vendor/structopt-0.3.21/src/lib.rs",],
    deps = [],
    crate = "structopt",
    crate_root = "vendor/structopt-0.3.21/src/lib.rs",
    edition = "2018",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:clap",
    "//generated/third-party/rust:lazy_static",
    "//generated/third-party/rust:structopt-derive",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "structopt-derive",
    srcs = ["vendor/structopt-derive-0.4.14/src/attrs.rs",
    "vendor/structopt-derive-0.4.14/src/doc_comments.rs",
    "vendor/structopt-derive-0.4.14/src/lib.rs",
    "vendor/structopt-derive-0.4.14/src/parse.rs",
    "vendor/structopt-derive-0.4.14/src/spanned.rs",
    "vendor/structopt-derive-0.4.14/src/ty.rs",
    ],
    deps = [],
    crate = "structopt_derive",
    crate_root = "vendor/structopt-derive-0.4.14/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:heck",
    "//generated/third-party/rust:proc-macro-error",
    "//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "syn",
    srcs = ["vendor/syn-1.0.75/src/attr.rs",
    "vendor/syn-1.0.75/src/await.rs",
    "vendor/syn-1.0.75/src/bigint.rs",
    "vendor/syn-1.0.75/src/buffer.rs",
    "vendor/syn-1.0.75/src/custom_keyword.rs",
    "vendor/syn-1.0.75/src/custom_punctuation.rs",
    "vendor/syn-1.0.75/src/data.rs",
    "vendor/syn-1.0.75/src/derive.rs",
    "vendor/syn-1.0.75/src/discouraged.rs",
    "vendor/syn-1.0.75/src/error.rs",
    "vendor/syn-1.0.75/src/export.rs",
    "vendor/syn-1.0.75/src/expr.rs",
    "vendor/syn-1.0.75/src/ext.rs",
    "vendor/syn-1.0.75/src/file.rs",
    "vendor/syn-1.0.75/src/gen/clone.rs",
    "vendor/syn-1.0.75/src/gen/debug.rs",
    "vendor/syn-1.0.75/src/gen/eq.rs",
    "vendor/syn-1.0.75/src/gen/fold.rs",
    "vendor/syn-1.0.75/src/gen/hash.rs",
    "vendor/syn-1.0.75/src/gen/visit.rs",
    "vendor/syn-1.0.75/src/gen/visit_mut.rs",
    "vendor/syn-1.0.75/src/gen_helper.rs",
    "vendor/syn-1.0.75/src/generics.rs",
    "vendor/syn-1.0.75/src/group.rs",
    "vendor/syn-1.0.75/src/ident.rs",
    "vendor/syn-1.0.75/src/item.rs",
    "vendor/syn-1.0.75/src/lib.rs",
    "vendor/syn-1.0.75/src/lifetime.rs",
    "vendor/syn-1.0.75/src/lit.rs",
    "vendor/syn-1.0.75/src/lookahead.rs",
    "vendor/syn-1.0.75/src/mac.rs",
    "vendor/syn-1.0.75/src/macros.rs",
    "vendor/syn-1.0.75/src/op.rs",
    "vendor/syn-1.0.75/src/parse.rs",
    "vendor/syn-1.0.75/src/parse_macro_input.rs",
    "vendor/syn-1.0.75/src/parse_quote.rs",
    "vendor/syn-1.0.75/src/pat.rs",
    "vendor/syn-1.0.75/src/path.rs",
    "vendor/syn-1.0.75/src/print.rs",
    "vendor/syn-1.0.75/src/punctuated.rs",
    "vendor/syn-1.0.75/src/reserved.rs",
    "vendor/syn-1.0.75/src/sealed.rs",
    "vendor/syn-1.0.75/src/span.rs",
    "vendor/syn-1.0.75/src/spanned.rs",
    "vendor/syn-1.0.75/src/stmt.rs",
    "vendor/syn-1.0.75/src/thread.rs",
    "vendor/syn-1.0.75/src/token.rs",
    "vendor/syn-1.0.75/src/tt.rs",
    "vendor/syn-1.0.75/src/ty.rs",
    "vendor/syn-1.0.75/src/verbatim.rs",
    "vendor/syn-1.0.75/src/whitespace.rs",
    ],
    deps = [],
    crate = "syn",
    crate_root = "vendor/syn-1.0.75/src/lib.rs",
    edition = "2018",
    features = ["clone-impls",
    "default",
    "derive",
    "extra-traits",
    "fold",
    "full",
    "parsing",
    "printing",
    "proc-macro",
    "quote",
    "visit",
    "visit-mut",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:unicode-xid-0.2.1",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :syn-1.0.75-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "syn-1.0.75-build-script-build",
    srcs = ["vendor/syn-1.0.75/build.rs",],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/syn-1.0.75/build.rs",
    edition = "2018",
    features = ["clone-impls",
    "default",
    "derive",
    "extra-traits",
    "fold",
    "full",
    "parsing",
    "printing",
    "proc-macro",
    "quote",
    "visit",
    "visit-mut",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "synstructure",
    srcs = ["vendor/synstructure-0.12.5/src/lib.rs",
    "vendor/synstructure-0.12.5/src/macros.rs",
    ],
    deps = [],
    crate = "synstructure",
    crate_root = "vendor/synstructure-0.12.5/src/lib.rs",
    edition = "2018",
    features = ["default",
    "proc-macro",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    "//generated/third-party/rust:unicode-xid-0.2.1",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "take_mut",
    srcs = ["vendor/take_mut-0.2.2/src/lib.rs",
    "vendor/take_mut-0.2.2/src/scoped.rs",
    ],
    deps = [],
    crate = "take_mut",
    crate_root = "vendor/take_mut-0.2.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tempfile",
    srcs = ["vendor/tempfile-3.1.0/src/dir.rs",
    "vendor/tempfile-3.1.0/src/error.rs",
    "vendor/tempfile-3.1.0/src/file/imp/mod.rs",
    "vendor/tempfile-3.1.0/src/file/imp/other.rs",
    "vendor/tempfile-3.1.0/src/file/imp/unix.rs",
    "vendor/tempfile-3.1.0/src/file/imp/windows.rs",
    "vendor/tempfile-3.1.0/src/file/mod.rs",
    "vendor/tempfile-3.1.0/src/lib.rs",
    "vendor/tempfile-3.1.0/src/spooled.rs",
    "vendor/tempfile-3.1.0/src/util.rs",
    ],
    deps = [],
    crate = "tempfile",
    crate_root = "vendor/tempfile-3.1.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if",
    "//generated/third-party/rust:rand",
    "//generated/third-party/rust:remove_dir_all-0.5.3",
    "//generated/third-party/rust:libc",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "term-0.5.2",
    srcs = ["vendor/term-0.5.2/src/lib.rs",
    "vendor/term-0.5.2/src/terminfo/mod.rs",
    "vendor/term-0.5.2/src/terminfo/parm.rs",
    "vendor/term-0.5.2/src/terminfo/parser/compiled.rs",
    "vendor/term-0.5.2/src/terminfo/parser/names.rs",
    "vendor/term-0.5.2/src/terminfo/searcher.rs",
    "vendor/term-0.5.2/src/win.rs",
    ],
    deps = [],
    crate = "term",
    crate_root = "vendor/term-0.5.2/src/lib.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:byteorder",
    "//generated/third-party/rust:dirs-1.0.5",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "term-0.6.1",
    srcs = ["vendor/term-0.6.1/src/lib.rs",
    "vendor/term-0.6.1/src/terminfo/mod.rs",
    "vendor/term-0.6.1/src/terminfo/parm.rs",
    "vendor/term-0.6.1/src/terminfo/parser/compiled.rs",
    "vendor/term-0.6.1/src/terminfo/parser/names.rs",
    "vendor/term-0.6.1/src/terminfo/searcher.rs",
    "vendor/term-0.6.1/src/win.rs",
    ],
    deps = [],
    crate = "term",
    crate_root = "vendor/term-0.6.1/src/lib.rs",
    edition = "2018",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:dirs",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "term_size",
    srcs = ["vendor/term_size-0.3.2/src/lib.rs",
    "vendor/term_size-0.3.2/src/platform/mod.rs",
    "vendor/term_size-0.3.2/src/platform/unix.rs",
    "vendor/term_size-0.3.2/src/platform/unsupported.rs",
    "vendor/term_size-0.3.2/src/platform/windows.rs",
    ],
    deps = [],
    crate = "term_size",
    crate_root = "vendor/term_size-0.3.2/src/lib.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "termcolor",
    srcs = ["vendor/termcolor-1.1.2/src/lib.rs",],
    deps = [],
    crate = "termcolor",
    crate_root = "vendor/termcolor-1.1.2/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "textwrap",
    srcs = ["vendor/textwrap-0.11.0/src/indentation.rs",
    "vendor/textwrap-0.11.0/src/lib.rs",
    "vendor/textwrap-0.11.0/src/splitting.rs",
    ],
    deps = [],
    crate = "textwrap",
    crate_root = "vendor/textwrap-0.11.0/src/lib.rs",
    edition = "2015",
    features = ["term_size",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:term_size",
    "//generated/third-party/rust:unicode-width",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "thiserror",
    srcs = ["vendor/thiserror-1.0.29/src/aserror.rs",
    "vendor/thiserror-1.0.29/src/display.rs",
    "vendor/thiserror-1.0.29/src/lib.rs",
    ],
    deps = [],
    crate = "thiserror",
    crate_root = "vendor/thiserror-1.0.29/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:thiserror-impl-1.0.29",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "thiserror-impl-1.0.29",
    srcs = ["vendor/thiserror-impl-1.0.29/src/ast.rs",
    "vendor/thiserror-impl-1.0.29/src/attr.rs",
    "vendor/thiserror-impl-1.0.29/src/expand.rs",
    "vendor/thiserror-impl-1.0.29/src/fmt.rs",
    "vendor/thiserror-impl-1.0.29/src/generics.rs",
    "vendor/thiserror-impl-1.0.29/src/lib.rs",
    "vendor/thiserror-impl-1.0.29/src/prop.rs",
    "vendor/thiserror-impl-1.0.29/src/valid.rs",
    ],
    deps = [],
    crate = "thiserror_impl",
    crate_root = "vendor/thiserror-impl-1.0.29/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "thread_local-1.0.1",
    srcs = ["vendor/thread_local-1.0.1/src/cached.rs",
    "vendor/thread_local-1.0.1/src/lib.rs",
    "vendor/thread_local-1.0.1/src/thread_id.rs",
    "vendor/thread_local-1.0.1/src/unreachable.rs",
    ],
    deps = [],
    crate = "thread_local",
    crate_root = "vendor/thread_local-1.0.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:lazy_static",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "time-01",
    srcs = ["vendor/time-0.1.44/src/display.rs",
    "vendor/time-0.1.44/src/duration.rs",
    "vendor/time-0.1.44/src/lib.rs",
    "vendor/time-0.1.44/src/parse.rs",
    "vendor/time-0.1.44/src/sys.rs",
    ],
    deps = [],
    crate = "time",
    crate_root = "vendor/time-0.1.44/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tinyvec-0.3.4",
    srcs = ["vendor/tinyvec-0.3.4/src/array.rs",
    "vendor/tinyvec-0.3.4/src/arrayvec.rs",
    "vendor/tinyvec-0.3.4/src/lib.rs",
    "vendor/tinyvec-0.3.4/src/tinyvec.rs",
    ],
    deps = [],
    crate = "tinyvec",
    crate_root = "vendor/tinyvec-0.3.4/src/lib.rs",
    edition = "2018",
    features = ["alloc",
    "default",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tokio",
    srcs = ["vendor/tokio-1.10.1/src/blocking.rs",
    "vendor/tokio-1.10.1/src/coop.rs",
    "vendor/tokio-1.10.1/src/doc/mod.rs",
    "vendor/tokio-1.10.1/src/doc/os.rs",
    "vendor/tokio-1.10.1/src/doc/winapi.rs",
    "vendor/tokio-1.10.1/src/fs/canonicalize.rs",
    "vendor/tokio-1.10.1/src/fs/copy.rs",
    "vendor/tokio-1.10.1/src/fs/create_dir.rs",
    "vendor/tokio-1.10.1/src/fs/create_dir_all.rs",
    "vendor/tokio-1.10.1/src/fs/dir_builder.rs",
    "vendor/tokio-1.10.1/src/fs/file.rs",
    "vendor/tokio-1.10.1/src/fs/file/tests.rs",
    "vendor/tokio-1.10.1/src/fs/hard_link.rs",
    "vendor/tokio-1.10.1/src/fs/metadata.rs",
    "vendor/tokio-1.10.1/src/fs/mocks.rs",
    "vendor/tokio-1.10.1/src/fs/mod.rs",
    "vendor/tokio-1.10.1/src/fs/open_options.rs",
    "vendor/tokio-1.10.1/src/fs/open_options/mock_open_options.rs",
    "vendor/tokio-1.10.1/src/fs/read.rs",
    "vendor/tokio-1.10.1/src/fs/read_dir.rs",
    "vendor/tokio-1.10.1/src/fs/read_link.rs",
    "vendor/tokio-1.10.1/src/fs/read_to_string.rs",
    "vendor/tokio-1.10.1/src/fs/remove_dir.rs",
    "vendor/tokio-1.10.1/src/fs/remove_dir_all.rs",
    "vendor/tokio-1.10.1/src/fs/remove_file.rs",
    "vendor/tokio-1.10.1/src/fs/rename.rs",
    "vendor/tokio-1.10.1/src/fs/set_permissions.rs",
    "vendor/tokio-1.10.1/src/fs/symlink.rs",
    "vendor/tokio-1.10.1/src/fs/symlink_dir.rs",
    "vendor/tokio-1.10.1/src/fs/symlink_file.rs",
    "vendor/tokio-1.10.1/src/fs/symlink_metadata.rs",
    "vendor/tokio-1.10.1/src/fs/write.rs",
    "vendor/tokio-1.10.1/src/future/block_on.rs",
    "vendor/tokio-1.10.1/src/future/maybe_done.rs",
    "vendor/tokio-1.10.1/src/future/mod.rs",
    "vendor/tokio-1.10.1/src/future/poll_fn.rs",
    "vendor/tokio-1.10.1/src/future/ready.rs",
    "vendor/tokio-1.10.1/src/future/trace.rs",
    "vendor/tokio-1.10.1/src/future/try_join.rs",
    "vendor/tokio-1.10.1/src/io/async_buf_read.rs",
    "vendor/tokio-1.10.1/src/io/async_fd.rs",
    "vendor/tokio-1.10.1/src/io/async_read.rs",
    "vendor/tokio-1.10.1/src/io/async_seek.rs",
    "vendor/tokio-1.10.1/src/io/async_write.rs",
    "vendor/tokio-1.10.1/src/io/blocking.rs",
    "vendor/tokio-1.10.1/src/io/driver/interest.rs",
    "vendor/tokio-1.10.1/src/io/driver/mod.rs",
    "vendor/tokio-1.10.1/src/io/driver/platform.rs",
    "vendor/tokio-1.10.1/src/io/driver/ready.rs",
    "vendor/tokio-1.10.1/src/io/driver/registration.rs",
    "vendor/tokio-1.10.1/src/io/driver/scheduled_io.rs",
    "vendor/tokio-1.10.1/src/io/mod.rs",
    "vendor/tokio-1.10.1/src/io/poll_evented.rs",
    "vendor/tokio-1.10.1/src/io/read_buf.rs",
    "vendor/tokio-1.10.1/src/io/seek.rs",
    "vendor/tokio-1.10.1/src/io/split.rs",
    "vendor/tokio-1.10.1/src/io/stderr.rs",
    "vendor/tokio-1.10.1/src/io/stdin.rs",
    "vendor/tokio-1.10.1/src/io/stdio_common.rs",
    "vendor/tokio-1.10.1/src/io/stdout.rs",
    "vendor/tokio-1.10.1/src/io/util/async_buf_read_ext.rs",
    "vendor/tokio-1.10.1/src/io/util/async_read_ext.rs",
    "vendor/tokio-1.10.1/src/io/util/async_seek_ext.rs",
    "vendor/tokio-1.10.1/src/io/util/async_write_ext.rs",
    "vendor/tokio-1.10.1/src/io/util/buf_reader.rs",
    "vendor/tokio-1.10.1/src/io/util/buf_stream.rs",
    "vendor/tokio-1.10.1/src/io/util/buf_writer.rs",
    "vendor/tokio-1.10.1/src/io/util/chain.rs",
    "vendor/tokio-1.10.1/src/io/util/copy.rs",
    "vendor/tokio-1.10.1/src/io/util/copy_bidirectional.rs",
    "vendor/tokio-1.10.1/src/io/util/copy_buf.rs",
    "vendor/tokio-1.10.1/src/io/util/empty.rs",
    "vendor/tokio-1.10.1/src/io/util/fill_buf.rs",
    "vendor/tokio-1.10.1/src/io/util/flush.rs",
    "vendor/tokio-1.10.1/src/io/util/lines.rs",
    "vendor/tokio-1.10.1/src/io/util/mem.rs",
    "vendor/tokio-1.10.1/src/io/util/mod.rs",
    "vendor/tokio-1.10.1/src/io/util/read.rs",
    "vendor/tokio-1.10.1/src/io/util/read_buf.rs",
    "vendor/tokio-1.10.1/src/io/util/read_exact.rs",
    "vendor/tokio-1.10.1/src/io/util/read_int.rs",
    "vendor/tokio-1.10.1/src/io/util/read_line.rs",
    "vendor/tokio-1.10.1/src/io/util/read_to_end.rs",
    "vendor/tokio-1.10.1/src/io/util/read_to_string.rs",
    "vendor/tokio-1.10.1/src/io/util/read_until.rs",
    "vendor/tokio-1.10.1/src/io/util/repeat.rs",
    "vendor/tokio-1.10.1/src/io/util/shutdown.rs",
    "vendor/tokio-1.10.1/src/io/util/sink.rs",
    "vendor/tokio-1.10.1/src/io/util/split.rs",
    "vendor/tokio-1.10.1/src/io/util/take.rs",
    "vendor/tokio-1.10.1/src/io/util/vec_with_initialized.rs",
    "vendor/tokio-1.10.1/src/io/util/write.rs",
    "vendor/tokio-1.10.1/src/io/util/write_all.rs",
    "vendor/tokio-1.10.1/src/io/util/write_all_buf.rs",
    "vendor/tokio-1.10.1/src/io/util/write_buf.rs",
    "vendor/tokio-1.10.1/src/io/util/write_int.rs",
    "vendor/tokio-1.10.1/src/io/util/write_vectored.rs",
    "vendor/tokio-1.10.1/src/lib.rs",
    "vendor/tokio-1.10.1/src/loom/mocked.rs",
    "vendor/tokio-1.10.1/src/loom/mod.rs",
    "vendor/tokio-1.10.1/src/loom/std/atomic_ptr.rs",
    "vendor/tokio-1.10.1/src/loom/std/atomic_u16.rs",
    "vendor/tokio-1.10.1/src/loom/std/atomic_u32.rs",
    "vendor/tokio-1.10.1/src/loom/std/atomic_u64.rs",
    "vendor/tokio-1.10.1/src/loom/std/atomic_u8.rs",
    "vendor/tokio-1.10.1/src/loom/std/atomic_usize.rs",
    "vendor/tokio-1.10.1/src/loom/std/mod.rs",
    "vendor/tokio-1.10.1/src/loom/std/mutex.rs",
    "vendor/tokio-1.10.1/src/loom/std/parking_lot.rs",
    "vendor/tokio-1.10.1/src/loom/std/unsafe_cell.rs",
    "vendor/tokio-1.10.1/src/macros/cfg.rs",
    "vendor/tokio-1.10.1/src/macros/join.rs",
    "vendor/tokio-1.10.1/src/macros/loom.rs",
    "vendor/tokio-1.10.1/src/macros/mod.rs",
    "vendor/tokio-1.10.1/src/macros/pin.rs",
    "vendor/tokio-1.10.1/src/macros/ready.rs",
    "vendor/tokio-1.10.1/src/macros/scoped_tls.rs",
    "vendor/tokio-1.10.1/src/macros/select.rs",
    "vendor/tokio-1.10.1/src/macros/support.rs",
    "vendor/tokio-1.10.1/src/macros/thread_local.rs",
    "vendor/tokio-1.10.1/src/macros/try_join.rs",
    "vendor/tokio-1.10.1/src/net/addr.rs",
    "vendor/tokio-1.10.1/src/net/lookup_host.rs",
    "vendor/tokio-1.10.1/src/net/mod.rs",
    "vendor/tokio-1.10.1/src/net/tcp/listener.rs",
    "vendor/tokio-1.10.1/src/net/tcp/mod.rs",
    "vendor/tokio-1.10.1/src/net/tcp/socket.rs",
    "vendor/tokio-1.10.1/src/net/tcp/split.rs",
    "vendor/tokio-1.10.1/src/net/tcp/split_owned.rs",
    "vendor/tokio-1.10.1/src/net/tcp/stream.rs",
    "vendor/tokio-1.10.1/src/net/udp.rs",
    "vendor/tokio-1.10.1/src/net/unix/datagram/mod.rs",
    "vendor/tokio-1.10.1/src/net/unix/datagram/socket.rs",
    "vendor/tokio-1.10.1/src/net/unix/listener.rs",
    "vendor/tokio-1.10.1/src/net/unix/mod.rs",
    "vendor/tokio-1.10.1/src/net/unix/socketaddr.rs",
    "vendor/tokio-1.10.1/src/net/unix/split.rs",
    "vendor/tokio-1.10.1/src/net/unix/split_owned.rs",
    "vendor/tokio-1.10.1/src/net/unix/stream.rs",
    "vendor/tokio-1.10.1/src/net/unix/ucred.rs",
    "vendor/tokio-1.10.1/src/net/windows/mod.rs",
    "vendor/tokio-1.10.1/src/net/windows/named_pipe.rs",
    "vendor/tokio-1.10.1/src/park/either.rs",
    "vendor/tokio-1.10.1/src/park/mod.rs",
    "vendor/tokio-1.10.1/src/park/thread.rs",
    "vendor/tokio-1.10.1/src/process/kill.rs",
    "vendor/tokio-1.10.1/src/process/mod.rs",
    "vendor/tokio-1.10.1/src/process/unix/driver.rs",
    "vendor/tokio-1.10.1/src/process/unix/mod.rs",
    "vendor/tokio-1.10.1/src/process/unix/orphan.rs",
    "vendor/tokio-1.10.1/src/process/unix/reap.rs",
    "vendor/tokio-1.10.1/src/process/windows.rs",
    "vendor/tokio-1.10.1/src/runtime/basic_scheduler.rs",
    "vendor/tokio-1.10.1/src/runtime/blocking/mod.rs",
    "vendor/tokio-1.10.1/src/runtime/blocking/pool.rs",
    "vendor/tokio-1.10.1/src/runtime/blocking/schedule.rs",
    "vendor/tokio-1.10.1/src/runtime/blocking/shutdown.rs",
    "vendor/tokio-1.10.1/src/runtime/blocking/task.rs",
    "vendor/tokio-1.10.1/src/runtime/builder.rs",
    "vendor/tokio-1.10.1/src/runtime/context.rs",
    "vendor/tokio-1.10.1/src/runtime/driver.rs",
    "vendor/tokio-1.10.1/src/runtime/enter.rs",
    "vendor/tokio-1.10.1/src/runtime/handle.rs",
    "vendor/tokio-1.10.1/src/runtime/mod.rs",
    "vendor/tokio-1.10.1/src/runtime/park.rs",
    "vendor/tokio-1.10.1/src/runtime/queue.rs",
    "vendor/tokio-1.10.1/src/runtime/spawner.rs",
    "vendor/tokio-1.10.1/src/runtime/task/core.rs",
    "vendor/tokio-1.10.1/src/runtime/task/error.rs",
    "vendor/tokio-1.10.1/src/runtime/task/harness.rs",
    "vendor/tokio-1.10.1/src/runtime/task/inject.rs",
    "vendor/tokio-1.10.1/src/runtime/task/join.rs",
    "vendor/tokio-1.10.1/src/runtime/task/list.rs",
    "vendor/tokio-1.10.1/src/runtime/task/mod.rs",
    "vendor/tokio-1.10.1/src/runtime/task/raw.rs",
    "vendor/tokio-1.10.1/src/runtime/task/state.rs",
    "vendor/tokio-1.10.1/src/runtime/task/waker.rs",
    "vendor/tokio-1.10.1/src/runtime/tests/loom_basic_scheduler.rs",
    "vendor/tokio-1.10.1/src/runtime/tests/loom_blocking.rs",
    "vendor/tokio-1.10.1/src/runtime/tests/loom_local.rs",
    "vendor/tokio-1.10.1/src/runtime/tests/loom_oneshot.rs",
    "vendor/tokio-1.10.1/src/runtime/tests/loom_pool.rs",
    "vendor/tokio-1.10.1/src/runtime/tests/loom_queue.rs",
    "vendor/tokio-1.10.1/src/runtime/tests/loom_shutdown_join.rs",
    "vendor/tokio-1.10.1/src/runtime/tests/mod.rs",
    "vendor/tokio-1.10.1/src/runtime/tests/queue.rs",
    "vendor/tokio-1.10.1/src/runtime/tests/task.rs",
    "vendor/tokio-1.10.1/src/runtime/tests/task_combinations.rs",
    "vendor/tokio-1.10.1/src/runtime/thread_pool/atomic_cell.rs",
    "vendor/tokio-1.10.1/src/runtime/thread_pool/idle.rs",
    "vendor/tokio-1.10.1/src/runtime/thread_pool/mod.rs",
    "vendor/tokio-1.10.1/src/runtime/thread_pool/worker.rs",
    "vendor/tokio-1.10.1/src/signal/ctrl_c.rs",
    "vendor/tokio-1.10.1/src/signal/mod.rs",
    "vendor/tokio-1.10.1/src/signal/registry.rs",
    "vendor/tokio-1.10.1/src/signal/reusable_box.rs",
    "vendor/tokio-1.10.1/src/signal/unix.rs",
    "vendor/tokio-1.10.1/src/signal/unix/driver.rs",
    "vendor/tokio-1.10.1/src/signal/windows.rs",
    "vendor/tokio-1.10.1/src/signal/windows/stub.rs",
    "vendor/tokio-1.10.1/src/signal/windows/sys.rs",
    "vendor/tokio-1.10.1/src/sync/barrier.rs",
    "vendor/tokio-1.10.1/src/sync/batch_semaphore.rs",
    "vendor/tokio-1.10.1/src/sync/broadcast.rs",
    "vendor/tokio-1.10.1/src/sync/mod.rs",
    "vendor/tokio-1.10.1/src/sync/mpsc/block.rs",
    "vendor/tokio-1.10.1/src/sync/mpsc/bounded.rs",
    "vendor/tokio-1.10.1/src/sync/mpsc/chan.rs",
    "vendor/tokio-1.10.1/src/sync/mpsc/error.rs",
    "vendor/tokio-1.10.1/src/sync/mpsc/list.rs",
    "vendor/tokio-1.10.1/src/sync/mpsc/mod.rs",
    "vendor/tokio-1.10.1/src/sync/mpsc/unbounded.rs",
    "vendor/tokio-1.10.1/src/sync/mutex.rs",
    "vendor/tokio-1.10.1/src/sync/notify.rs",
    "vendor/tokio-1.10.1/src/sync/once_cell.rs",
    "vendor/tokio-1.10.1/src/sync/oneshot.rs",
    "vendor/tokio-1.10.1/src/sync/rwlock.rs",
    "vendor/tokio-1.10.1/src/sync/rwlock/owned_read_guard.rs",
    "vendor/tokio-1.10.1/src/sync/rwlock/owned_write_guard.rs",
    "vendor/tokio-1.10.1/src/sync/rwlock/owned_write_guard_mapped.rs",
    "vendor/tokio-1.10.1/src/sync/rwlock/read_guard.rs",
    "vendor/tokio-1.10.1/src/sync/rwlock/write_guard.rs",
    "vendor/tokio-1.10.1/src/sync/rwlock/write_guard_mapped.rs",
    "vendor/tokio-1.10.1/src/sync/semaphore.rs",
    "vendor/tokio-1.10.1/src/sync/task/atomic_waker.rs",
    "vendor/tokio-1.10.1/src/sync/task/mod.rs",
    "vendor/tokio-1.10.1/src/sync/tests/atomic_waker.rs",
    "vendor/tokio-1.10.1/src/sync/tests/loom_atomic_waker.rs",
    "vendor/tokio-1.10.1/src/sync/tests/loom_broadcast.rs",
    "vendor/tokio-1.10.1/src/sync/tests/loom_list.rs",
    "vendor/tokio-1.10.1/src/sync/tests/loom_mpsc.rs",
    "vendor/tokio-1.10.1/src/sync/tests/loom_notify.rs",
    "vendor/tokio-1.10.1/src/sync/tests/loom_oneshot.rs",
    "vendor/tokio-1.10.1/src/sync/tests/loom_rwlock.rs",
    "vendor/tokio-1.10.1/src/sync/tests/loom_semaphore_batch.rs",
    "vendor/tokio-1.10.1/src/sync/tests/loom_watch.rs",
    "vendor/tokio-1.10.1/src/sync/tests/mod.rs",
    "vendor/tokio-1.10.1/src/sync/tests/semaphore_batch.rs",
    "vendor/tokio-1.10.1/src/sync/watch.rs",
    "vendor/tokio-1.10.1/src/task/blocking.rs",
    "vendor/tokio-1.10.1/src/task/builder.rs",
    "vendor/tokio-1.10.1/src/task/local.rs",
    "vendor/tokio-1.10.1/src/task/mod.rs",
    "vendor/tokio-1.10.1/src/task/spawn.rs",
    "vendor/tokio-1.10.1/src/task/task_local.rs",
    "vendor/tokio-1.10.1/src/task/unconstrained.rs",
    "vendor/tokio-1.10.1/src/task/yield_now.rs",
    "vendor/tokio-1.10.1/src/time/clock.rs",
    "vendor/tokio-1.10.1/src/time/driver/entry.rs",
    "vendor/tokio-1.10.1/src/time/driver/handle.rs",
    "vendor/tokio-1.10.1/src/time/driver/mod.rs",
    "vendor/tokio-1.10.1/src/time/driver/sleep.rs",
    "vendor/tokio-1.10.1/src/time/driver/tests/mod.rs",
    "vendor/tokio-1.10.1/src/time/driver/wheel/level.rs",
    "vendor/tokio-1.10.1/src/time/driver/wheel/mod.rs",
    "vendor/tokio-1.10.1/src/time/driver/wheel/stack.rs",
    "vendor/tokio-1.10.1/src/time/error.rs",
    "vendor/tokio-1.10.1/src/time/instant.rs",
    "vendor/tokio-1.10.1/src/time/interval.rs",
    "vendor/tokio-1.10.1/src/time/mod.rs",
    "vendor/tokio-1.10.1/src/time/tests/mod.rs",
    "vendor/tokio-1.10.1/src/time/tests/test_sleep.rs",
    "vendor/tokio-1.10.1/src/time/timeout.rs",
    "vendor/tokio-1.10.1/src/util/bit.rs",
    "vendor/tokio-1.10.1/src/util/error.rs",
    "vendor/tokio-1.10.1/src/util/linked_list.rs",
    "vendor/tokio-1.10.1/src/util/mod.rs",
    "vendor/tokio-1.10.1/src/util/pad.rs",
    "vendor/tokio-1.10.1/src/util/rand.rs",
    "vendor/tokio-1.10.1/src/util/slab.rs",
    "vendor/tokio-1.10.1/src/util/sync_wrapper.rs",
    "vendor/tokio-1.10.1/src/util/trace.rs",
    "vendor/tokio-1.10.1/src/util/try_lock.rs",
    "vendor/tokio-1.10.1/src/util/vec_deque_cell.rs",
    "vendor/tokio-1.10.1/src/util/wake.rs",
    ],
    deps = [],
    crate = "tokio",
    crate_root = "vendor/tokio-1.10.1/src/lib.rs",
    edition = "2018",
    features = ["bytes",
    "default",
    "fs",
    "full",
    "io-std",
    "io-util",
    "libc",
    "macros",
    "memchr",
    "mio",
    "net",
    "num_cpus",
    "once_cell",
    "parking_lot",
    "process",
    "rt",
    "rt-multi-thread",
    "signal",
    "signal-hook-registry",
    "sync",
    "test-util",
    "time",
    "tokio-macros",
    "tokio_track_caller",
    "winapi",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bytes",
    "//generated/third-party/rust:memchr-2.4.1",
    "//generated/third-party/rust:mio",
    "//generated/third-party/rust:num_cpus",
    "//generated/third-party/rust:once_cell",
    "//generated/third-party/rust:parking_lot-0.11.0",
    "//generated/third-party/rust:pin-project-lite-0.2.6",
    "//generated/third-party/rust:tokio-macros-1.1.0",
    "//generated/third-party/rust:libc",
    "//generated/third-party/rust:signal-hook-registry-1.4.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tokio-02",
    srcs = ["vendor/tokio-0.2.25/src/coop.rs",
    "vendor/tokio-0.2.25/src/fs/canonicalize.rs",
    "vendor/tokio-0.2.25/src/fs/copy.rs",
    "vendor/tokio-0.2.25/src/fs/create_dir.rs",
    "vendor/tokio-0.2.25/src/fs/create_dir_all.rs",
    "vendor/tokio-0.2.25/src/fs/dir_builder.rs",
    "vendor/tokio-0.2.25/src/fs/file.rs",
    "vendor/tokio-0.2.25/src/fs/hard_link.rs",
    "vendor/tokio-0.2.25/src/fs/metadata.rs",
    "vendor/tokio-0.2.25/src/fs/mod.rs",
    "vendor/tokio-0.2.25/src/fs/open_options.rs",
    "vendor/tokio-0.2.25/src/fs/os/mod.rs",
    "vendor/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs",
    "vendor/tokio-0.2.25/src/fs/os/unix/mod.rs",
    "vendor/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs",
    "vendor/tokio-0.2.25/src/fs/os/unix/symlink.rs",
    "vendor/tokio-0.2.25/src/fs/os/windows/mod.rs",
    "vendor/tokio-0.2.25/src/fs/os/windows/symlink_dir.rs",
    "vendor/tokio-0.2.25/src/fs/os/windows/symlink_file.rs",
    "vendor/tokio-0.2.25/src/fs/read.rs",
    "vendor/tokio-0.2.25/src/fs/read_dir.rs",
    "vendor/tokio-0.2.25/src/fs/read_link.rs",
    "vendor/tokio-0.2.25/src/fs/read_to_string.rs",
    "vendor/tokio-0.2.25/src/fs/remove_dir.rs",
    "vendor/tokio-0.2.25/src/fs/remove_dir_all.rs",
    "vendor/tokio-0.2.25/src/fs/remove_file.rs",
    "vendor/tokio-0.2.25/src/fs/rename.rs",
    "vendor/tokio-0.2.25/src/fs/set_permissions.rs",
    "vendor/tokio-0.2.25/src/fs/symlink_metadata.rs",
    "vendor/tokio-0.2.25/src/fs/write.rs",
    "vendor/tokio-0.2.25/src/future/maybe_done.rs",
    "vendor/tokio-0.2.25/src/future/mod.rs",
    "vendor/tokio-0.2.25/src/future/pending.rs",
    "vendor/tokio-0.2.25/src/future/poll_fn.rs",
    "vendor/tokio-0.2.25/src/future/ready.rs",
    "vendor/tokio-0.2.25/src/future/try_join.rs",
    "vendor/tokio-0.2.25/src/io/async_buf_read.rs",
    "vendor/tokio-0.2.25/src/io/async_read.rs",
    "vendor/tokio-0.2.25/src/io/async_seek.rs",
    "vendor/tokio-0.2.25/src/io/async_write.rs",
    "vendor/tokio-0.2.25/src/io/blocking.rs",
    "vendor/tokio-0.2.25/src/io/driver/mod.rs",
    "vendor/tokio-0.2.25/src/io/driver/platform.rs",
    "vendor/tokio-0.2.25/src/io/driver/scheduled_io.rs",
    "vendor/tokio-0.2.25/src/io/mod.rs",
    "vendor/tokio-0.2.25/src/io/poll_evented.rs",
    "vendor/tokio-0.2.25/src/io/registration.rs",
    "vendor/tokio-0.2.25/src/io/seek.rs",
    "vendor/tokio-0.2.25/src/io/split.rs",
    "vendor/tokio-0.2.25/src/io/stderr.rs",
    "vendor/tokio-0.2.25/src/io/stdin.rs",
    "vendor/tokio-0.2.25/src/io/stdout.rs",
    "vendor/tokio-0.2.25/src/io/util/async_buf_read_ext.rs",
    "vendor/tokio-0.2.25/src/io/util/async_read_ext.rs",
    "vendor/tokio-0.2.25/src/io/util/async_seek_ext.rs",
    "vendor/tokio-0.2.25/src/io/util/async_write_ext.rs",
    "vendor/tokio-0.2.25/src/io/util/buf_reader.rs",
    "vendor/tokio-0.2.25/src/io/util/buf_stream.rs",
    "vendor/tokio-0.2.25/src/io/util/buf_writer.rs",
    "vendor/tokio-0.2.25/src/io/util/chain.rs",
    "vendor/tokio-0.2.25/src/io/util/copy.rs",
    "vendor/tokio-0.2.25/src/io/util/empty.rs",
    "vendor/tokio-0.2.25/src/io/util/flush.rs",
    "vendor/tokio-0.2.25/src/io/util/lines.rs",
    "vendor/tokio-0.2.25/src/io/util/mem.rs",
    "vendor/tokio-0.2.25/src/io/util/mod.rs",
    "vendor/tokio-0.2.25/src/io/util/read.rs",
    "vendor/tokio-0.2.25/src/io/util/read_buf.rs",
    "vendor/tokio-0.2.25/src/io/util/read_exact.rs",
    "vendor/tokio-0.2.25/src/io/util/read_int.rs",
    "vendor/tokio-0.2.25/src/io/util/read_line.rs",
    "vendor/tokio-0.2.25/src/io/util/read_to_end.rs",
    "vendor/tokio-0.2.25/src/io/util/read_to_string.rs",
    "vendor/tokio-0.2.25/src/io/util/read_until.rs",
    "vendor/tokio-0.2.25/src/io/util/reader_stream.rs",
    "vendor/tokio-0.2.25/src/io/util/repeat.rs",
    "vendor/tokio-0.2.25/src/io/util/shutdown.rs",
    "vendor/tokio-0.2.25/src/io/util/sink.rs",
    "vendor/tokio-0.2.25/src/io/util/split.rs",
    "vendor/tokio-0.2.25/src/io/util/stream_reader.rs",
    "vendor/tokio-0.2.25/src/io/util/take.rs",
    "vendor/tokio-0.2.25/src/io/util/write.rs",
    "vendor/tokio-0.2.25/src/io/util/write_all.rs",
    "vendor/tokio-0.2.25/src/io/util/write_buf.rs",
    "vendor/tokio-0.2.25/src/io/util/write_int.rs",
    "vendor/tokio-0.2.25/src/lib.rs",
    "vendor/tokio-0.2.25/src/loom/mocked.rs",
    "vendor/tokio-0.2.25/src/loom/mod.rs",
    "vendor/tokio-0.2.25/src/loom/std/atomic_ptr.rs",
    "vendor/tokio-0.2.25/src/loom/std/atomic_u16.rs",
    "vendor/tokio-0.2.25/src/loom/std/atomic_u32.rs",
    "vendor/tokio-0.2.25/src/loom/std/atomic_u64.rs",
    "vendor/tokio-0.2.25/src/loom/std/atomic_u8.rs",
    "vendor/tokio-0.2.25/src/loom/std/atomic_usize.rs",
    "vendor/tokio-0.2.25/src/loom/std/mod.rs",
    "vendor/tokio-0.2.25/src/loom/std/parking_lot.rs",
    "vendor/tokio-0.2.25/src/loom/std/unsafe_cell.rs",
    "vendor/tokio-0.2.25/src/macros/cfg.rs",
    "vendor/tokio-0.2.25/src/macros/join.rs",
    "vendor/tokio-0.2.25/src/macros/loom.rs",
    "vendor/tokio-0.2.25/src/macros/mod.rs",
    "vendor/tokio-0.2.25/src/macros/pin.rs",
    "vendor/tokio-0.2.25/src/macros/ready.rs",
    "vendor/tokio-0.2.25/src/macros/scoped_tls.rs",
    "vendor/tokio-0.2.25/src/macros/select.rs",
    "vendor/tokio-0.2.25/src/macros/support.rs",
    "vendor/tokio-0.2.25/src/macros/thread_local.rs",
    "vendor/tokio-0.2.25/src/macros/try_join.rs",
    "vendor/tokio-0.2.25/src/net/addr.rs",
    "vendor/tokio-0.2.25/src/net/lookup_host.rs",
    "vendor/tokio-0.2.25/src/net/mod.rs",
    "vendor/tokio-0.2.25/src/net/tcp/incoming.rs",
    "vendor/tokio-0.2.25/src/net/tcp/listener.rs",
    "vendor/tokio-0.2.25/src/net/tcp/mod.rs",
    "vendor/tokio-0.2.25/src/net/tcp/split.rs",
    "vendor/tokio-0.2.25/src/net/tcp/split_owned.rs",
    "vendor/tokio-0.2.25/src/net/tcp/stream.rs",
    "vendor/tokio-0.2.25/src/net/udp/mod.rs",
    "vendor/tokio-0.2.25/src/net/udp/socket.rs",
    "vendor/tokio-0.2.25/src/net/udp/split.rs",
    "vendor/tokio-0.2.25/src/net/unix/datagram/mod.rs",
    "vendor/tokio-0.2.25/src/net/unix/datagram/socket.rs",
    "vendor/tokio-0.2.25/src/net/unix/datagram/split.rs",
    "vendor/tokio-0.2.25/src/net/unix/datagram/split_owned.rs",
    "vendor/tokio-0.2.25/src/net/unix/incoming.rs",
    "vendor/tokio-0.2.25/src/net/unix/listener.rs",
    "vendor/tokio-0.2.25/src/net/unix/mod.rs",
    "vendor/tokio-0.2.25/src/net/unix/split.rs",
    "vendor/tokio-0.2.25/src/net/unix/split_owned.rs",
    "vendor/tokio-0.2.25/src/net/unix/stream.rs",
    "vendor/tokio-0.2.25/src/net/unix/ucred.rs",
    "vendor/tokio-0.2.25/src/park/either.rs",
    "vendor/tokio-0.2.25/src/park/mod.rs",
    "vendor/tokio-0.2.25/src/park/thread.rs",
    "vendor/tokio-0.2.25/src/prelude.rs",
    "vendor/tokio-0.2.25/src/process/kill.rs",
    "vendor/tokio-0.2.25/src/process/mod.rs",
    "vendor/tokio-0.2.25/src/process/unix/mod.rs",
    "vendor/tokio-0.2.25/src/process/unix/orphan.rs",
    "vendor/tokio-0.2.25/src/process/unix/reap.rs",
    "vendor/tokio-0.2.25/src/process/windows.rs",
    "vendor/tokio-0.2.25/src/runtime/basic_scheduler.rs",
    "vendor/tokio-0.2.25/src/runtime/blocking/mod.rs",
    "vendor/tokio-0.2.25/src/runtime/blocking/pool.rs",
    "vendor/tokio-0.2.25/src/runtime/blocking/schedule.rs",
    "vendor/tokio-0.2.25/src/runtime/blocking/shutdown.rs",
    "vendor/tokio-0.2.25/src/runtime/blocking/task.rs",
    "vendor/tokio-0.2.25/src/runtime/builder.rs",
    "vendor/tokio-0.2.25/src/runtime/context.rs",
    "vendor/tokio-0.2.25/src/runtime/enter.rs",
    "vendor/tokio-0.2.25/src/runtime/handle.rs",
    "vendor/tokio-0.2.25/src/runtime/io.rs",
    "vendor/tokio-0.2.25/src/runtime/mod.rs",
    "vendor/tokio-0.2.25/src/runtime/park.rs",
    "vendor/tokio-0.2.25/src/runtime/queue.rs",
    "vendor/tokio-0.2.25/src/runtime/shell.rs",
    "vendor/tokio-0.2.25/src/runtime/spawner.rs",
    "vendor/tokio-0.2.25/src/runtime/task/core.rs",
    "vendor/tokio-0.2.25/src/runtime/task/error.rs",
    "vendor/tokio-0.2.25/src/runtime/task/harness.rs",
    "vendor/tokio-0.2.25/src/runtime/task/join.rs",
    "vendor/tokio-0.2.25/src/runtime/task/mod.rs",
    "vendor/tokio-0.2.25/src/runtime/task/raw.rs",
    "vendor/tokio-0.2.25/src/runtime/task/stack.rs",
    "vendor/tokio-0.2.25/src/runtime/task/state.rs",
    "vendor/tokio-0.2.25/src/runtime/task/waker.rs",
    "vendor/tokio-0.2.25/src/runtime/tests/loom_blocking.rs",
    "vendor/tokio-0.2.25/src/runtime/tests/loom_oneshot.rs",
    "vendor/tokio-0.2.25/src/runtime/tests/loom_pool.rs",
    "vendor/tokio-0.2.25/src/runtime/tests/loom_queue.rs",
    "vendor/tokio-0.2.25/src/runtime/tests/mod.rs",
    "vendor/tokio-0.2.25/src/runtime/tests/queue.rs",
    "vendor/tokio-0.2.25/src/runtime/tests/task.rs",
    "vendor/tokio-0.2.25/src/runtime/thread_pool/atomic_cell.rs",
    "vendor/tokio-0.2.25/src/runtime/thread_pool/idle.rs",
    "vendor/tokio-0.2.25/src/runtime/thread_pool/mod.rs",
    "vendor/tokio-0.2.25/src/runtime/thread_pool/worker.rs",
    "vendor/tokio-0.2.25/src/runtime/time.rs",
    "vendor/tokio-0.2.25/src/signal/ctrl_c.rs",
    "vendor/tokio-0.2.25/src/signal/mod.rs",
    "vendor/tokio-0.2.25/src/signal/registry.rs",
    "vendor/tokio-0.2.25/src/signal/unix.rs",
    "vendor/tokio-0.2.25/src/signal/windows.rs",
    "vendor/tokio-0.2.25/src/stream/all.rs",
    "vendor/tokio-0.2.25/src/stream/any.rs",
    "vendor/tokio-0.2.25/src/stream/chain.rs",
    "vendor/tokio-0.2.25/src/stream/collect.rs",
    "vendor/tokio-0.2.25/src/stream/empty.rs",
    "vendor/tokio-0.2.25/src/stream/filter.rs",
    "vendor/tokio-0.2.25/src/stream/filter_map.rs",
    "vendor/tokio-0.2.25/src/stream/fold.rs",
    "vendor/tokio-0.2.25/src/stream/fuse.rs",
    "vendor/tokio-0.2.25/src/stream/iter.rs",
    "vendor/tokio-0.2.25/src/stream/map.rs",
    "vendor/tokio-0.2.25/src/stream/merge.rs",
    "vendor/tokio-0.2.25/src/stream/mod.rs",
    "vendor/tokio-0.2.25/src/stream/next.rs",
    "vendor/tokio-0.2.25/src/stream/once.rs",
    "vendor/tokio-0.2.25/src/stream/pending.rs",
    "vendor/tokio-0.2.25/src/stream/skip.rs",
    "vendor/tokio-0.2.25/src/stream/skip_while.rs",
    "vendor/tokio-0.2.25/src/stream/stream_map.rs",
    "vendor/tokio-0.2.25/src/stream/take.rs",
    "vendor/tokio-0.2.25/src/stream/take_while.rs",
    "vendor/tokio-0.2.25/src/stream/timeout.rs",
    "vendor/tokio-0.2.25/src/stream/try_next.rs",
    "vendor/tokio-0.2.25/src/sync/barrier.rs",
    "vendor/tokio-0.2.25/src/sync/batch_semaphore.rs",
    "vendor/tokio-0.2.25/src/sync/broadcast.rs",
    "vendor/tokio-0.2.25/src/sync/cancellation_token.rs",
    "vendor/tokio-0.2.25/src/sync/mod.rs",
    "vendor/tokio-0.2.25/src/sync/mpsc/block.rs",
    "vendor/tokio-0.2.25/src/sync/mpsc/bounded.rs",
    "vendor/tokio-0.2.25/src/sync/mpsc/chan.rs",
    "vendor/tokio-0.2.25/src/sync/mpsc/error.rs",
    "vendor/tokio-0.2.25/src/sync/mpsc/list.rs",
    "vendor/tokio-0.2.25/src/sync/mpsc/mod.rs",
    "vendor/tokio-0.2.25/src/sync/mpsc/unbounded.rs",
    "vendor/tokio-0.2.25/src/sync/mutex.rs",
    "vendor/tokio-0.2.25/src/sync/notify.rs",
    "vendor/tokio-0.2.25/src/sync/oneshot.rs",
    "vendor/tokio-0.2.25/src/sync/rwlock.rs",
    "vendor/tokio-0.2.25/src/sync/semaphore.rs",
    "vendor/tokio-0.2.25/src/sync/semaphore_ll.rs",
    "vendor/tokio-0.2.25/src/sync/task/atomic_waker.rs",
    "vendor/tokio-0.2.25/src/sync/task/mod.rs",
    "vendor/tokio-0.2.25/src/sync/tests/atomic_waker.rs",
    "vendor/tokio-0.2.25/src/sync/tests/loom_atomic_waker.rs",
    "vendor/tokio-0.2.25/src/sync/tests/loom_broadcast.rs",
    "vendor/tokio-0.2.25/src/sync/tests/loom_cancellation_token.rs",
    "vendor/tokio-0.2.25/src/sync/tests/loom_list.rs",
    "vendor/tokio-0.2.25/src/sync/tests/loom_mpsc.rs",
    "vendor/tokio-0.2.25/src/sync/tests/loom_notify.rs",
    "vendor/tokio-0.2.25/src/sync/tests/loom_oneshot.rs",
    "vendor/tokio-0.2.25/src/sync/tests/loom_rwlock.rs",
    "vendor/tokio-0.2.25/src/sync/tests/loom_semaphore_batch.rs",
    "vendor/tokio-0.2.25/src/sync/tests/loom_semaphore_ll.rs",
    "vendor/tokio-0.2.25/src/sync/tests/mod.rs",
    "vendor/tokio-0.2.25/src/sync/tests/semaphore_batch.rs",
    "vendor/tokio-0.2.25/src/sync/tests/semaphore_ll.rs",
    "vendor/tokio-0.2.25/src/sync/watch.rs",
    "vendor/tokio-0.2.25/src/task/blocking.rs",
    "vendor/tokio-0.2.25/src/task/local.rs",
    "vendor/tokio-0.2.25/src/task/mod.rs",
    "vendor/tokio-0.2.25/src/task/spawn.rs",
    "vendor/tokio-0.2.25/src/task/task_local.rs",
    "vendor/tokio-0.2.25/src/task/yield_now.rs",
    "vendor/tokio-0.2.25/src/time/clock.rs",
    "vendor/tokio-0.2.25/src/time/delay.rs",
    "vendor/tokio-0.2.25/src/time/delay_queue.rs",
    "vendor/tokio-0.2.25/src/time/driver/atomic_stack.rs",
    "vendor/tokio-0.2.25/src/time/driver/entry.rs",
    "vendor/tokio-0.2.25/src/time/driver/handle.rs",
    "vendor/tokio-0.2.25/src/time/driver/mod.rs",
    "vendor/tokio-0.2.25/src/time/driver/registration.rs",
    "vendor/tokio-0.2.25/src/time/driver/stack.rs",
    "vendor/tokio-0.2.25/src/time/driver/tests/mod.rs",
    "vendor/tokio-0.2.25/src/time/error.rs",
    "vendor/tokio-0.2.25/src/time/instant.rs",
    "vendor/tokio-0.2.25/src/time/interval.rs",
    "vendor/tokio-0.2.25/src/time/mod.rs",
    "vendor/tokio-0.2.25/src/time/tests/mod.rs",
    "vendor/tokio-0.2.25/src/time/tests/test_delay.rs",
    "vendor/tokio-0.2.25/src/time/throttle.rs",
    "vendor/tokio-0.2.25/src/time/timeout.rs",
    "vendor/tokio-0.2.25/src/time/wheel/level.rs",
    "vendor/tokio-0.2.25/src/time/wheel/mod.rs",
    "vendor/tokio-0.2.25/src/time/wheel/stack.rs",
    "vendor/tokio-0.2.25/src/util/bit.rs",
    "vendor/tokio-0.2.25/src/util/intrusive_double_linked_list.rs",
    "vendor/tokio-0.2.25/src/util/linked_list.rs",
    "vendor/tokio-0.2.25/src/util/mod.rs",
    "vendor/tokio-0.2.25/src/util/pad.rs",
    "vendor/tokio-0.2.25/src/util/rand.rs",
    "vendor/tokio-0.2.25/src/util/slab/addr.rs",
    "vendor/tokio-0.2.25/src/util/slab/entry.rs",
    "vendor/tokio-0.2.25/src/util/slab/generation.rs",
    "vendor/tokio-0.2.25/src/util/slab/mod.rs",
    "vendor/tokio-0.2.25/src/util/slab/page.rs",
    "vendor/tokio-0.2.25/src/util/slab/shard.rs",
    "vendor/tokio-0.2.25/src/util/slab/slot.rs",
    "vendor/tokio-0.2.25/src/util/slab/stack.rs",
    "vendor/tokio-0.2.25/src/util/slab/tests/loom_slab.rs",
    "vendor/tokio-0.2.25/src/util/slab/tests/loom_stack.rs",
    "vendor/tokio-0.2.25/src/util/slab/tests/mod.rs",
    "vendor/tokio-0.2.25/src/util/trace.rs",
    "vendor/tokio-0.2.25/src/util/try_lock.rs",
    "vendor/tokio-0.2.25/src/util/wake.rs",
    ],
    deps = [],
    crate = "tokio",
    crate_root = "vendor/tokio-0.2.25/src/lib.rs",
    edition = "2018",
    features = ["blocking",
    "default",
    "dns",
    "fnv",
    "fs",
    "full",
    "futures-core",
    "io-driver",
    "io-std",
    "io-util",
    "iovec",
    "lazy_static",
    "libc",
    "macros",
    "memchr",
    "mio",
    "mio-named-pipes",
    "mio-uds",
    "net",
    "num_cpus",
    "process",
    "rt-core",
    "rt-threaded",
    "rt-util",
    "signal",
    "signal-hook-registry",
    "slab",
    "stream",
    "sync",
    "tcp",
    "test-util",
    "time",
    "tokio-macros",
    "tokio_track_caller",
    "udp",
    "uds",
    "winapi",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bytes-05",
    "//generated/third-party/rust:fnv",
    "//generated/third-party/rust:futures-core",
    "//generated/third-party/rust:iovec-0.1.4",
    "//generated/third-party/rust:lazy_static",
    "//generated/third-party/rust:memchr-2.4.1",
    "//generated/third-party/rust:mio-06",
    "//generated/third-party/rust:num_cpus",
    "//generated/third-party/rust:pin-project-lite-0.1.11",
    "//generated/third-party/rust:slab-0.4.2",
    "//generated/third-party/rust:tokio-macros",
    "//generated/third-party/rust:libc",
    "//generated/third-party/rust:mio-uds-0.6.8",
    "//generated/third-party/rust:signal-hook-registry-1.4.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tokio-macros",
    srcs = ["vendor/tokio-macros-0.2.6/src/entry.rs",
    "vendor/tokio-macros-0.2.6/src/lib.rs",
    "vendor/tokio-macros-0.2.6/src/select.rs",
    ],
    deps = [],
    crate = "tokio_macros",
    crate_root = "vendor/tokio-macros-0.2.6/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "tokio-macros-1.1.0",
    srcs = ["vendor/tokio-macros-1.1.0/src/entry.rs",
    "vendor/tokio-macros-1.1.0/src/lib.rs",
    "vendor/tokio-macros-1.1.0/src/select.rs",
    ],
    deps = [],
    crate = "tokio_macros",
    crate_root = "vendor/tokio-macros-1.1.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "tokio-rustls",
    srcs = ["vendor/tokio-rustls-0.22.0/README.md",
    "vendor/tokio-rustls-0.22.0/src/client.rs",
    "vendor/tokio-rustls-0.22.0/src/common/handshake.rs",
    "vendor/tokio-rustls-0.22.0/src/common/mod.rs",
    "vendor/tokio-rustls-0.22.0/src/common/test_stream.rs",
    "vendor/tokio-rustls-0.22.0/src/lib.rs",
    "vendor/tokio-rustls-0.22.0/src/server.rs",
    "vendor/tokio-rustls-0.22.0/tests/end.cert",
    "vendor/tokio-rustls-0.22.0/tests/end.chain",
    "vendor/tokio-rustls-0.22.0/tests/end.rsa",
    ],
    deps = [],
    crate = "tokio_rustls",
    crate_root = "vendor/tokio-rustls-0.22.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:rustls",
    "//generated/third-party/rust:tokio",
    "//generated/third-party/rust:webpki",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tokio-stream",
    srcs = ["vendor/tokio-stream-0.1.4/src/empty.rs",
    "vendor/tokio-stream-0.1.4/src/iter.rs",
    "vendor/tokio-stream-0.1.4/src/lib.rs",
    "vendor/tokio-stream-0.1.4/src/macros.rs",
    "vendor/tokio-stream-0.1.4/src/once.rs",
    "vendor/tokio-stream-0.1.4/src/pending.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/all.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/any.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/chain.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/collect.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/filter.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/filter_map.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/fold.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/fuse.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/map.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/merge.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/next.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/skip.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/skip_while.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/take.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/take_while.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/throttle.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/timeout.rs",
    "vendor/tokio-stream-0.1.4/src/stream_ext/try_next.rs",
    "vendor/tokio-stream-0.1.4/src/stream_map.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/broadcast.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/interval.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/lines.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/mpsc_bounded.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/mpsc_unbounded.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/read_dir.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/signal_unix.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/signal_windows.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/split.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/tcp_listener.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/unix_listener.rs",
    "vendor/tokio-stream-0.1.4/src/wrappers/watch.rs",
    ],
    deps = [],
    crate = "tokio_stream",
    crate_root = "vendor/tokio-stream-0.1.4/src/lib.rs",
    edition = "2018",
    features = ["default",
    "fs",
    "io-util",
    "net",
    "signal",
    "sync",
    "time",
    "tokio-util",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:futures-core",
    "//generated/third-party/rust:pin-project-lite-0.2.6",
    "//generated/third-party/rust:tokio",
    "//generated/third-party/rust:tokio-util",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tokio-tungstenite-0.13.0",
    srcs = ["vendor/tokio-tungstenite-0.13.0/src/compat.rs",
    "vendor/tokio-tungstenite-0.13.0/src/connect.rs",
    "vendor/tokio-tungstenite-0.13.0/src/handshake.rs",
    "vendor/tokio-tungstenite-0.13.0/src/lib.rs",
    "vendor/tokio-tungstenite-0.13.0/src/stream.rs",
    ],
    deps = [],
    crate = "tokio_tungstenite",
    crate_root = "vendor/tokio-tungstenite-0.13.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:futures-util",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:pin-project-1.0.2",
    "//generated/third-party/rust:tokio",
    "//generated/third-party/rust:tungstenite-0.12.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tokio-util",
    srcs = ["vendor/tokio-util-0.6.3/src/cfg.rs",
    "vendor/tokio-util-0.6.3/src/codec/bytes_codec.rs",
    "vendor/tokio-util-0.6.3/src/codec/decoder.rs",
    "vendor/tokio-util-0.6.3/src/codec/encoder.rs",
    "vendor/tokio-util-0.6.3/src/codec/framed.rs",
    "vendor/tokio-util-0.6.3/src/codec/framed_impl.rs",
    "vendor/tokio-util-0.6.3/src/codec/framed_read.rs",
    "vendor/tokio-util-0.6.3/src/codec/framed_write.rs",
    "vendor/tokio-util-0.6.3/src/codec/length_delimited.rs",
    "vendor/tokio-util-0.6.3/src/codec/lines_codec.rs",
    "vendor/tokio-util-0.6.3/src/codec/mod.rs",
    "vendor/tokio-util-0.6.3/src/compat.rs",
    "vendor/tokio-util-0.6.3/src/context.rs",
    "vendor/tokio-util-0.6.3/src/either.rs",
    "vendor/tokio-util-0.6.3/src/io/mod.rs",
    "vendor/tokio-util-0.6.3/src/io/read_buf.rs",
    "vendor/tokio-util-0.6.3/src/io/reader_stream.rs",
    "vendor/tokio-util-0.6.3/src/io/stream_reader.rs",
    "vendor/tokio-util-0.6.3/src/lib.rs",
    "vendor/tokio-util-0.6.3/src/loom.rs",
    "vendor/tokio-util-0.6.3/src/sync/cancellation_token.rs",
    "vendor/tokio-util-0.6.3/src/sync/intrusive_double_linked_list.rs",
    "vendor/tokio-util-0.6.3/src/sync/mod.rs",
    "vendor/tokio-util-0.6.3/src/sync/poll_semaphore.rs",
    "vendor/tokio-util-0.6.3/src/sync/reusable_box.rs",
    "vendor/tokio-util-0.6.3/src/sync/tests/loom_cancellation_token.rs",
    "vendor/tokio-util-0.6.3/src/sync/tests/mod.rs",
    "vendor/tokio-util-0.6.3/src/time/delay_queue.rs",
    "vendor/tokio-util-0.6.3/src/time/mod.rs",
    "vendor/tokio-util-0.6.3/src/time/wheel/level.rs",
    "vendor/tokio-util-0.6.3/src/time/wheel/mod.rs",
    "vendor/tokio-util-0.6.3/src/time/wheel/stack.rs",
    "vendor/tokio-util-0.6.3/src/udp/frame.rs",
    "vendor/tokio-util-0.6.3/src/udp/mod.rs",
    ],
    deps = [],
    crate = "tokio_util",
    crate_root = "vendor/tokio-util-0.6.3/src/lib.rs",
    edition = "2018",
    features = ["codec",
    "compat",
    "default",
    "full",
    "futures-io",
    "io",
    "net",
    "rt",
    "slab",
    "time",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bytes",
    "//generated/third-party/rust:futures-core",
    "//generated/third-party/rust:futures-io-0.3.13",
    "//generated/third-party/rust:futures-sink",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:pin-project-lite-0.2.6",
    "//generated/third-party/rust:slab-0.4.2",
    "//generated/third-party/rust:tokio",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "toml",
    srcs = ["vendor/toml-0.5.7/src/datetime.rs",
    "vendor/toml-0.5.7/src/de.rs",
    "vendor/toml-0.5.7/src/lib.rs",
    "vendor/toml-0.5.7/src/macros.rs",
    "vendor/toml-0.5.7/src/map.rs",
    "vendor/toml-0.5.7/src/ser.rs",
    "vendor/toml-0.5.7/src/spanned.rs",
    "vendor/toml-0.5.7/src/tokens.rs",
    "vendor/toml-0.5.7/src/value.rs",
    ],
    deps = [],
    crate = "toml",
    crate_root = "vendor/toml-0.5.7/src/lib.rs",
    edition = "2018",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:serde",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tower",
    srcs = ["vendor/tower-0.4.6/src/balance/error.rs",
    "vendor/tower-0.4.6/src/balance/mod.rs",
    "vendor/tower-0.4.6/src/balance/p2c/layer.rs",
    "vendor/tower-0.4.6/src/balance/p2c/make.rs",
    "vendor/tower-0.4.6/src/balance/p2c/mod.rs",
    "vendor/tower-0.4.6/src/balance/p2c/service.rs",
    "vendor/tower-0.4.6/src/balance/p2c/test.rs",
    "vendor/tower-0.4.6/src/balance/pool/mod.rs",
    "vendor/tower-0.4.6/src/balance/pool/test.rs",
    "vendor/tower-0.4.6/src/buffer/error.rs",
    "vendor/tower-0.4.6/src/buffer/future.rs",
    "vendor/tower-0.4.6/src/buffer/layer.rs",
    "vendor/tower-0.4.6/src/buffer/message.rs",
    "vendor/tower-0.4.6/src/buffer/mod.rs",
    "vendor/tower-0.4.6/src/buffer/service.rs",
    "vendor/tower-0.4.6/src/buffer/worker.rs",
    "vendor/tower-0.4.6/src/builder/mod.rs",
    "vendor/tower-0.4.6/src/discover/error.rs",
    "vendor/tower-0.4.6/src/discover/list.rs",
    "vendor/tower-0.4.6/src/discover/mod.rs",
    "vendor/tower-0.4.6/src/filter/future.rs",
    "vendor/tower-0.4.6/src/filter/layer.rs",
    "vendor/tower-0.4.6/src/filter/mod.rs",
    "vendor/tower-0.4.6/src/filter/predicate.rs",
    "vendor/tower-0.4.6/src/hedge/delay.rs",
    "vendor/tower-0.4.6/src/hedge/latency.rs",
    "vendor/tower-0.4.6/src/hedge/mod.rs",
    "vendor/tower-0.4.6/src/hedge/rotating_histogram.rs",
    "vendor/tower-0.4.6/src/hedge/select.rs",
    "vendor/tower-0.4.6/src/layer.rs",
    "vendor/tower-0.4.6/src/lib.rs",
    "vendor/tower-0.4.6/src/limit/concurrency/future.rs",
    "vendor/tower-0.4.6/src/limit/concurrency/layer.rs",
    "vendor/tower-0.4.6/src/limit/concurrency/mod.rs",
    "vendor/tower-0.4.6/src/limit/concurrency/service.rs",
    "vendor/tower-0.4.6/src/limit/mod.rs",
    "vendor/tower-0.4.6/src/limit/rate/layer.rs",
    "vendor/tower-0.4.6/src/limit/rate/mod.rs",
    "vendor/tower-0.4.6/src/limit/rate/rate.rs",
    "vendor/tower-0.4.6/src/limit/rate/service.rs",
    "vendor/tower-0.4.6/src/load/completion.rs",
    "vendor/tower-0.4.6/src/load/constant.rs",
    "vendor/tower-0.4.6/src/load/mod.rs",
    "vendor/tower-0.4.6/src/load/peak_ewma.rs",
    "vendor/tower-0.4.6/src/load/pending_requests.rs",
    "vendor/tower-0.4.6/src/load_shed/error.rs",
    "vendor/tower-0.4.6/src/load_shed/future.rs",
    "vendor/tower-0.4.6/src/load_shed/layer.rs",
    "vendor/tower-0.4.6/src/load_shed/mod.rs",
    "vendor/tower-0.4.6/src/macros.rs",
    "vendor/tower-0.4.6/src/make/make_connection.rs",
    "vendor/tower-0.4.6/src/make/make_service.rs",
    "vendor/tower-0.4.6/src/make/make_service/shared.rs",
    "vendor/tower-0.4.6/src/make/mod.rs",
    "vendor/tower-0.4.6/src/ready_cache/cache.rs",
    "vendor/tower-0.4.6/src/ready_cache/error.rs",
    "vendor/tower-0.4.6/src/ready_cache/mod.rs",
    "vendor/tower-0.4.6/src/reconnect/future.rs",
    "vendor/tower-0.4.6/src/reconnect/mod.rs",
    "vendor/tower-0.4.6/src/retry/budget.rs",
    "vendor/tower-0.4.6/src/retry/future.rs",
    "vendor/tower-0.4.6/src/retry/layer.rs",
    "vendor/tower-0.4.6/src/retry/mod.rs",
    "vendor/tower-0.4.6/src/retry/policy.rs",
    "vendor/tower-0.4.6/src/spawn_ready/future.rs",
    "vendor/tower-0.4.6/src/spawn_ready/layer.rs",
    "vendor/tower-0.4.6/src/spawn_ready/make.rs",
    "vendor/tower-0.4.6/src/spawn_ready/mod.rs",
    "vendor/tower-0.4.6/src/spawn_ready/service.rs",
    "vendor/tower-0.4.6/src/steer/mod.rs",
    "vendor/tower-0.4.6/src/timeout/error.rs",
    "vendor/tower-0.4.6/src/timeout/future.rs",
    "vendor/tower-0.4.6/src/timeout/layer.rs",
    "vendor/tower-0.4.6/src/timeout/mod.rs",
    "vendor/tower-0.4.6/src/util/and_then.rs",
    "vendor/tower-0.4.6/src/util/boxed/layer.rs",
    "vendor/tower-0.4.6/src/util/boxed/mod.rs",
    "vendor/tower-0.4.6/src/util/boxed/sync.rs",
    "vendor/tower-0.4.6/src/util/boxed/unsync.rs",
    "vendor/tower-0.4.6/src/util/call_all/common.rs",
    "vendor/tower-0.4.6/src/util/call_all/mod.rs",
    "vendor/tower-0.4.6/src/util/call_all/ordered.rs",
    "vendor/tower-0.4.6/src/util/call_all/unordered.rs",
    "vendor/tower-0.4.6/src/util/either.rs",
    "vendor/tower-0.4.6/src/util/future_service.rs",
    "vendor/tower-0.4.6/src/util/map_err.rs",
    "vendor/tower-0.4.6/src/util/map_future.rs",
    "vendor/tower-0.4.6/src/util/map_request.rs",
    "vendor/tower-0.4.6/src/util/map_response.rs",
    "vendor/tower-0.4.6/src/util/map_result.rs",
    "vendor/tower-0.4.6/src/util/mod.rs",
    "vendor/tower-0.4.6/src/util/oneshot.rs",
    "vendor/tower-0.4.6/src/util/optional/error.rs",
    "vendor/tower-0.4.6/src/util/optional/future.rs",
    "vendor/tower-0.4.6/src/util/optional/mod.rs",
    "vendor/tower-0.4.6/src/util/ready.rs",
    "vendor/tower-0.4.6/src/util/service_fn.rs",
    "vendor/tower-0.4.6/src/util/then.rs",
    ],
    deps = [],
    crate = "tower",
    crate_root = "vendor/tower-0.4.6/src/lib.rs",
    edition = "2018",
    features = ["balance",
    "buffer",
    "default",
    "discover",
    "futures-util",
    "indexmap",
    "limit",
    "load",
    "log",
    "make",
    "rand",
    "ready-cache",
    "slab",
    "timeout",
    "tokio",
    "tokio-stream",
    "tokio-util",
    "tracing",
    "util",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:futures-core",
    "//generated/third-party/rust:futures-util",
    "//generated/third-party/rust:indexmap",
    "//generated/third-party/rust:pin-project-1.0.2",
    "//generated/third-party/rust:rand-0.8.3",
    "//generated/third-party/rust:slab-0.4.2",
    "//generated/third-party/rust:tokio",
    "//generated/third-party/rust:tokio-stream",
    "//generated/third-party/rust:tokio-util",
    "//generated/third-party/rust:tower-layer-0.3.1",
    "//generated/third-party/rust:tower-service",
    "//generated/third-party/rust:tracing",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tower-layer-0.3.1",
    srcs = ["vendor/tower-layer-0.3.1/src/identity.rs",
    "vendor/tower-layer-0.3.1/src/layer_fn.rs",
    "vendor/tower-layer-0.3.1/src/lib.rs",
    "vendor/tower-layer-0.3.1/src/stack.rs",
    ],
    deps = [],
    crate = "tower_layer",
    crate_root = "vendor/tower-layer-0.3.1/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tower-service",
    srcs = ["vendor/tower-service-0.3.0/src/lib.rs",],
    deps = [],
    crate = "tower_service",
    crate_root = "vendor/tower-service-0.3.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tracing",
    srcs = ["vendor/tracing-0.1.26/src/dispatcher.rs",
    "vendor/tracing-0.1.26/src/field.rs",
    "vendor/tracing-0.1.26/src/instrument.rs",
    "vendor/tracing-0.1.26/src/level_filters.rs",
    "vendor/tracing-0.1.26/src/lib.rs",
    "vendor/tracing-0.1.26/src/macros.rs",
    "vendor/tracing-0.1.26/src/span.rs",
    "vendor/tracing-0.1.26/src/stdlib.rs",
    "vendor/tracing-0.1.26/src/subscriber.rs",
    ],
    deps = [],
    crate = "tracing",
    crate_root = "vendor/tracing-0.1.26/src/lib.rs",
    edition = "2018",
    features = ["attributes",
    "default",
    "log",
    "std",
    "tracing-attributes",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:pin-project-lite-0.2.6",
    "//generated/third-party/rust:tracing-attributes-0.1.15",
    "//generated/third-party/rust:tracing-core",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tracing-attributes-0.1.15",
    srcs = ["vendor/tracing-attributes-0.1.15/src/lib.rs",],
    deps = [],
    crate = "tracing_attributes",
    crate_root = "vendor/tracing-attributes-0.1.15/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:proc-macro2",
    "//generated/third-party/rust:quote",
    "//generated/third-party/rust:syn",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = True,
)
third_party_rust_library(
    name = "tracing-core",
    srcs = ["vendor/tracing-core-0.1.19/src/callsite.rs",
    "vendor/tracing-core-0.1.19/src/dispatcher.rs",
    "vendor/tracing-core-0.1.19/src/event.rs",
    "vendor/tracing-core-0.1.19/src/field.rs",
    "vendor/tracing-core-0.1.19/src/lazy_static/core_lazy.rs",
    "vendor/tracing-core-0.1.19/src/lazy_static/mod.rs",
    "vendor/tracing-core-0.1.19/src/lib.rs",
    "vendor/tracing-core-0.1.19/src/metadata.rs",
    "vendor/tracing-core-0.1.19/src/parent.rs",
    "vendor/tracing-core-0.1.19/src/span.rs",
    "vendor/tracing-core-0.1.19/src/spin/mod.rs",
    "vendor/tracing-core-0.1.19/src/spin/mutex.rs",
    "vendor/tracing-core-0.1.19/src/spin/once.rs",
    "vendor/tracing-core-0.1.19/src/stdlib.rs",
    "vendor/tracing-core-0.1.19/src/subscriber.rs",
    ],
    deps = [],
    crate = "tracing_core",
    crate_root = "vendor/tracing-core-0.1.19/src/lib.rs",
    edition = "2018",
    features = ["default",
    "lazy_static",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:lazy_static",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tracing-futures",
    srcs = ["vendor/tracing-futures-0.2.5/src/executor/futures_01.rs",
    "vendor/tracing-futures-0.2.5/src/executor/futures_03.rs",
    "vendor/tracing-futures-0.2.5/src/executor/futures_preview.rs",
    "vendor/tracing-futures-0.2.5/src/executor/mod.rs",
    "vendor/tracing-futures-0.2.5/src/lib.rs",
    "vendor/tracing-futures-0.2.5/src/stdlib.rs",
    ],
    deps = [],
    crate = "tracing_futures",
    crate_root = "vendor/tracing-futures-0.2.5/src/lib.rs",
    edition = "2018",
    features = ["default",
    "pin-project-lite",
    "std",
    "std-future",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:pin-project-lite-0.2.6",
    "//generated/third-party/rust:tracing",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "trust-dns-proto-0.20.0",
    srcs = ["vendor/trust-dns-proto-0.20.0/src/error.rs",
    "vendor/trust-dns-proto-0.20.0/src/lib.rs",
    "vendor/trust-dns-proto-0.20.0/src/multicast/mdns_client_stream.rs",
    "vendor/trust-dns-proto-0.20.0/src/multicast/mdns_stream.rs",
    "vendor/trust-dns-proto-0.20.0/src/multicast/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/op/edns.rs",
    "vendor/trust-dns-proto-0.20.0/src/op/header.rs",
    "vendor/trust-dns-proto-0.20.0/src/op/message.rs",
    "vendor/trust-dns-proto-0.20.0/src/op/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/op/op_code.rs",
    "vendor/trust-dns-proto-0.20.0/src/op/query.rs",
    "vendor/trust-dns-proto-0.20.0/src/op/response_code.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dns_class.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/algorithm.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/digest_type.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/ec_public_key.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/nsec3.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/public_key.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/rdata/dnskey.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/rdata/ds.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/rdata/key.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/rdata/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/rdata/nsec.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/rdata/nsec3.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/rdata/nsec3param.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/rdata/sig.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/roots/19036.rsa",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/roots/20326.rsa",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/rsa_public_key.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/supported_algorithm.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/tbs.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/trust_anchor.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/dnssec/verifier.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/domain/label.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/domain/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/domain/name.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/domain/try_parse_ip.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/domain/usage.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/a.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/aaaa.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/caa.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/mx.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/name.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/naptr.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/null.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/openpgpkey.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/opt.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/soa.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/srv.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/sshfp.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/tlsa.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rdata/txt.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/record_data.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/record_type.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/resource.rs",
    "vendor/trust-dns-proto-0.20.0/src/rr/rr_set.rs",
    "vendor/trust-dns-proto-0.20.0/src/serialize/binary/bin_tests.rs",
    "vendor/trust-dns-proto-0.20.0/src/serialize/binary/decoder.rs",
    "vendor/trust-dns-proto-0.20.0/src/serialize/binary/encoder.rs",
    "vendor/trust-dns-proto-0.20.0/src/serialize/binary/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/serialize/binary/restrict.rs",
    "vendor/trust-dns-proto-0.20.0/src/serialize/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/tcp/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/tcp/tcp_client_stream.rs",
    "vendor/trust-dns-proto-0.20.0/src/tcp/tcp_stream.rs",
    "vendor/trust-dns-proto-0.20.0/src/tests/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/tests/tcp.rs",
    "vendor/trust-dns-proto-0.20.0/src/tests/udp.rs",
    "vendor/trust-dns-proto-0.20.0/src/udp/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/udp/udp_client_stream.rs",
    "vendor/trust-dns-proto-0.20.0/src/udp/udp_stream.rs",
    "vendor/trust-dns-proto-0.20.0/src/xfer/dns_exchange.rs",
    "vendor/trust-dns-proto-0.20.0/src/xfer/dns_handle.rs",
    "vendor/trust-dns-proto-0.20.0/src/xfer/dns_multiplexer.rs",
    "vendor/trust-dns-proto-0.20.0/src/xfer/dns_request.rs",
    "vendor/trust-dns-proto-0.20.0/src/xfer/dns_response.rs",
    "vendor/trust-dns-proto-0.20.0/src/xfer/dnssec_dns_handle.rs",
    "vendor/trust-dns-proto-0.20.0/src/xfer/mod.rs",
    "vendor/trust-dns-proto-0.20.0/src/xfer/retry_dns_handle.rs",
    "vendor/trust-dns-proto-0.20.0/src/xfer/serial_message.rs",
    ],
    deps = [],
    crate = "trust_dns_proto",
    crate_root = "vendor/trust-dns-proto-0.20.0/src/lib.rs",
    edition = "2018",
    features = ["tokio",
    "tokio-runtime",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:async-trait",
    "//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:data-encoding",
    "//generated/third-party/rust:enum-as-inner-0.3.3",
    "//generated/third-party/rust:futures-channel",
    "//generated/third-party/rust:futures-io-0.3.13",
    "//generated/third-party/rust:futures-util",
    "//generated/third-party/rust:idna-0.2.0",
    "//generated/third-party/rust:ipnet-2.3.0",
    "//generated/third-party/rust:lazy_static",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:rand-0.8.3",
    "//generated/third-party/rust:smallvec",
    "//generated/third-party/rust:thiserror",
    "//generated/third-party/rust:tokio",
    "//generated/third-party/rust:url",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "trust-dns-resolver",
    srcs = ["vendor/trust-dns-resolver-0.20.0/src/async_resolver.rs",
    "vendor/trust-dns-resolver-0.20.0/src/caching_client.rs",
    "vendor/trust-dns-resolver-0.20.0/src/config.rs",
    "vendor/trust-dns-resolver-0.20.0/src/dns_lru.rs",
    "vendor/trust-dns-resolver-0.20.0/src/dns_sd.rs",
    "vendor/trust-dns-resolver-0.20.0/src/error.rs",
    "vendor/trust-dns-resolver-0.20.0/src/hosts.rs",
    "vendor/trust-dns-resolver-0.20.0/src/https.rs",
    "vendor/trust-dns-resolver-0.20.0/src/lib.rs",
    "vendor/trust-dns-resolver-0.20.0/src/lookup.rs",
    "vendor/trust-dns-resolver-0.20.0/src/lookup_ip.rs",
    "vendor/trust-dns-resolver-0.20.0/src/name_server/connection_provider.rs",
    "vendor/trust-dns-resolver-0.20.0/src/name_server/mod.rs",
    "vendor/trust-dns-resolver-0.20.0/src/name_server/name_server.rs",
    "vendor/trust-dns-resolver-0.20.0/src/name_server/name_server_pool.rs",
    "vendor/trust-dns-resolver-0.20.0/src/name_server/name_server_state.rs",
    "vendor/trust-dns-resolver-0.20.0/src/name_server/name_server_stats.rs",
    "vendor/trust-dns-resolver-0.20.0/src/resolver.rs",
    "vendor/trust-dns-resolver-0.20.0/src/system_conf/mod.rs",
    "vendor/trust-dns-resolver-0.20.0/src/system_conf/unix.rs",
    "vendor/trust-dns-resolver-0.20.0/src/system_conf/windows.rs",
    "vendor/trust-dns-resolver-0.20.0/src/tls/dns_over_native_tls.rs",
    "vendor/trust-dns-resolver-0.20.0/src/tls/dns_over_openssl.rs",
    "vendor/trust-dns-resolver-0.20.0/src/tls/dns_over_rustls.rs",
    "vendor/trust-dns-resolver-0.20.0/src/tls/mod.rs",
    ],
    deps = [],
    crate = "trust_dns_resolver",
    crate_root = "vendor/trust-dns-resolver-0.20.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "ipconfig",
    "resolv-conf",
    "system-config",
    "tokio",
    "tokio-runtime",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:cfg-if-1.0.0",
    "//generated/third-party/rust:futures-util",
    "//generated/third-party/rust:lazy_static",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:lru-cache",
    "//generated/third-party/rust:parking_lot-0.11.0",
    "//generated/third-party/rust:resolv-conf-0.7.0",
    "//generated/third-party/rust:smallvec",
    "//generated/third-party/rust:thiserror",
    "//generated/third-party/rust:tokio",
    "//generated/third-party/rust:trust-dns-proto-0.20.0",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "CARGO_MANIFEST_DIR": "third-party/rust/vendor/trust-dns-resolver-0.20.0",
        "CARGO_PKG_NAME": "trust-dns-resolver",
        "CARGO_PKG_VERSION": "0.20.0",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "20",
        "CARGO_PKG_VERSION_PATCH": "0",
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "try-lock-0.2.3",
    srcs = ["vendor/try-lock-0.2.3/src/lib.rs",],
    deps = [],
    crate = "try_lock",
    crate_root = "vendor/try-lock-0.2.3/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "tungstenite-0.12.0",
    srcs = ["vendor/tungstenite-0.12.0/src/client.rs",
    "vendor/tungstenite-0.12.0/src/error.rs",
    "vendor/tungstenite-0.12.0/src/handshake/client.rs",
    "vendor/tungstenite-0.12.0/src/handshake/headers.rs",
    "vendor/tungstenite-0.12.0/src/handshake/machine.rs",
    "vendor/tungstenite-0.12.0/src/handshake/mod.rs",
    "vendor/tungstenite-0.12.0/src/handshake/server.rs",
    "vendor/tungstenite-0.12.0/src/lib.rs",
    "vendor/tungstenite-0.12.0/src/protocol/frame/coding.rs",
    "vendor/tungstenite-0.12.0/src/protocol/frame/frame.rs",
    "vendor/tungstenite-0.12.0/src/protocol/frame/mask.rs",
    "vendor/tungstenite-0.12.0/src/protocol/frame/mod.rs",
    "vendor/tungstenite-0.12.0/src/protocol/message.rs",
    "vendor/tungstenite-0.12.0/src/protocol/mod.rs",
    "vendor/tungstenite-0.12.0/src/server.rs",
    "vendor/tungstenite-0.12.0/src/stream.rs",
    "vendor/tungstenite-0.12.0/src/util.rs",
    ],
    deps = [],
    crate = "tungstenite",
    crate_root = "vendor/tungstenite-0.12.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:base64-0.13.0",
    "//generated/third-party/rust:byteorder",
    "//generated/third-party/rust:bytes",
    "//generated/third-party/rust:http",
    "//generated/third-party/rust:httparse-1.4.1",
    "//generated/third-party/rust:input_buffer-0.4.0",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:rand-0.8.3",
    "//generated/third-party/rust:sha-1-0.9.4",
    "//generated/third-party/rust:url",
    "//generated/third-party/rust:utf-8-0.7.5",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "twoway-0.1.8",
    srcs = ["vendor/twoway-0.1.8/src/bmh.rs",
    "vendor/twoway-0.1.8/src/lib.rs",
    "vendor/twoway-0.1.8/src/pcmp.rs",
    "vendor/twoway-0.1.8/src/set.rs",
    "vendor/twoway-0.1.8/src/tw.rs",
    "vendor/twoway-0.1.8/src/util.rs",
    ],
    deps = [],
    crate = "twoway",
    crate_root = "vendor/twoway-0.1.8/src/lib.rs",
    edition = "2015",
    features = ["default",
    "use_std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:memchr-2.4.1",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "typenum",
    srcs = ["vendor/typenum-1.12.0/src/array.rs",
    "vendor/typenum-1.12.0/src/bit.rs",
    "vendor/typenum-1.12.0/src/int.rs",
    "vendor/typenum-1.12.0/src/lib.rs",
    "vendor/typenum-1.12.0/src/marker_traits.rs",
    "vendor/typenum-1.12.0/src/operator_aliases.rs",
    "vendor/typenum-1.12.0/src/private.rs",
    "vendor/typenum-1.12.0/src/type_operators.rs",
    "vendor/typenum-1.12.0/src/uint.rs",
    ],
    deps = [],
    crate = "typenum",
    crate_root = "vendor/typenum-1.12.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
        "//third-party/rust:typenum-1.12.0-build-script-main-srcs=consts.rs": "vendor/typenum-1.12.0/src/consts.rs",
        "//third-party/rust:typenum-1.12.0-build-script-main-srcs=op.rs": "vendor/typenum-1.12.0/src/op.rs",
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "TYPENUM_BUILD_CONSTS": "op.rs",
        "TYPENUM_BUILD_OP": "consts.rs",
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "typenum-1.12.0-build-script-main",
    srcs = ["vendor/typenum-1.12.0/build/main.rs",
    "vendor/typenum-1.12.0/build/op.rs",
    "vendor/typenum-1.12.0/build/tests.rs",
    ],
    deps = [],
    crate = "build_script_main",
    crate_root = "vendor/typenum-1.12.0/build/main.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
        "TYPENUM_BUILD_CONSTS": "op.rs",
        "TYPENUM_BUILD_OP": "consts.rs",
    },
    unittests = False,
)
third_party_rust_library(
    name = "ucd-trie-0.1.3",
    srcs = ["vendor/ucd-trie-0.1.3/src/general_category.rs",
    "vendor/ucd-trie-0.1.3/src/lib.rs",
    "vendor/ucd-trie-0.1.3/src/owned.rs",
    ],
    deps = [],
    crate = "ucd_trie",
    crate_root = "vendor/ucd-trie-0.1.3/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "unicase",
    srcs = ["vendor/unicase-2.6.0/src/ascii.rs",
    "vendor/unicase-2.6.0/src/lib.rs",
    "vendor/unicase-2.6.0/src/unicode/map.rs",
    "vendor/unicase-2.6.0/src/unicode/mod.rs",
    ],
    deps = [],
    crate = "unicase",
    crate_root = "vendor/unicase-2.6.0/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :unicase-2.6.0-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "unicase-2.6.0-build-script-build",
    srcs = ["vendor/unicase-2.6.0/build.rs",
    "vendor/unicase-2.6.0/src/ascii.rs",
    "vendor/unicase-2.6.0/src/lib.rs",
    "vendor/unicase-2.6.0/src/unicode/map.rs",
    "vendor/unicase-2.6.0/src/unicode/mod.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/unicase-2.6.0/build.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:version_check-0.9.2",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "unicode-bidi-0.3.4",
    srcs = ["vendor/unicode-bidi-0.3.4/src/char_data/mod.rs",
    "vendor/unicode-bidi-0.3.4/src/char_data/tables.rs",
    "vendor/unicode-bidi-0.3.4/src/deprecated.rs",
    "vendor/unicode-bidi-0.3.4/src/explicit.rs",
    "vendor/unicode-bidi-0.3.4/src/format_chars.rs",
    "vendor/unicode-bidi-0.3.4/src/implicit.rs",
    "vendor/unicode-bidi-0.3.4/src/level.rs",
    "vendor/unicode-bidi-0.3.4/src/lib.rs",
    "vendor/unicode-bidi-0.3.4/src/prepare.rs",
    ],
    deps = [],
    crate = "unicode_bidi",
    crate_root = "vendor/unicode-bidi-0.3.4/src/lib.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:matches-0.1.8",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "unicode-normalization-0.1.13",
    srcs = ["vendor/unicode-normalization-0.1.13/src/__test_api.rs",
    "vendor/unicode-normalization-0.1.13/src/decompose.rs",
    "vendor/unicode-normalization-0.1.13/src/lib.rs",
    "vendor/unicode-normalization-0.1.13/src/lookups.rs",
    "vendor/unicode-normalization-0.1.13/src/no_std_prelude.rs",
    "vendor/unicode-normalization-0.1.13/src/normalize.rs",
    "vendor/unicode-normalization-0.1.13/src/perfect_hash.rs",
    "vendor/unicode-normalization-0.1.13/src/quick_check.rs",
    "vendor/unicode-normalization-0.1.13/src/recompose.rs",
    "vendor/unicode-normalization-0.1.13/src/stream_safe.rs",
    "vendor/unicode-normalization-0.1.13/src/tables.rs",
    "vendor/unicode-normalization-0.1.13/src/test.rs",
    ],
    deps = [],
    crate = "unicode_normalization",
    crate_root = "vendor/unicode-normalization-0.1.13/src/lib.rs",
    edition = "2018",
    features = ["default",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:tinyvec-0.3.4",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "unicode-segmentation",
    srcs = ["vendor/unicode-segmentation-1.7.1/src/grapheme.rs",
    "vendor/unicode-segmentation-1.7.1/src/lib.rs",
    "vendor/unicode-segmentation-1.7.1/src/sentence.rs",
    "vendor/unicode-segmentation-1.7.1/src/tables.rs",
    "vendor/unicode-segmentation-1.7.1/src/test.rs",
    "vendor/unicode-segmentation-1.7.1/src/testdata.rs",
    "vendor/unicode-segmentation-1.7.1/src/word.rs",
    ],
    deps = [],
    crate = "unicode_segmentation",
    crate_root = "vendor/unicode-segmentation-1.7.1/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "unicode-width",
    srcs = ["vendor/unicode-width-0.1.8/src/lib.rs",
    "vendor/unicode-width-0.1.8/src/tables.rs",
    "vendor/unicode-width-0.1.8/src/tests.rs",
    ],
    deps = [],
    crate = "unicode_width",
    crate_root = "vendor/unicode-width-0.1.8/src/lib.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "unicode-xid-0.2.1",
    srcs = ["vendor/unicode-xid-0.2.1/src/lib.rs",
    "vendor/unicode-xid-0.2.1/src/tables.rs",
    "vendor/unicode-xid-0.2.1/src/tests.rs",
    ],
    deps = [],
    crate = "unicode_xid",
    crate_root = "vendor/unicode-xid-0.2.1/src/lib.rs",
    edition = "2015",
    features = ["default",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "untrusted-0.7.1",
    srcs = ["vendor/untrusted-0.7.1/src/untrusted.rs",],
    deps = [],
    crate = "untrusted",
    crate_root = "vendor/untrusted-0.7.1/src/untrusted.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "url",
    srcs = ["vendor/url-2.2.2/src/host.rs",
    "vendor/url-2.2.2/src/lib.rs",
    "vendor/url-2.2.2/src/origin.rs",
    "vendor/url-2.2.2/src/parser.rs",
    "vendor/url-2.2.2/src/path_segments.rs",
    "vendor/url-2.2.2/src/quirks.rs",
    "vendor/url-2.2.2/src/slicing.rs",
    ],
    deps = [],
    crate = "url",
    crate_root = "vendor/url-2.2.2/src/lib.rs",
    edition = "2018",
    features = ["serde",],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:form_urlencoded-1.0.0",
    "//generated/third-party/rust:idna-0.2.0",
    "//generated/third-party/rust:matches-0.1.8",
    "//generated/third-party/rust:percent-encoding",
    "//generated/third-party/rust:serde",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "utf-8-0.7.5",
    srcs = ["vendor/utf-8-0.7.5/src/lib.rs",
    "vendor/utf-8-0.7.5/src/lossy.rs",
    "vendor/utf-8-0.7.5/src/read.rs",
    ],
    deps = [],
    crate = "utf8",
    crate_root = "vendor/utf-8-0.7.5/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "utf8-ranges-1.0.4",
    srcs = ["vendor/utf8-ranges-1.0.4/src/char_utf8.rs",
    "vendor/utf8-ranges-1.0.4/src/lib.rs",
    ],
    deps = [],
    crate = "utf8_ranges",
    crate_root = "vendor/utf8-ranges-1.0.4/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "utf8parse-0.2.0",
    srcs = ["vendor/utf8parse-0.2.0/src/lib.rs",
    "vendor/utf8parse-0.2.0/src/types.rs",
    "vendor/utf8parse-0.2.0/tests/UTF-8-demo.txt",
    ],
    deps = [],
    crate = "utf8parse",
    crate_root = "vendor/utf8parse-0.2.0/src/lib.rs",
    edition = "2018",
    features = ["default",],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "vec_map",
    srcs = ["vendor/vec_map-0.8.2/src/lib.rs",],
    deps = [],
    crate = "vec_map",
    crate_root = "vendor/vec_map-0.8.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "version_check-0.9.2",
    srcs = ["vendor/version_check-0.9.2/src/channel.rs",
    "vendor/version_check-0.9.2/src/date.rs",
    "vendor/version_check-0.9.2/src/lib.rs",
    "vendor/version_check-0.9.2/src/version.rs",
    ],
    deps = [],
    crate = "version_check",
    crate_root = "vendor/version_check-0.9.2/src/lib.rs",
    edition = "2015",
    features = [],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "want-0.3.0",
    srcs = ["vendor/want-0.3.0/src/lib.rs",],
    deps = [],
    crate = "want",
    crate_root = "vendor/want-0.3.0/src/lib.rs",
    edition = "2018",
    features = [],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:log",
    "//generated/third-party/rust:try-lock-0.2.3",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "warp",
    srcs = ["vendor/warp-0.3.0/examples/tls/cert.pem",
    "vendor/warp-0.3.0/examples/tls/key.rsa",
    "vendor/warp-0.3.0/src/error.rs",
    "vendor/warp-0.3.0/src/filter/and.rs",
    "vendor/warp-0.3.0/src/filter/and_then.rs",
    "vendor/warp-0.3.0/src/filter/boxed.rs",
    "vendor/warp-0.3.0/src/filter/map.rs",
    "vendor/warp-0.3.0/src/filter/map_err.rs",
    "vendor/warp-0.3.0/src/filter/mod.rs",
    "vendor/warp-0.3.0/src/filter/or.rs",
    "vendor/warp-0.3.0/src/filter/or_else.rs",
    "vendor/warp-0.3.0/src/filter/recover.rs",
    "vendor/warp-0.3.0/src/filter/service.rs",
    "vendor/warp-0.3.0/src/filter/unify.rs",
    "vendor/warp-0.3.0/src/filter/untuple_one.rs",
    "vendor/warp-0.3.0/src/filter/wrap.rs",
    "vendor/warp-0.3.0/src/filters/addr.rs",
    "vendor/warp-0.3.0/src/filters/any.rs",
    "vendor/warp-0.3.0/src/filters/body.rs",
    "vendor/warp-0.3.0/src/filters/compression.rs",
    "vendor/warp-0.3.0/src/filters/cookie.rs",
    "vendor/warp-0.3.0/src/filters/cors.rs",
    "vendor/warp-0.3.0/src/filters/ext.rs",
    "vendor/warp-0.3.0/src/filters/fs.rs",
    "vendor/warp-0.3.0/src/filters/header.rs",
    "vendor/warp-0.3.0/src/filters/host.rs",
    "vendor/warp-0.3.0/src/filters/log.rs",
    "vendor/warp-0.3.0/src/filters/method.rs",
    "vendor/warp-0.3.0/src/filters/mod.rs",
    "vendor/warp-0.3.0/src/filters/multipart.rs",
    "vendor/warp-0.3.0/src/filters/path.rs",
    "vendor/warp-0.3.0/src/filters/query.rs",
    "vendor/warp-0.3.0/src/filters/reply.rs",
    "vendor/warp-0.3.0/src/filters/sse.rs",
    "vendor/warp-0.3.0/src/filters/trace.rs",
    "vendor/warp-0.3.0/src/filters/ws.rs",
    "vendor/warp-0.3.0/src/generic.rs",
    "vendor/warp-0.3.0/src/lib.rs",
    "vendor/warp-0.3.0/src/redirect.rs",
    "vendor/warp-0.3.0/src/reject.rs",
    "vendor/warp-0.3.0/src/reply.rs",
    "vendor/warp-0.3.0/src/route.rs",
    "vendor/warp-0.3.0/src/server.rs",
    "vendor/warp-0.3.0/src/service.rs",
    "vendor/warp-0.3.0/src/test.rs",
    "vendor/warp-0.3.0/src/tls.rs",
    "vendor/warp-0.3.0/src/transport.rs",
    ],
    deps = [],
    crate = "warp",
    crate_root = "vendor/warp-0.3.0/src/lib.rs",
    edition = "2018",
    features = ["default",
    "multipart",
    "tls",
    "tokio-rustls",
    "tokio-tungstenite",
    "websocket",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:bytes",
    "//generated/third-party/rust:futures",
    "//generated/third-party/rust:headers-0.3.2",
    "//generated/third-party/rust:http",
    "//generated/third-party/rust:hyper",
    "//generated/third-party/rust:log",
    "//generated/third-party/rust:mime",
    "//generated/third-party/rust:mime_guess-2.0.3",
    "//generated/third-party/rust:multipart-0.17.0",
    "//generated/third-party/rust:percent-encoding",
    "//generated/third-party/rust:pin-project-1.0.2",
    "//generated/third-party/rust:scoped-tls-1.0.0",
    "//generated/third-party/rust:serde",
    "//generated/third-party/rust:serde_json",
    "//generated/third-party/rust:serde_urlencoded-0.7.0",
    "//generated/third-party/rust:tokio",
    "//generated/third-party/rust:tokio-rustls",
    "//generated/third-party/rust:tokio-stream",
    "//generated/third-party/rust:tokio-tungstenite-0.13.0",
    "//generated/third-party/rust:tokio-util",
    "//generated/third-party/rust:tower-service",
    "//generated/third-party/rust:tracing",
    "//generated/third-party/rust:tracing-futures",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "webpki",
    srcs = ["vendor/webpki-0.21.3/src/calendar.rs",
    "vendor/webpki-0.21.3/src/cert.rs",
    "vendor/webpki-0.21.3/src/data/alg-ecdsa-p256.der",
    "vendor/webpki-0.21.3/src/data/alg-ecdsa-p384.der",
    "vendor/webpki-0.21.3/src/data/alg-ecdsa-sha256.der",
    "vendor/webpki-0.21.3/src/data/alg-ecdsa-sha384.der",
    "vendor/webpki-0.21.3/src/data/alg-ed25519.der",
    "vendor/webpki-0.21.3/src/data/alg-rsa-encryption.der",
    "vendor/webpki-0.21.3/src/data/alg-rsa-pkcs1-sha256.der",
    "vendor/webpki-0.21.3/src/data/alg-rsa-pkcs1-sha384.der",
    "vendor/webpki-0.21.3/src/data/alg-rsa-pkcs1-sha512.der",
    "vendor/webpki-0.21.3/src/data/alg-rsa-pss-sha256.der",
    "vendor/webpki-0.21.3/src/data/alg-rsa-pss-sha384.der",
    "vendor/webpki-0.21.3/src/data/alg-rsa-pss-sha512.der",
    "vendor/webpki-0.21.3/src/der.rs",
    "vendor/webpki-0.21.3/src/error.rs",
    "vendor/webpki-0.21.3/src/name.rs",
    "vendor/webpki-0.21.3/src/signed_data.rs",
    "vendor/webpki-0.21.3/src/time.rs",
    "vendor/webpki-0.21.3/src/trust_anchor_util.rs",
    "vendor/webpki-0.21.3/src/verify_cert.rs",
    "vendor/webpki-0.21.3/src/webpki.rs",
    ],
    deps = [],
    crate = "webpki",
    crate_root = "vendor/webpki-0.21.3/src/webpki.rs",
    edition = "2018",
    features = ["default",
    "std",
    "trust_anchor_util",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:ring",
    "//generated/third-party/rust:untrusted-0.7.1",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "zstd",
    srcs = ["vendor/zstd-0.8.0+zstd.1.4.9/src/block/compressor.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/block/decompressor.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/block/mod.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/dict.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/lib.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/functions.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/mod.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/raw.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/read/async_tests.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/read/mod.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/read/tests.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/tests.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/write/async_tests.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/write/mod.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/write/tests.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/zio/mod.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/zio/reader.rs",
    "vendor/zstd-0.8.0+zstd.1.4.9/src/stream/zio/writer.rs",
    ],
    deps = [],
    crate = "zstd",
    crate_root = "vendor/zstd-0.8.0+zstd.1.4.9/src/lib.rs",
    edition = "2018",
    features = ["default",
    "legacy",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:zstd-safe-4.0.0+zstd.1.4.9",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_library(
    name = "zstd-safe-4.0.0+zstd.1.4.9",
    srcs = ["vendor/zstd-safe-4.0.0+zstd.1.4.9/src/lib.rs",
    "vendor/zstd-safe-4.0.0+zstd.1.4.9/src/tests.rs",
    ],
    deps = [],
    crate = "zstd_safe",
    crate_root = "vendor/zstd-safe-4.0.0+zstd.1.4.9/src/lib.rs",
    edition = "2015",
    features = ["legacy",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",
    "//generated/third-party/rust:zstd-sys",
    ],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "@$(location :zstd-safe-4.0.0+zstd.1.4.9-build-script-build-args)",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
third_party_rust_binary(
    name = "zstd-safe-4.0.0+zstd.1.4.9-build-script-build",
    srcs = ["vendor/zstd-safe-4.0.0+zstd.1.4.9/build.rs",
    "vendor/zstd-safe-4.0.0+zstd.1.4.9/src/lib.rs",
    "vendor/zstd-safe-4.0.0+zstd.1.4.9/src/tests.rs",
    ],
    deps = [],
    crate = "build_script_build",
    crate_root = "vendor/zstd-safe-4.0.0+zstd.1.4.9/build.rs",
    edition = "2015",
    features = ["legacy",
    "std",
    ],
    mapped_srcs = {
    },
    deps = [],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",],
    env = {
    },
    unittests = False,
)
third_party_rust_library(
    name = "zstd-sys",
    srcs = ["vendor/zstd-sys-1.5.0+zstd.1.4.9/src/bindings.rs",
    "vendor/zstd-sys-1.5.0+zstd.1.4.9/src/bindings_experimental.rs",
    "vendor/zstd-sys-1.5.0+zstd.1.4.9/src/bindings_std.rs",
    "vendor/zstd-sys-1.5.0+zstd.1.4.9/src/bindings_std_experimental.rs",
    "vendor/zstd-sys-1.5.0+zstd.1.4.9/src/lib.rs",
    ],
    deps = [],
    crate = "zstd_sys",
    crate_root = "vendor/zstd-sys-1.5.0+zstd.1.4.9/src/lib.rs",
    edition = "2015",
    features = ["default",
    "experimental",
    "legacy",
    "non-cargo",
    "pkg-config",
    "std",
    ],
    mapped_srcs = {
    },
    deps = ["//generated/third-party/rust:libc",],
    named_deps = {
    },
    rustc_flags = ["--cap-lints=allow",
    "-lzstd",
    ],
    env = {
    },
    unittests = False,
    proc_macro = False,
)
